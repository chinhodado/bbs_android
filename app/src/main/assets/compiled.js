var __extends=this.__extends||function(f,a){for(var e in a){if(a.hasOwnProperty(e)){f[e]=a[e]}}function c(){this.constructor=f}c.prototype=a.prototype;f.prototype=new c()};var AfflictionFactory=(function(){function a(){}a.getAffliction=function(b){switch(b){case 7:return new BlindAffliction();case 4:return new DisabledAffliction();case 3:return new FrozenAffliction();case 2:return new ParalysisAffliction();case 1:return new PoisonAffliction();case 5:return new SilentAffliction();case 8:return new BurnAffliction();default:throw new Error("Invalid affliction type!")}};return a})();var Affliction=(function(){function a(b){this.type=b;this.finished=false}a.getAfflictionAdjective=function(b){switch(b){case 7:return"Blinded";case 4:return"Disabled";case 3:return"Frozen";case 2:return"Paralyzed";case 1:return"Poisoned";case 5:return"Silent";case 8:return"Burned";default:throw new Error("Invalid affliction type!")}};a.prototype.canAttack=function(){throw new Error("Implement this")};a.prototype.canUseSkill=function(){return this.canAttack()};a.prototype.canMiss=function(){return false};a.prototype.update=function(b){throw new Error("Implement this")};a.prototype.add=function(b){};a.prototype.isFinished=function(){return this.finished};a.prototype.clear=function(){this.finished=true};a.prototype.getType=function(){return this.type};return a})();var PoisonAffliction=(function(b){__extends(a,b);function a(){b.call(this,1);this.percent=0;this.finished=false}a.prototype.canAttack=function(){return true};a.prototype.update=function(c){var d=Math.floor(c.originalStats.hp*this.percent/100);if(d>a.MAX_DAMAGE){d=a.MAX_DAMAGE}BattleModel.getInstance().damageToTargetDirectly(c,d,"poison")};a.prototype.add=function(d){var e=d.percent;if(!e){e=a.DEFAULT_PERCENT}this.percent+=e;var c=e*a.MAX_STACK_NUM;if(this.percent>c){this.percent=c}};a.DEFAULT_PERCENT=5;a.MAX_STACK_NUM=2;a.MAX_DAMAGE=99999;return a})(Affliction);var ParalysisAffliction=(function(a){__extends(b,a);function b(){a.call(this,2)}b.prototype.canAttack=function(){return this.isFinished()};b.prototype.update=function(){this.clear()};return b})(Affliction);var FrozenAffliction=(function(a){__extends(b,a);function b(){a.call(this,3)}b.prototype.canAttack=function(){return this.isFinished()};b.prototype.update=function(){this.clear()};return b})(Affliction);var DisabledAffliction=(function(b){__extends(a,b);function a(){b.call(this,4)}a.prototype.canAttack=function(){return this.isFinished()};a.prototype.update=function(){this.clear()};return a})(Affliction);var SilentAffliction=(function(a){__extends(b,a);function b(){a.call(this,5);this.validTurnNum=0}b.prototype.canAttack=function(){return true};b.prototype.canUseSkill=function(){return this.isFinished()};b.prototype.update=function(){if(--this.validTurnNum<=0){this.clear()}};b.prototype.add=function(c){this.validTurnNum=c.turnNum};return b})(Affliction);var BlindAffliction=(function(b){__extends(a,b);function a(){b.call(this,7);this.missProb=0;this.finished=false;this.validTurnNum=0}a.prototype.canAttack=function(){return true};a.prototype.canMiss=function(){return Math.random()<=this.missProb};a.prototype.update=function(){if(--this.validTurnNum<=0){this.clear()}};a.prototype.add=function(c){this.validTurnNum=c.turnNum;this.missProb=c.missProb};return a})(Affliction);var BurnAffliction=(function(b){__extends(a,b);function a(){b.call(this,8);this.damage=0;this.values=[]}a.prototype.canAttack=function(){return true};a.prototype.update=function(c){BattleModel.getInstance().damageToTargetDirectly(c,this.damage,"burn")};a.prototype.add=function(e){var c=this.values;c.push(e.damage);c.sort(function(g,f){return f-g});this.damage=0;for(var d=0;d<a.STACK_NUM;d++){if(c[d]){this.damage+=c[d]}}};a.STACK_NUM=3;return a})(Affliction);var BattleGraphic=(function(){function a(){this.coordArray={1:[],2:[]};if(a._instance){throw new Error("Error: Instantiation failed: Use getInstance() instead of new.")}a._instance=this;this.logger=BattleLogger.getInstance();this.battle=BattleModel.getInstance();this.cardMan=CardManager.getInstance()}a.getInstance=function(){if(a._instance===null){throw new Error("You're not supposed to create this object this way")}return a._instance};a.removeInstance=function(){a._instance=null};a.prototype.displayFormationAndFamOnCanvas=function(){if(a.GRAPHIC_DISABLED){return}var G={};G[1]=this.battle.player1.formation.getFormationConfig();var t=this.battle.player2.formation.getFormationConfig();var H=[];var E;for(var F=0;F<5;F++){switch(t[F]){case 1:E=3;break;case 2:E=2;break;case 3:E=1;break}H.push(E)}G[2]=H;var c=a.wr;var J=a.hr;var p=SVG("svg").size(c*400,J*600).attr("id","mainSvg").attr("class","svg");for(var C=1;C<=2;C++){if(C==2){var n=p.image("img/skillBg.png",c*300,J*29).move(c*55,J*5).attr("id","p2SkillBg");var s=p.text("placeholder").font({size:c*14}).fill({color:"#fff"}).attr("id","p2SkillText");p.group().attr("id","p2SkillBgTextGroup").add(n).add(s).opacity(0)}else{if(C==1){n=p.image("img/skillBg.png",c*300,J*29).move(c*55,J*270).attr("id","p1SkillBg");s=p.text("placeholder").font({size:c*14}).fill({color:"#fff"}).attr("id","p1SkillText");p.group().attr("id","p1SkillBgTextGroup").add(n).add(s).opacity(0).move(0,J*300)}}var j=c*350;var k=J*80;var I=j/10;var z=k/2;var g=[];this.coordArray[C]=g;var A=p.group().attr("id","p"+C+"group");if((a.HIDE_PLAYER1&&C==1)||(a.HIDE_PLAYER2&&C==2)){A.hide()}if(C==1){A.move(c*30,c*400)}else{if(C==2){A.move(c*30,c*100)}}for(F=0;F<5;F++){var D=((F+1)*2-1)*I;var B=(G[C][F]-1)*z;g.push([D,B])}if(a.SHOW_FORMATION_LINE){for(F=0;F<5;F++){var o=10;var w=p.circle(o).move(g[F][0]-o/2,g[F][1]-o/2);A.add(w)}for(F=0;F<4;F++){var q=p.line(g[F][0],g[F][1],g[F+1][0],g[F+1][1]).stroke({width:1});A.add(q)}}var b=[];var e=this.cardMan.getPlayerCurrentMainCards(this.battle.getPlayerById(C));var f=this.cardMan.getPlayerOriginalReserveCards(this.battle.getPlayerById(C));for(var d=0;d<e.length;d++){b.push(getScaledFamiliarWikiaImageLink(e[d].imageLink,e[d].fullName,a.IMAGE_WIDTH_BIG))}for(F=0;F<5;F++){var h=g[F][0]-a.IMAGE_WIDTH/2;var y=g[F][1]-a.IMAGE_WIDTH*1.5/2;var u=p.image(b[F]).move(h,y).attr("id","p"+C+"f"+F+"image").loaded(function(i){this.size(a.IMAGE_WIDTH)});var m=p.text("0").font({size:c*22,family:a.FONT}).attr({fill:"#fff",stroke:"#000","stroke-width":J*2+"px"}).center(g[F][0],g[F][1]).attr("id","p"+C+"f"+F+"damageText").opacity(0);var v=p.image("img/explosion.png",c*70,c*70).move(h,y).attr("id","p"+C+"f"+F+"explosion").opacity(0);var l=p.group().attr("id","p"+C+"f"+F+"group");l.add(u);l.add(m);l.add(v);var x=function(i){var L=CardManager.getInstance();var K=L.getCurrentMainCardByIndex(i[0],i[1]);return function(){showCardDetailDialog(L.getCardInfoForDialog(K))}};l.on("click",x([C,F]));A.add(l);if(this.battle.isBloodClash){var r=new Image();r.src=getScaledFamiliarWikiaImageLink(f[F].imageLink,f[F].fullName,a.IMAGE_WIDTH_BIG)}}}};a.prototype.resetInitialField=function(){for(var c=1;c<=2;c++){for(var b=0;b<5;b++){this.displayHP(100,c,b,0);this.getAfflictionText(c,b).hide()}}this.displayAllCardImages(0)};a.prototype.displayAllCardImages=function(c){var h=this.logger.getFieldAtMajorIndex(c);for(var g=1;g<=2;g++){for(var d=0;d<5;d++){var e=SVG.get("p"+g+"f"+d+"image");var b=h["player"+g+"Cards"][d];e.load(getScaledFamiliarWikiaImageLink(b.imageLink,b.fullName,a.IMAGE_WIDTH_BIG))}}};a.prototype.displayHP=function(c,t,j,h){var m=SVG.get("mainSvg");var i=this.coordArray[t][j][0]-a.IMAGE_WIDTH/2;var s=this.coordArray[t][j][1]-a.IMAGE_WIDTH*1.5/2;var u=Math.round(i);var f=s+a.IMAGE_WIDTH*1.5;var r=a.IMAGE_WIDTH;var o=a.hr*5;if(c<0){c=0}var g="p"+t+"f"+j+"hp";var p=SVG.get(g);if(!p){p=m.rect(r,o).style({"stroke-width":a.wr*1,stroke:"#000000"}).attr("id",g).move(u,f);var l="p"+t+"f"+j+"group";var k=SVG.get(l);k.add(p)}var q="p"+t+"f"+j+"hpGradient";var n=SVG.get(q);var b=1;if(!isNaN(h)){b=h}if(!n){n=m.gradient("linear",function(v){v.at({offset:"100%",color:"#00ff00"}).attr("id","p"+t+"f"+j+"hpgs1");v.at({offset:"100%",color:"transparent"}).attr("id","p"+t+"f"+j+"hpgs2")}).attr("id",q);p.fill(n)}else{var e=SVG.get("p"+t+"f"+j+"hpgs1");var d=SVG.get("p"+t+"f"+j+"hpgs2");e.animate(b+"s").update({offset:c+"%"});d.animate(b+"s").update({offset:c+"%"})}this.displayDeadAliveFamiliar(t,j,c<=0)};a.prototype.displayDamageTextAndHP=function(g,d,e,c){var n=this.logger.getFieldAtMinorIndex(e,c);var l=n["player"+g+"Cards"][d];var k=l.stats;var j=l.originalStats;var o=this.coordArray[g][d][0];var m=this.coordArray[g][d][1];var i=this.logger.minorEventLog[e][c];if(i.missed){var h="missed"}else{if(i.evaded){h="evaded"}else{if(i.isKilled){h="killed"}else{h=Math.abs(i.amount)+""}}}var b="#fff";if(i.amount>0){b="#00ff00"}var f=SVG.get("p"+g+"f"+d+"damageText");f.text(h).font({size:a.wr*22}).attr({fill:b}).center(o,m).opacity(1).front();f.animate({duration:"2s"}).opacity(0);this.displayHP(k.hp/j.hp*100,g,d)};a.prototype.displayWard=function(c,f,e,b){var h=this.logger.minorEventLog[e][b];if(h.missed){return}var d;switch(h.wardUsed){case 1:d=5;break;case 2:d=6;break;case 3:d=7;break;default:return}var g=this.getWard(c,f,d);g.opacity(1).animate({delay:"0.5s"}).opacity(0)};a.prototype.displayAfflictionText=function(d,f,e,b){var g=this.logger.minorEventLog[e][b];var c=this.getAfflictionText(d,f);if(g.affliction.isFinished){c.hide()}else{var h=Affliction.getAfflictionAdjective(g.affliction.type);c.text(h).show()}};a.prototype.displayAllAfflictionText=function(e){var g=this.logger.getFieldAtMajorIndex(e);for(var c=1;c<=2;c++){for(var d=0;d<5;d++){var b=this.getAfflictionText(c,d);var f=g["player"+c+"Cards"][d];if(!f.affliction){b.hide()}else{var h=Affliction.getAfflictionAdjective(f.affliction.type);b.text(h).show()}}}};a.prototype.displayPostDamage=function(c,e,d,b){this.displayWard(c,e,d,b);this.displayDamageTextAndHP(c,e,d,b)};a.prototype.displayDeadAliveFamiliar=function(b,e,d){var f;if(1){f=document.getElementById("p"+b+"f"+e+"image");if(d){f.style.opacity=0.4}else{f.style.opacity=1}}else{f=SVG.get("p"+b+"f"+e+"image");var c=SVG.get("darkenFilter");if(d){if(!c){f.filter(function(g){g.componentTransfer({rgb:{type:"linear",slope:0.05}})});c=f.filterer;c.attr("id","darkenFilter");f.filter(c)}else{f.filter(c)}}else{f.unfilter()}if(d){f.style.opacity=0.2}else{f.style.opacity=1}}};a.prototype.displayMajorEventAnimation=function(f){var c=this.logger.majorEventLog;var e=this;if(f>=c.length){onBattleFinished();return}if(!c[f]){if(a.PLAY_MODE=="AUTO"){var b=+f+1;this.displayMajorEventAnimation(b)}return}if(a.PLAY_MODE=="AUTO"){var d=function(){e.displayMajorEventAnimation(f+1)}}if(c[f].skillId&&SkillDatabase[c[f].skillId].isAutoAttack){this.displayMinorEventAnimation(f,0,{callback:d})}else{var g=function(){e.displayMinorEventAnimation(f,0,{callback:d})};this.displayProcSkill(c[f].executorId,c[f].skillId,{callback:g})}};a.prototype.displayProcSkill=function(o,h,g){if(!o||!h){if(g.callback){g.callback()}return}var e=this.cardMan.getCardById(o);var m=this.getCardImageGroup(e);if(!g.noProcEffect){var l=1.3;var f=m.cx();var d=m.cy();var c=1,k=0.5;if(g.durationRatio){c*=g.durationRatio;k*=g.durationRatio}if(Skill.isMagicSkill(h)){var b=this.getProcEffect(e.getPlayerId(),e.formationColumn,"spellCircle")}else{b=this.getProcEffect(e.getPlayerId(),e.formationColumn,"lineSpark")}SVG.get("p"+e.getPlayerId()+"f"+e.formationColumn+"group").front();b.opacity(1);b.animate({duration:"3s"}).rotate(180).after(function(){this.rotate(0);this.remove()});m.animate({duration:c+"s"}).transform({a:l,b:0,c:0,d:l,e:f-l*f,f:d-l*d}).after(function(){this.animate({duration:c+"s",delay:k+"s"}).transform({a:1,b:0,c:0,d:1,e:f-1*f,f:d-1*d}).after(function(){b.opacity(0).remove();if(g.callback){g.callback()}})})}var n=SVG.get("p"+e.getPlayerId()+"SkillBgTextGroup");var p=SVG.get("p"+e.getPlayerId()+"SkillText");var j=a.hr*(e.getPlayerId()==1?272:8);var i=SkillDatabase[h].name;p.text(i).move(a.wr*(55+150)-p.bbox().width/2,j);n.animate({duration:"0.5s"}).opacity(1).after(function(){this.animate({duration:"0.5s",delay:"1.5s"}).opacity(0)})};a.prototype.displayMinorEventAnimation=function(e,c,d){if(d===void 0){d={}}var b=this.logger.minorEventLog;if(!b[e]||c>=b[e].length){if(d.callback){d.callback()}return}var f=b[e][c];switch(f.type){case 6:if(c<b[e].length){this.displayMinorEventAnimation(e,c+1,d)}break;case 1:if(!f.executorId){this.displayHpChangeEvent(e,c,d)}else{this.displayBattleEvent(e,c,d)}break;case 2:this.displayStatusEvent(e,c,d);break;case 9:this.displayBcAddProbEvent(e,c,d);break;case 3:this.displayAfflictionEvent(e,c,d);break;case 8:this.displayReserveSwitchEvent(e,c,d);break;case 5:this.displayDescriptionEvent(e,c,d);break;case 7:this.displayReviveEvent(e,c,d);break;case 4:this.displayProtectEvent(e,c,d);break;case 51:this.displayBattleDescriptionEvent(e,c,d);break;default:throw new Error("Invalid minor event type!")}};a.prototype.displayBattleDescriptionEvent=function(e,c,d){var b=this.logger.minorEventLog;var f=b[e][c];if(c<b[e].length){this.getMainBattleEffect().text(f.battleDesc).center(a.wr*200,a.hr*300).opacity(1).animate({duration:"3s"}).opacity(0);this.displayMinorEventAnimation(e,c+1,d)}};a.prototype.displayStatusEvent=function(d,c,i){var e=this.logger.minorEventLog;var h=e[d][c];if(c<e[d].length){var k=this.cardMan.getCardById(h.targetId);var n=this.coordArray[k.getPlayerId()][k.formationColumn][0];var m=this.coordArray[k.getPlayerId()][k.formationColumn][1];if(h.status.type==5||h.status.type==6||h.status.type==7){var b=this.getWard(k.getPlayerId(),k.formationColumn,h.status.type);b.opacity(1).animate({delay:"0.5s"}).opacity(0)}else{var p=a.wr*18;if(h.status.isDispelled){var j="dispelled"}else{if(h.status.isClearDebuff){j="cleared"}else{if(h.status.isAllUp){j="All Stats Up";p=a.wr*15}else{if(h.status.type==18){j="EXTRA ACT"}else{if(h.status.type==16){j="Revive On"}else{if(h.status.type==8){j="Prob. Up"}else{if(h.status.type==17){j="HP Up"}else{var l=h.amount<0?" Down":" Up";var g=Skill.getStatusModified(h.skillId);j=ENUM.StatusType[g[0]]+l;if(g[1]){var o=ENUM.StatusType[g[1]]+l;j=j+"\n"+o}}}}}}}}var f=SVG.get("p"+k.getPlayerId()+"f"+k.formationColumn+"damageText");f.text(j).center(n,m).font({size:p}).opacity(1).animate({delay:"0.5s"}).opacity(0)}this.displayMinorEventAnimation(d,c+1,i)}};a.prototype.displayReviveEvent=function(c,b,i){var d=this.logger.minorEventLog;var h=d[c][b];var g=this.cardMan.getCardById(h.executorId);var l=this.getCardImageGroup(g);l.front();SVG.get("p"+g.getPlayerId()+"group").front();if(b<d[c].length){var k=this.cardMan.getCardById(h.targetId);var f=k.getPlayerId();var j=k.formationColumn;var n=this.coordArray[f][j][0];var m=this.coordArray[f][j][1];var e=SVG.get("p"+f+"f"+j+"damageText");e.text("REVIVED").center(n,m).font({size:a.wr*18}).opacity(1).animate({delay:"0.5s"}).opacity(0);this.displayHP(h.reviveHPRatio*100,f,j);this.getAfflictionText(f,j).hide();this.displayMinorEventAnimation(c,b+1,i)}};a.prototype.displayProtectEvent=function(c,l,n){var u=this.logger.minorEventLog;var x=u[c][l];var j=this;var b=this.cardMan.getCardById(x.executorId);var e=this.getCardImageGroup(b);var v=e.rbox().x;var f=e.rbox().y;e.front();SVG.get("p"+b.getPlayerId()+"group").front();if(l<u[c].length){var p=this.cardMan.getCardById(x.protect.protectedId);var k=this.getCardImageGroup(p);var o=this.cardMan.getCardById(x.protect.attackerId);var g=this.getCardImageGroup(o);var s=k.rbox().x;var w=k.rbox().y;var t=g.rbox().x;var d=g.rbox().y;this.displayProcSkill(b.id,x.skillId,{noProcEffect:true});var q=70;if(b.getPlayerId()==1){q*=-1}var h=0.5;var i=0.5;if(x.protect.counter&&Skill.isIndirectSkill(x.protect.counteredSkillId)){h=0.1;i=0.1}var m=u[c][l+1];var r=SVG.get("p"+b.getPlayerId()+"f"+b.formationColumn+"explosion");e.animate({duration:h+"s"}).move(s-v,w-f+q).after(function(){if(Skill.isIndirectSkill(m.skillId)){var z=0.2;if(Skill.isWisAutoAttack(m.skillId)){var y=j.getProcEffect(o.getPlayerId(),o.formationColumn,"spellCircle");y.animate({duration:"0.2s"}).opacity(1);z=0.5}else{if(Skill.isAtkAutoAttack(m.skillId)){y=j.getProcEffect(o.getPlayerId(),o.formationColumn,"lineSpark");y.animate({duration:"0.2s"}).opacity(1);z=0.5}}r.animate({duration:z+"s"}).opacity(1).after(function(){r.opacity(0);if(y){y.remove()}j.displayPostDamage(b.getPlayerId(),b.formationColumn,c,l+1);e.animate({duration:i+"s"}).move(0,0).after(function(){j.displayMinorEventAnimation(c,l+2,n)})})}else{SVG.get("p"+o.getPlayerId()+"group").front();g.animate({duration:"0.5s"}).move(e.rbox().x-t,e.rbox().y-d).after(function(){r.opacity(1);j.displayPostDamage(b.getPlayerId(),b.formationColumn,c,l+1);g.animate({duration:"0.3s"}).move(0,0);e.animate({duration:i+"s"}).move(0,0).after(function(){r.opacity(0);j.displayMinorEventAnimation(c,l+2,n)})})}})}};a.prototype.displayReserveSwitchEvent=function(d,b,j){var e=this.logger.minorEventLog;var i=e[d][b];var k=this;if(b<e[d].length){var h=this.cardMan.getCardById(i.reserveSwitch.mainId);var m=this.cardMan.getCardById(i.reserveSwitch.reserveId);var n=this.getCardImageGroup(h);var l=h.getPlayerId();var g=this.getCardImage(h);var f=getScaledFamiliarWikiaImageLink(m.imageLink,m.fullName,a.IMAGE_WIDTH_BIG);g.load(f);var c=l==1?255:-255;n.move(0,c).animate(1000).move(0,0).after(function(){k.displayMinorEventAnimation(d,b+1,j)});this.displayHP(100,l,h.formationColumn,0);this.getAfflictionText(l,h.formationColumn).hide()}};a.prototype.displayDescriptionEvent=function(f,c,d){var b=this.logger.minorEventLog;var g=b[f][c];var e=this;var i=this.cardMan.getCardById(g.executorId);var h=this.getCardImageGroup(i);h.front();SVG.get("p"+i.getPlayerId()+"group").front();if(c<b[f].length){if(!g.noProcEffect){this.displayProcSkill(i.id,g.skillId,{callback:function(){e.displayMinorEventAnimation(f,c+1,d)},durationRatio:0.5})}else{this.displayProcSkill(i.id,g.skillId,{noProcEffect:true});this.displayMinorEventAnimation(f,c+1,d)}}};a.prototype.displayBcAddProbEvent=function(c,b,g){var d=this.logger.minorEventLog;var f=d[c][b];if(b<d[c].length){if(f.bcAddProb.isMain){var h=this.cardMan.getCardById(f.bcAddProb.targetId);var j=this.coordArray[h.getPlayerId()][h.formationColumn][0];var i=this.coordArray[h.getPlayerId()][h.formationColumn][1];var e=SVG.get("p"+h.getPlayerId()+"f"+h.formationColumn+"damageText");e.text("+10%").center(j,i).font({size:a.wr*25}).opacity(1).animate({delay:"2s"}).opacity(0)}this.displayMinorEventAnimation(c,b+1,g)}};a.prototype.displayAfflictionEvent=function(e,c,d){var b=this.logger.minorEventLog;var f=b[e][c];if(c<b[e].length){var g=this.cardMan.getCardById(f.targetId);this.displayAfflictionText(g.getPlayerId(),g.formationColumn,e,c);this.displayMinorEventAnimation(e,c+1,d)}};a.prototype.displayHpChangeEvent=function(e,c,d){var b=this.logger.minorEventLog;var f=b[e][c];if(c<b[e].length){var g=this.cardMan.getCardById(f.targetId);this.displayPostDamage(g.getPlayerId(),g.formationColumn,e,c);this.displayMinorEventAnimation(e,c+1,d)}};a.prototype.displayBattleEvent=function(d,n,q){var u=this.logger.minorEventLog;var h=this.logger.majorEventLog;var C=u[d][n];var l=this;var B=this.cardMan.getCardById(C.targetId);var D=this.getCardImageGroup(B);var o=D.rbox().x;var m=D.rbox().y;var c=this.cardMan.getCardById(C.executorId);var e=this.getCardImageGroup(c);var w=e.rbox().x;var f=e.rbox().y;e.front();SVG.get("p"+c.getPlayerId()+"group").front();var s=SVG.get("p"+B.getPlayerId()+"f"+B.formationColumn+"explosion");if(Skill.isAoeSkill(C.skillId)){var A=[];if(C.executorId===h[d].executorId&&C.skillId===h[d].skillId){var p=this.logger.getTargetsInMajorEvent(d)}else{p=this.logger.getNestedTargetsInMajorEvent(d,n);var z=true}if((z&&q.noNestedAttackAnim)||(!z&&q.noAttackAnim)){var k=true}for(var v=0;v<p.length;v++){var b=this.cardMan.getCardById(p[v]).formationColumn;A.push(SVG.get("p"+B.getPlayerId()+"f"+b+"explosion"))}if(k){this.displayPostDamage(B.getPlayerId(),B.formationColumn,d,n);this.displayMinorEventAnimation(d,n+1,q)}else{var r=0.4;if(Skill.isWisAutoAttack(C.skillId)){var t=this.getProcEffect(c.getPlayerId(),c.formationColumn,"spellCircle");t.animate({duration:"0.2s"}).opacity(1);r=0.8}else{if(Skill.isAtkAutoAttack(C.skillId)){t=this.getProcEffect(c.getPlayerId(),c.formationColumn,"lineSpark");t.animate({duration:"0.2s"}).opacity(1);r=0.8}}if(!z){q.noAttackAnim=true}else{q.noNestedAttackAnim=true}function g(H,E,i,y,G,x,F){return function(){for(var I=0;I<F.length;I++){F[I].opacity(0)}if(x){x.remove()}H.displayPostDamage(G.getPlayerId(),G.formationColumn,E,i);H.displayMinorEventAnimation(E,i+1,y)}}for(v=0;v<A.length;v++){if(v==A.length-1){var j=g(l,d,n,q,B,t,A)}A[v].animate({duration:r+"s"}).opacity(1).after(j)}}}else{if(Skill.isIndirectSkill(C.skillId)){r=0.2;if(Skill.isWisAutoAttack(C.skillId)){t=this.getProcEffect(c.getPlayerId(),c.formationColumn,"spellCircle");t.animate({duration:"0.2s"}).opacity(1);r=0.4}s.animate({duration:r+"s"}).opacity(1).after(function(){s.opacity(0);if(t){t.remove()}l.displayPostDamage(B.getPlayerId(),B.formationColumn,d,n);l.displayMinorEventAnimation(d,n+1,q)})}else{e.animate({duration:"0.5s"}).move(o-w,m-f).after(function(){if(!C.missed){s.opacity(1)}l.displayPostDamage(B.getPlayerId(),B.formationColumn,d,n);this.animate({duration:"0.5s"}).move(0,0).after(function(){s.opacity(0);l.displayMinorEventAnimation(d,n+1,q)})})}}};a.prototype.getCardImage=function(b){return SVG.get("p"+b.getPlayerId()+"f"+b.formationColumn+"image")};a.prototype.getCardImageGroup=function(b){return SVG.get("p"+b.getPlayerId()+"f"+b.formationColumn+"group")};a.prototype.getWard=function(c,f,e){var d,b;switch(e){case 5:d="physicalWard";b="physical_ward.png";break;case 6:d="magicalWard";b="magical_ward.png";break;case 7:d="breathWard";b="breath_ward.png";break;default:throw new Error("Invalid type of ward")}var g=SVG.get("p"+c+"f"+f+d);if(!g){g=SVG.get("mainSvg").image("img/"+b,a.wr*70,a.wr*70).center(this.coordArray[c][f][0],this.coordArray[c][f][1]).attr("id","p"+c+"f"+f+d).opacity(0);SVG.get("p"+c+"f"+f+"group").add(g)}return g};a.prototype.getAfflictionText=function(c,d){var b=SVG.get("p"+c+"f"+d+"afflictText");if(!b){b=SVG.get("mainSvg").text("Paralyzed").font({size:a.wr*14,family:a.FONT}).attr({fill:"#fff",stroke:"#000","stroke-width":a.AFFLICTION_TEXT_STROKE_WIDTH}).center(this.coordArray[c][d][0],this.coordArray[c][d][1]+a.IMAGE_WIDTH*1.5/2+a.hr*20).attr("id","p"+c+"f"+d+"afflictText").hide();SVG.get("p"+c+"f"+d+"group").add(b)}return b};a.prototype.getProcEffect=function(b,f,e){var c=e=="spellCircle"?"circle_blue.png":"lineSpark.png";var d=SVG.get("mainSvg").image("img/"+c,a.wr*150,a.wr*150).center(this.coordArray[b][f][0],this.coordArray[b][f][1]).attr("id","p"+b+"f"+f+"spellCircle").opacity(0);SVG.get("p"+b+"f"+f+"group").add(d);return d};a.prototype.getMainBattleEffect=function(){var b=SVG.get("battleText");if(!b){b=SVG.get("mainSvg").text("0").font({size:a.wr*24,family:a.FONT}).attr({fill:"#fff",stroke:"#000","stroke-width":a.AFFLICTION_TEXT_STROKE_WIDTH}).center(a.wr*200,a.hr*300).attr("id","battleText").opacity(0)}return b};a.HIDE_PLAYER1=false;a.HIDE_PLAYER2=false;a.GRAPHIC_DISABLED=false;a.SHOW_FORMATION_LINE=false;a.wr=(1&&typeof window!=="undefined")?window.innerWidth/400:1;a.hr=(1&&typeof window!=="undefined")?window.innerHeight/600:1;a.IMAGE_WIDTH=Math.floor(a.wr*70);a.IMAGE_WIDTH_BIG=Math.floor(a.wr*120);a.PLAY_MODE="MANUAL";a.FONT="Alegreya Sans, Cooper Black";a.AFFLICTION_TEXT_STROKE_WIDTH=a.wr+"px";a._instance=null;return a})();var BattleLogger=(function(){function a(){this.minorEventLog=[];this.minorEventFields=[];this.majorEventLog=[];this.currentTurn=0;if(a._instance){throw new Error("Error: Instantiation failed: Use getInstance() instead of new.")}a._instance=this}a.getInstance=function(){if(a._instance===null){a._instance=new a()}return a._instance};a.removeInstance=function(){a._instance=null};a.prototype.displayMajorEvent=function(c){if(!a.IS_DEBUG_MODE){return}var e=this.majorEventLog[c];var g="turn"+this.currentTurn+"events";var b=document.getElementById("battleEventDiv");var f=document.getElementById(g);if(!f){f=document.createElement("ul");f.setAttribute("id",g);b.appendChild(f)}var d=document.createElement("li");d.innerHTML="<a>"+e.description+"</a>";d.setAttribute("tabindex",c+"");d.setAttribute("id",c+"");d.onclick=function(){a.getInstance().displayEventLogAtIndex(this.id)};f.appendChild(d)};a.prototype.addMajorEvent=function(b){if(BattleModel.IS_MASS_SIMULATION){return}this.majorEventLog.push(b);this.displayMajorEvent(this.majorEventLog.length-1)};a.prototype.bblogTurn=function(d){if(BattleModel.IS_MASS_SIMULATION||!a.IS_DEBUG_MODE){return}var b=document.getElementById("battleEventDiv");var c=document.createElement("p");c.innerHTML=d;b.appendChild(c)};a.prototype.displayMinorEvent=function(e){if(BattleModel.IS_MASS_SIMULATION||!a.IS_DEBUG_MODE){return}var g="turn"+this.currentTurn+"events";var f=document.getElementById(g);var c=f.lastChild;var b=c.getElementsByClassName("ul")[0];if(!b){b=document.createElement("ul");c.appendChild(b)}var d=document.createElement("li");d.innerHTML="<a>"+e+"</a>";b.appendChild(d)};a.prototype.displayEventLogAtIndex=function(d){if(!a.IS_DEBUG_MODE){return}var m=BattleGraphic.getInstance();var y=(d==0)?0:d-1;var s=this.getFieldAtMajorIndex(y);var c=this.getFieldAtMajorIndex(d);for(var o=1;o<=2;o++){var g=c["player"+o+"Cards"];for(var u=0;u<5;u++){var w=g[u].stats;var h=g[u].originalStats;var q=g[u].status;var n=g[u].affliction;var i=document.getElementById("player"+o+"Fam"+u);var v=this.getAdjustedStat(h.atk,q.atk,q.isNewLogic[1]);var l=this.getAdjustedStat(h.def,q.def,q.isNewLogic[2]);var e=this.getAdjustedStat(h.wis,q.wis,q.isNewLogic[3]);var k=this.getAdjustedStat(h.agi,q.agi,q.isNewLogic[4]);var b={name:g[u].name,hp:"HP: "+w.hp,atk:"ATK: "+v,def:"DEF: "+l,wis:"WIS: "+e,agi:"AGI: "+k};if(q.attackResistance!=0){b.physicalResist="PW: "+q.attackResistance}if(q.magicResistance!=0){b.magicalResist="MW: "+q.magicResistance}if(q.breathResistance!=0){b.breathResist="BW: "+q.breathResistance}if(q.willAttackAgain!=0){b.willAttackAgain="Extra action: Yes"}if(q.skillProbability!=0){b.skillProbability="Extra prob.: "+q.skillProbability}if(q.hpShield!=0){b.hpShield="HP Shld.: "+q.hpShield}if(n){b.affliction="Affliction: "+Affliction.getAfflictionAdjective(n.type);if(n.type===5){b.affliction+=(" ("+n.validTurnNum+" turn)")}else{if(n.type===1){b.affliction+=(" ("+n.percent+" %)")}else{if(n.type===8){b.affliction+=(" ("+n.damage+")")}else{b.affliction+=" (1 turn)"}}}}for(var r=0;this.minorEventLog[d]&&r<this.minorEventLog[d].length;r++){var x=this.minorEventLog[d][r];if(x.targetId==g[u].id){if(x.type==1){b.hp=this.decorateText(b.hp,x.amount<0)}else{if(x.type==2){if(x.status.type==1){b.atk=this.decorateText(b.atk,x.amount<0)}else{if(x.status.type==2){b.def=this.decorateText(b.def,x.amount<0)}else{if(x.status.type==3){b.wis=this.decorateText(b.wis,x.amount<0)}else{if(x.status.type==4){b.agi=this.decorateText(b.agi,x.amount<0)}else{if(x.status.type==5){b.physicalResist=this.decorateText(b.physicalResist,false)}else{if(x.status.type==6){b.magicalResist=this.decorateText(b.magicalResist,false)}else{if(x.status.type==7){b.breathResist=this.decorateText(b.breathResist,false)}else{if(x.status.type==18){b.willAttackAgain=this.decorateText(b.willAttackAgain,false)}else{if(x.status.type==8){b.skillProbability=this.decorateText(b.skillProbability,false)}else{if(x.status.type==17){b.hpShield=this.decorateText(b.hpShield,false)}}}}}}}}}}}else{if(x.type==3){if(!x.affliction.isFinished){b.affliction=this.decorateText(b.affliction,false)}}}}}}if(this.minorEventLog[d]&&this.minorEventLog[d][0].executorId==g[u].id){b.name="<b>"+b.name+"</b>"}i.innerHTML=b.name+"<br>"+b.hp+"<br>"+b.atk+"<br>"+b.def+"<br>"+b.wis+"<br>"+b.agi+(b.physicalResist?("<br>"+b.physicalResist):"")+(b.magicalResist?("<br>"+b.magicalResist):"")+(b.breathResist?("<br>"+b.breathResist):"")+(b.willAttackAgain?("<br>"+b.willAttackAgain):"")+(b.skillProbability?("<br>"+b.skillProbability):"")+(b.hpShield?("<br>"+b.hpShield):"")+(b.affliction?("<br>"+b.affliction):"");var t=s["player"+o+"Cards"][u];m.displayHP(t.stats.hp/t.originalStats.hp*100,o,u,0)}}m.displayAllCardImages(d);m.displayAllAfflictionText(y);m.displayMajorEventAnimation(d)};a.prototype.displayInfoText=function(){if(a.INFOTEXT_DISPLAYED){return}var i=CardManager.getInstance();var h=BattleModel.getInstance();var c=this.getRandomModeText(+h.p1RandomMode);var b=this.getRandomModeText(+h.p2RandomMode);var g=1?$("#infoDivP1mobile")[0]:$("#infoDivP1")[0];var e=1?$("#infoDivP2mobile")[0]:$("#infoDivP2")[0];var f=1?$("#infoDivP1TitleMobile")[0]:$("#infoDivP1Title")[0];var d=1?$("#infoDivP2TitleMobile")[0]:$("#infoDivP2Title")[0];if(!h.p1RandomMode||!BattleModel.IS_MASS_SIMULATION){g.innerHTML=i.getPlayerMainBrigString(h.player1)}if(!h.p2RandomMode||!BattleModel.IS_MASS_SIMULATION){e.innerHTML=i.getPlayerMainBrigString(h.player2)}if(h.isBloodClash){if(!h.p1RandomMode||!BattleModel.IS_MASS_SIMULATION){g.innerHTML+="<br><br>"+i.getPlayerReserveBrigString(h.player1)}if(!h.p2RandomMode||!BattleModel.IS_MASS_SIMULATION){e.innerHTML+="<br><br>"+i.getPlayerReserveBrigString(h.player2)}}f.innerHTML+=c;d.innerHTML+=b;a.INFOTEXT_DISPLAYED=true};a.prototype.displayWarningText=function(){if(a.WARNINGTEXT_DISPLAYED){return}var e=true;var d=CardManager.getInstance();var k=BattleModel.getInstance();var g=d.getPlayerCurrentMainCards(k.player1);var f=d.getPlayerCurrentMainCards(k.player2);var l=g[0].dbId;var j=f[0].dbId;for(var h=1;h<5;h++){if(g[h].dbId!=l||f[h].dbId!=j){e=false;break}}if(k.isBloodClash){var b=d.getPlayerOriginalReserveCards(k.player1);var o=d.getPlayerOriginalReserveCards(k.player2);for(h=0;h<5;h++){if(b[h].dbId!=l||o[h].dbId!=j){e=false;break}}}if(l==j){e=false}if(e){var n=document.getElementById("simDiv");var m=document.getElementById("gameDiv");var c="<p><b>Note:</b> It seems that you using a 5v5 or 10v10 battle to determine whether "+g[0].name+" or "+f[0].name+' is "stronger". This is <b>NOT</b> a recommended way of comparing two familiars.</p>';n.innerHTML+=c;m.innerHTML+=c}a.WARNINGTEXT_DISPLAYED=true};a.prototype.getRandomModeText=function(b){switch(b){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:return" (random "+ENUM.RandomBrigText[b]+")";default:return""}};a.prototype.getAdjustedStat=function(c,f,b){var e=c+f;if(e<0){e=0}if(b){var d=c*Card.NEW_DEBUFF_LOW_LIMIT_FACTOR;e=(e>d)?e:d}return e};a.prototype.getFieldAtMajorIndex=function(d){if(!this.minorEventLog[d]){return this.getFieldAtMajorIndex(d-1)}var c=this.minorEventLog[d].length;var b=this.minorEventFields[d].length;if(c!==b){throw new Error("Log length and stored fields length are not equal!")}return JSON.parse(this.minorEventFields[d][b-1])};a.prototype.getFieldAtMinorIndex=function(c,b){return JSON.parse(this.minorEventFields[c][b])};a.prototype.decorateText=function(d,b){var c;if(b){c="<span style='color:red'><b>"}else{c="<span style='color:green'><b>"}return c+d+"</b></span>"};a.prototype.addMinorEvent=function(c){if(BattleModel.IS_MASS_SIMULATION){return}var b=this.majorEventLog.length-1;if(!this.minorEventLog[b]){this.minorEventLog[b]=[]}this.minorEventLog[b].push(c);if(!this.minorEventFields[b]){this.minorEventFields[b]=[]}this.minorEventFields[b].push(this.getCurrentFieldJSON());this.displayMinorEvent(c.description)};a.prototype.getCurrentFieldJSON=function(){var b={player1Cards:getSerializableObjectArray(BattleModel.getInstance().p1_mainCards),player2Cards:getSerializableObjectArray(BattleModel.getInstance().p2_mainCards)};return JSON.stringify(b)};a.prototype.getTargetsInMajorEvent=function(e){var b=[];var f=this.majorEventLog[e];for(var c=0;c<this.minorEventLog[e].length;c++){var d=this.minorEventLog[e][c];if(d.executorId===f.executorId&&d.skillId===f.skillId){b.push(d.targetId)}}return b};a.prototype.getNestedTargetsInMajorEvent=function(j,b){var d=[];var c=this.minorEventLog[j][b];var e=c.executorId;var h=c.skillId;for(var f=b;f<this.minorEventLog[j].length;f++){var g=this.minorEventLog[j][f];if(g.executorId===e&&g.skillId===h){d.push(g.targetId)}}return d};a.prototype.startBattleLog=function(){if(BattleModel.IS_MASS_SIMULATION){return}this.addMajorEvent({description:"Battle start"});this.addMinorEvent({type:6,description:"Everything ready"});this.displayEventLogAtIndex(0)};a.IS_DEBUG_MODE=true;a.INFOTEXT_DISPLAYED=false;a.WARNINGTEXT_DISPLAYED=false;a._instance=null;return a})();var BrigGenerator=(function(){function a(){}a.getRandomBrig=function(f,j,h){var e=FamiliarDatabase.getRandomFamList(+f,j);var d=[];var c=h?9:4;if(h){var g=getRandomInt(0,c);d[g]=getRandomElement(FamiliarDatabase.getWarlordList())}for(var b=0;b<=c;b++){if(!d[b]){d[b]=getRandomElement(e)}}return d};a.initializeBrigs=function(u,l,m){if(l===void 0){l={}}var t=BattleModel.getInstance();var k=t.isBloodClash;var j=[];var g=[];var e=[];var h=[];var f=Skill.getAvailableSkillsForSelect();if(!m){m=localStorage.tierList}if(l.p1RandomMode){j=a.getRandomBrig(l.p1RandomMode,m,k);for(var s=0;s<3;s++){e.push(+getRandomElement(f))}}else{j=u.p1_cardIds;e=u.p1_warlordSkillIds}if(l.p2RandomMode){g=a.getRandomBrig(l.p2RandomMode,m,k);for(s=0;s<3;s++){h.push(+getRandomElement(f))}}else{g=u.p2_cardIds;h=u.p2_warlordSkillIds}for(s=0;s<10;s++){if(s>=5&&!k){break}var c=famDatabase[j[s]];var q=famDatabase[g[s]];var b=c.skills;if(c.isWarlord){b=e}var o=q.skills;if(q.isWarlord){o=h}var d=this.makeSkillArray(b);var r=this.makeSkillArray(o);var p=new Card(j[s],t.player1,s,d);var n=new Card(g[s],t.player2,s,r);if(s<5){t.p1_mainCards[s]=p;t.p2_mainCards[s]=n;t.p1_originalMainCards[s]=p;t.p2_originalMainCards[s]=n;t.allCurrentMainCards.push(p);t.allCurrentMainCards.push(n)}else{if(s>=5&&k){t.p1_reserveCards[s%5]=p;t.p2_reserveCards[s%5]=n;t.p1_originalReserveCards[s%5]=p;t.p2_originalReserveCards[s%5]=n}}t.allCardsById[p.id]=p;t.allCardsById[n.id]=n}};a.makeSkillArray=function(c){var d=[];for(var b=0;b<3;b++){if(c[b]){d.push(new Skill(c[b]))}}return d};return a})();var ENUM;(function(l){(function(t){t[t.IS_MOBILE=1]="IS_MOBILE"})(l.Setting||(l.Setting={}));var c=l.Setting;(function(t){t[t.OPENING=1]="OPENING";t[t.ACTIVE=2]="ACTIVE";t[t.DEFENSE=3]="DEFENSE";t[t.FIELD=4]="FIELD";t[t.PROTECT=5]="PROTECT";t[t.EVADE=6]="EVADE";t[t.ACTION_ON_DEATH=16]="ACTION_ON_DEATH"})(l.SkillType||(l.SkillType={}));var o=l.SkillType;(function(t){t[t.BUFF=1]="BUFF";t[t.DEBUFF=2]="DEBUFF";t[t.ATTACK=3]="ATTACK";t[t.MAGIC=4]="MAGIC";t[t.COOP=5]="COOP";t[t.REVIVE=6]="REVIVE";t[t.KILL=7]="KILL";t[t.STEAL=8]="STEAL";t[t.CHARGE=9]="CHARGE";t[t.DRAIN=11]="DRAIN";t[t.PROTECT=12]="PROTECT";t[t.COUNTER=13]="COUNTER";t[t.PROTECT_COUNTER=14]="PROTECT_COUNTER";t[t.TREASURE_HUNTER=15]="TREASURE_HUNTER";t[t.DISPELL=16]="DISPELL";t[t.SUICIDE=17]="SUICIDE";t[t.HEAL=18]="HEAL";t[t.AFFLICTION=19]="AFFLICTION";t[t.SURVIVE=20]="SURVIVE";t[t.DEBUFFATTACK=21]="DEBUFFATTACK";t[t.DEBUFFINDIRECT=22]="DEBUFFINDIRECT";t[t.RANDOM=24]="RANDOM";t[t.COPY=25]="COPY";t[t.IMITATE=26]="IMITATE";t[t.EVADE=27]="EVADE";t[t.PROTECT_REFLECT=28]="PROTECT_REFLECT";t[t.COUNTER_DISPELL=29]="COUNTER_DISPELL";t[t.TURN_ORDER_CHANGE=31]="TURN_ORDER_CHANGE";t[t.CASTER_BASED_DEBUFF=32]="CASTER_BASED_DEBUFF";t[t.CASTER_BASED_DEBUFF_ATTACK=33]="CASTER_BASED_DEBUFF_ATTACK";t[t.CASTER_BASED_DEBUFF_MAGIC=34]="CASTER_BASED_DEBUFF_MAGIC";t[t.DRAIN_ATTACK=36]="DRAIN_ATTACK";t[t.DRAIN_MAGIC=37]="DRAIN_MAGIC";t[t.ONHIT_DEBUFF=38]="ONHIT_DEBUFF";t[t.ONHIT_BUFF=39]="ONHIT_BUFF";t[t.CLEAR_DEBUFF=40]="CLEAR_DEBUFF";t[t.COUNTER_INDIRECT=41]="COUNTER_INDIRECT"})(l.SkillFunc||(l.SkillFunc={}));var s=l.SkillFunc;(function(t){t[t.DEFAULT=0]="DEFAULT";t[t.ATK=1]="ATK";t[t.WIS=2]="WIS";t[t.AGI=3]="AGI";t[t.HEAL=4]="HEAL";t[t.BUFF=5]="BUFF";t[t.DEBUFF=6]="DEBUFF";t[t.REFLECT=7]="REFLECT";t[t.ATK_WIS=8]="ATK_WIS";t[t.ATK_AGI=9]="ATK_AGI";t[t.WIS_AGI=10]="WIS_AGI"})(l.SkillCalcType||(l.SkillCalcType={}));var f=l.SkillCalcType;(function(t){t[t.ALL=0]="ALL";t[t.NORMAL=1]="NORMAL";t[t.SKILL=2]="SKILL";t[t.NOT_COUNTER=3]="NOT_COUNTER";t[t.COUNTER=4]="COUNTER"})(l.ProtectAttackType||(l.ProtectAttackType={}));var p=l.ProtectAttackType;(function(t){t[t.HP=0]="HP";t[t.ATK=1]="ATK";t[t.DEF=2]="DEF";t[t.WIS=3]="WIS";t[t.AGI=4]="AGI"})(l.StatType||(l.StatType={}));var m=l.StatType;(function(t){t[t.ATK=1]="ATK";t[t.DEF=2]="DEF";t[t.WIS=3]="WIS";t[t.AGI=4]="AGI";t[t.ATTACK_RESISTANCE=5]="ATTACK_RESISTANCE";t[t.MAGIC_RESISTANCE=6]="MAGIC_RESISTANCE";t[t.BREATH_RESISTANCE=7]="BREATH_RESISTANCE";t[t.SKILL_PROBABILITY=8]="SKILL_PROBABILITY";t[t.ALL_STATUS=9]="ALL_STATUS";t[t.ACTION_ON_DEATH=16]="ACTION_ON_DEATH";t[t.HP_SHIELD=17]="HP_SHIELD";t[t.WILL_ATTACK_AGAIN=18]="WILL_ATTACK_AGAIN"})(l.StatusType||(l.StatusType={}));var q=l.StatusType;(function(t){t[t.EITHER_SIDE=1]="EITHER_SIDE";t[t.BOTH_SIDES=2]="BOTH_SIDES";t[t.SELF_BOTH_SIDES=3]="SELF_BOTH_SIDES";t[t.ALL=4]="ALL";t[t.ENEMY_NEAR_1=5]="ENEMY_NEAR_1";t[t.ENEMY_NEAR_2=6]="ENEMY_NEAR_2";t[t.ENEMY_NEAR_3=7]="ENEMY_NEAR_3";t[t.ENEMY_ALL=8]="ENEMY_ALL";t[t.ENEMY_FRONT=9]="ENEMY_FRONT";t[t.ENEMY_MID=10]="ENEMY_MID";t[t.ENEMY_REAR=11]="ENEMY_REAR";t[t.ENEMY_FRONT_ALL=12]="ENEMY_FRONT_ALL";t[t.ENEMY_MID_ALL=13]="ENEMY_MID_ALL";t[t.ENEMY_REAR_ALL=14]="ENEMY_REAR_ALL";t[t.ENEMY_FRONT_MID_ALL=15]="ENEMY_FRONT_MID_ALL";t[t.ENEMY_RANDOM_3=16]="ENEMY_RANDOM_3";t[t.ENEMY_RANDOM_6=17]="ENEMY_RANDOM_6";t[t.ENEMY_REAR_RANDOM_3=18]="ENEMY_REAR_RANDOM_3";t[t.ENEMY_RANDOM_4=19]="ENEMY_RANDOM_4";t[t.ENEMY_RANDOM_5=20]="ENEMY_RANDOM_5";t[t.MYSELF=21]="MYSELF";t[t.EVERYONE=22]="EVERYONE";t[t.ENEMY_RANDOM_2=23]="ENEMY_RANDOM_2";t[t.WIDE_ALL=24]="WIDE_ALL";t[t.WIDE_ENEMY_ALL=25]="WIDE_ENEMY_ALL";t[t.WIDE_NEIGHBOR=26]="WIDE_NEIGHBOR";t[t.WIDE_SELF_NEIGHBOR=27]="WIDE_SELF_NEIGHBOR";t[t.RIGHT=28]="RIGHT";t[t.SELF_RIGHT=29]="SELF_RIGHT";t[t.LEFT=30]="LEFT";t[t.SELF_LEFT=31]="SELF_LEFT";t[t.ENEMY_NEAR_4=32]="ENEMY_NEAR_4";t[t.ENEMY_NEAR_5=33]="ENEMY_NEAR_5";t[t.ENEMY_FRONT_REAR_ALL=34]="ENEMY_FRONT_REAR_ALL";t[t.ATTACKER=35]="ATTACKER";t[t.SELF_IMMEDIATE_RIGHT=36]="SELF_IMMEDIATE_RIGHT";t[t.SELF_IMMEDIATE_LEFT=37]="SELF_IMMEDIATE_LEFT";t[t.FRIEND_RANDOM=101]="FRIEND_RANDOM";t[t.FRIEND_RANDOM_2=102]="FRIEND_RANDOM_2";t[t.FRIEND_RANDOM_3=103]="FRIEND_RANDOM_3";t[t.FRIEND_RANDOM_4=104]="FRIEND_RANDOM_4";t[t.FRIEND_RANDOM_5=105]="FRIEND_RANDOM_5";t[t.FRIEND_RANDOM_6=106]="FRIEND_RANDOM_6";t[t.FRIEND_SELF_RANDOM=111]="FRIEND_SELF_RANDOM";t[t.FRIEND_SELF_RANDOM_2=112]="FRIEND_SELF_RANDOM_2";t[t.FRIEND_SELF_RANDOM_3=113]="FRIEND_SELF_RANDOM_3";t[t.FRIEND_SELF_RANDOM_4=114]="FRIEND_SELF_RANDOM_4";t[t.FRIEND_SELF_RANDOM_5=115]="FRIEND_SELF_RANDOM_5";t[t.FRIEND_SELF_RANDOM_6=116]="FRIEND_SELF_RANDOM_6";t[t.FRIEND_UNIQUE_RANDOM=121]="FRIEND_UNIQUE_RANDOM";t[t.FRIEND_UNIQUE_RANDOM_2=122]="FRIEND_UNIQUE_RANDOM_2";t[t.FRIEND_UNIQUE_RANDOM_3=123]="FRIEND_UNIQUE_RANDOM_3";t[t.FRIEND_UNIQUE_RANDOM_4=124]="FRIEND_UNIQUE_RANDOM_4";t[t.FRIEND_UNIQUE_RANDOM_5=125]="FRIEND_UNIQUE_RANDOM_5";t[t.FRIEND_UNIQUE_RANDOM_6=126]="FRIEND_UNIQUE_RANDOM_6";t[t.FRIEND_SELF_UNIQUE_RANDOM=131]="FRIEND_SELF_UNIQUE_RANDOM";t[t.FRIEND_SELF_UNIQUE_RANDOM_2=132]="FRIEND_SELF_UNIQUE_RANDOM_2";t[t.FRIEND_SELF_UNIQUE_RANDOM_3=133]="FRIEND_SELF_UNIQUE_RANDOM_3";t[t.FRIEND_SELF_UNIQUE_RANDOM_4=134]="FRIEND_SELF_UNIQUE_RANDOM_4";t[t.FRIEND_SELF_UNIQUE_RANDOM_5=135]="FRIEND_SELF_UNIQUE_RANDOM_5";t[t.FRIEND_SELF_UNIQUE_RANDOM_6=136]="FRIEND_SELF_UNIQUE_RANDOM_6";t[t.FORCED_SELF_RANDOM_1=142]="FORCED_SELF_RANDOM_1";t[t.FORCED_SELF_RANDOM_2=143]="FORCED_SELF_RANDOM_2";t[t.FORCED_SELF_RANDOM_3=144]="FORCED_SELF_RANDOM_3";t[t.FORCED_SELF_RANDOM_4=145]="FORCED_SELF_RANDOM_4";t[t.FORCED_SELF_UNIQUE_RANDOM_2=153]="FORCED_SELF_UNIQUE_RANDOM_2";t[t.FORCED_SELF_UNIQUE_RANDOM_3=154]="FORCED_SELF_UNIQUE_RANDOM_3";t[t.FORCED_SELF_UNIQUE_RANDOM_4=155]="FORCED_SELF_UNIQUE_RANDOM_4";t[t.BOTH_SIDES_SCALED=202]="BOTH_SIDES_SCALED";t[t.SELF_BOTH_SIDES_SCALED=203]="SELF_BOTH_SIDES_SCALED";t[t.ALL_SCALED=204]="ALL_SCALED";t[t.ENEMY_ALL_SCALED=208]="ENEMY_ALL_SCALED";t[t.ENEMY_FRONT_ALL_SCALED=212]="ENEMY_FRONT_ALL_SCALED";t[t.ENEMY_MID_ALL_SCALED=213]="ENEMY_MID_ALL_SCALED";t[t.ENEMY_REAR_ALL_SCALED=214]="ENEMY_REAR_ALL_SCALED";t[t.ENEMY_FRONT_MID_ALL_SCALED=215]="ENEMY_FRONT_MID_ALL_SCALED";t[t.ENEMY_FRONT_REAR_ALL_SCALED=234]="ENEMY_FRONT_REAR_ALL_SCALED";t[t.ENEMY_VARYING_RANDOM_4=419]="ENEMY_VARYING_RANDOM_4"})(l.SkillRange||(l.SkillRange={}));var r=l.SkillRange;(function(t){t[t.PHYSICAL=1]="PHYSICAL";t[t.MAGICAL=2]="MAGICAL";t[t.BREATH=3]="BREATH"})(l.WardType||(l.WardType={}));var d=l.WardType;(function(t){t[t.POISON=1]="POISON";t[t.PARALYSIS=2]="PARALYSIS";t[t.FROZEN=3]="FROZEN";t[t.DISABLE=4]="DISABLE";t[t.SILENT=5]="SILENT";t[t.BLIND=7]="BLIND";t[t.BURN=8]="BURN"})(l.AfflictionType||(l.AfflictionType={}));var b=l.AfflictionType;(function(t){t[t.AGI=0]="AGI";t[t.ATK=1]="ATK";t[t.WIS=2]="WIS";t[t.DEF=3]="DEF";t[t.HP=4]="HP"})(l.BattleTurnOrderType||(l.BattleTurnOrderType={}));var j=l.BattleTurnOrderType;(function(t){t[t.REAR=3]="REAR";t[t.MID=2]="MID";t[t.FRONT=1]="FRONT"})(l.FormationRow||(l.FormationRow={}));var n=l.FormationRow;(function(t){t[t.SKEIN_5=0]="SKEIN_5";t[t.VALLEY_5=1]="VALLEY_5";t[t.TOOTH_5=2]="TOOTH_5";t[t.WAVE_5=3]="WAVE_5";t[t.FRONT_5=4]="FRONT_5";t[t.MID_5=5]="MID_5";t[t.REAR_5=6]="REAR_5";t[t.PIKE_5=7]="PIKE_5";t[t.SHIELD_5=8]="SHIELD_5";t[t.PINCER_5=9]="PINCER_5";t[t.SAW_5=10]="SAW_5";t[t.HYDRA_5=11]="HYDRA_5"})(l.FormationType||(l.FormationType={}));var g=l.FormationType;(function(t){t[t.ANDROID=1]="ANDROID";t[t.IOS=2]="IOS"})(l.ProcOrderType||(l.ProcOrderType={}));var a=l.ProcOrderType;(function(t){t[t.BLOOD_CLASH=1]="BLOOD_CLASH";t[t.NORMAL=2]="NORMAL"})(l.BattleType||(l.BattleType={}));var h=l.BattleType;(function(t){t[t.NONE=0]="NONE";t[t.ALL=1]="ALL";t[t.XP_ONLY=2]="XP_ONLY";t[t.X_ONLY=3]="X_ONLY";t[t.X_UP=4]="X_UP";t[t.SP_ONLY=5]="SP_ONLY";t[t.SP_UP=6]="SP_UP";t[t.S_ONLY=7]="S_ONLY";t[t.S_UP=8]="S_UP";t[t.AP_ONLY=9]="AP_ONLY";t[t.AP_UP=10]="AP_UP";t[t.A_ONLY=11]="A_ONLY";t[t.A_UP=12]="A_UP"})(l.RandomBrigType||(l.RandomBrigType={}));var e=l.RandomBrigType;(function(t){t[t.all=1]="all";t[t["Tier X+"]=2]="Tier X+";t[t["Tier X"]=3]="Tier X";t[t["Tier X and up"]=4]="Tier X and up";t[t["Tier S+"]=5]="Tier S+";t[t["Tier S+ and up"]=6]="Tier S+ and up";t[t["Tier S"]=7]="Tier S";t[t["Tier S and up"]=8]="Tier S and up";t[t["Tier A+"]=9]="Tier A+";t[t["Tier A+ and up"]=10]="Tier A+ and up";t[t["Tier A"]=11]="Tier A";t[t["Tier A and up"]=12]="Tier A and up"})(l.RandomBrigText||(l.RandomBrigText={}));var i=l.RandomBrigText;(function(t){t[t.HP=1]="HP";t[t.STATUS=2]="STATUS";t[t.AFFLICTION=3]="AFFLICTION";t[t.PROTECT=4]="PROTECT";t[t.DESCRIPTION=5]="DESCRIPTION";t[t.BATTLE_DESCRIPTION=51]="BATTLE_DESCRIPTION";t[t.TEXT=6]="TEXT";t[t.REVIVE=7]="REVIVE";t[t.RESERVE_SWITCH=8]="RESERVE_SWITCH";t[t.BC_ADDPROB=9]="BC_ADDPROB"})(l.MinorEventType||(l.MinorEventType={}));var k=l.MinorEventType})(ENUM||(ENUM={}));var Card=(function(){function a(d,g,h,e){this.bcAddedProb=0;this.lastBattleDamageTaken=0;this.lastBattleDamageDealt=0;this.justMissed=false;this.justEvaded=false;this.openingSkills=[];this.activeSkills=[];this.protectSkills=[];this.defenseSkills=[];this.ondeathSkills=[null,null];this.surviveSkill=null;var c=famDatabase[d];this.name=c.name;this.fullName=c.fullName;this.dbId=d;this.id=g.id*100+h;this.isMounted=c.isMounted;this.isWarlord=c.isWarlord;this.imageLink=c.img;this.stats=new Stats(c.stats[0],c.stats[1],c.stats[2],c.stats[3],c.stats[4]);this.originalStats=new Stats(c.stats[0],c.stats[1],c.stats[2],c.stats[3],c.stats[4]);this.status=new Status();this.isDead=false;this.player=g;this.formationColumn=h%5;this.formationRow=g.formation.getCardRow(this.formationColumn);this.procIndex=Formation.getProcIndex(this.formationRow,this.formationColumn,BattleModel.getInstance().procOrderType);this.skills=e;if(c.autoAttack){this.autoAttack=new Skill(c.autoAttack)}else{this.autoAttack=new Skill(10000)}for(var f=0;f<e.length;f++){var b=e[f];if(b){if(b.skillType===1){this.openingSkills.push(b)}else{if(b.skillType===2){this.activeSkills.push(b)}else{if(b.skillType===5||b.skillType===6){this.protectSkills.push(b)}else{if(b.skillType===3){if(b.skillFunc===20){this.surviveSkill=b}else{this.defenseSkills.push(b)}}else{if(b.skillType===16){this.ondeathSkills[1]=b}}}}}}}}a.prototype.getSerializableObject=function(){return{name:this.name,fullName:this.fullName,dbId:this.dbId,id:this.id,isMounted:this.isMounted,isWarlord:this.isWarlord,imageLink:this.imageLink,stats:this.stats,originalStats:this.originalStats,status:this.status,affliction:this.affliction,isDead:this.isDead,bcAddedProb:this.bcAddedProb,lastBattleDamageTaken:this.lastBattleDamageTaken,lastBattleDamageDealt:this.lastBattleDamageDealt,justMissed:this.justMissed,justEvaded:this.justEvaded,player:this.player,formationColumn:this.formationColumn,formationRow:this.formationRow,procIndex:this.procIndex,skills:getSerializableObjectArray(this.skills),autoAttack:this.autoAttack.getSerializableObject(),openingSkills:getSerializableObjectArray(this.openingSkills),activeSkills:getSerializableObjectArray(this.activeSkills),protectSkills:getSerializableObjectArray(this.protectSkills),defenseSkills:getSerializableObjectArray(this.defenseSkills),ondeathSkills:getSerializableObjectArray(this.ondeathSkills),surviveSkill:this.surviveSkill?this.surviveSkill.getSerializableObject():null}};a.prototype.getRandomOpeningSkill=function(){if(this.openingSkills.length===0){return null}else{return getRandomElement(this.openingSkills)}};a.prototype.getRandomActiveSkill=function(){if(this.activeSkills.length===0){return null}else{return getRandomElement(this.activeSkills)}};a.prototype.getRandomDefenseSkill=function(){if(this.defenseSkills.length===0){return null}else{return getRandomElement(this.defenseSkills)}};a.prototype.getRandomProtectSkill=function(){if(this.protectSkills.length===0){return null}else{return getRandomElement(this.protectSkills)}};a.prototype.getSurviveSkill=function(){return this.surviveSkill};a.prototype.getFirstActiveSkill=function(){return this.activeSkills[0]};a.prototype.getSecondActiveSkill=function(){return this.activeSkills[1]};a.prototype.getBuffOnDeathSkill=function(){return this.ondeathSkills[0]};a.prototype.getInherentOnDeathSkill=function(){return this.ondeathSkills[1]};a.prototype.hasOnDeathSkill=function(){return(this.ondeathSkills[0]!=null)||(this.ondeathSkills[1]!=null)};a.prototype.clearBuffOnDeathSkill=function(){this.ondeathSkills[0]=null;this.status.actionOnDeath=0};a.prototype.getName=function(){return this.name};a.prototype.getPlayerId=function(){return this.player.id};a.prototype.getPlayerName=function(){return this.player.name};a.prototype.getFormationRow=function(){return this.formationRow};a.prototype.getStat=function(b){if(b==="HP"){return this.getHP()}else{if(b==="ATK"){return this.getATK()}else{if(b==="DEF"){return this.getDEF()}else{if(b==="WIS"){return this.getWIS()}else{if(b==="AGI"){return this.getAGI()}else{if(b==="DEFAULT"){return this.getWIS()}else{throw new Error("Invalid stat type")}}}}}}};a.prototype.setAffliction=function(c,b){if(this.affliction){if(this.affliction.getType()===c){this.affliction.add(b);return}else{this.clearAffliction()}}this.affliction=AfflictionFactory.getAffliction(c);this.affliction.add(b)};a.prototype.clearAffliction=function(){if(!this.affliction){return}this.affliction.clear();this.affliction=null};a.prototype.canAttack=function(){return(this.affliction)?this.affliction.canAttack():true};a.prototype.canUseSkill=function(){return(this.affliction)?this.affliction.canUseSkill():true};a.prototype.willMiss=function(){return(this.affliction)?this.affliction.canMiss():false};a.prototype.getAfflictionType=function(){return this.affliction?this.affliction.getType():null};a.prototype.getPoisonPercent=function(){if(!this.affliction||this.affliction.type!=1){return undefined}else{return this.affliction.percent}};a.prototype.getBurnDamage=function(){if(!this.affliction||this.affliction.type!=8){return undefined}else{return this.affliction.damage}};a.prototype.updateAffliction=function(){if(!this.affliction){return false}this.affliction.update(this);if(this.affliction&&this.affliction.isFinished()){this.clearAffliction();return true}return false};a.prototype.changeStatus=function(e,d,c,f){if(c){this.status.isNewLogic[e]=true}if(e===1){this.status.atk+=d}else{if(e===2){this.status.def+=d}else{if(e===3){this.status.wis+=d}else{if(e===4){this.status.agi+=d}else{if(e===5){if(this.status.attackResistance<d){this.status.attackResistance=d}}else{if(e===6){if(this.status.magicResistance<d){this.status.magicResistance=d}}else{if(e===7){if(this.status.breathResistance<d){this.status.breathResistance=d}}else{if(e===8){this.status.skillProbability+=d}else{if(e===18){this.status.willAttackAgain=d}else{if(e===16){var b=new Skill(d);this.ondeathSkills[0]=b;this.status.actionOnDeath=d}else{if(e===17){this.status.hpShield+=d;if(f&&this.status.hpShield>f){this.status.hpShield=f}}else{throw new Error("Invalid status type")}}}}}}}}}}}};a.prototype.clearAllStatus=function(b){for(var c in this.status){if(this.status.hasOwnProperty(c)&&typeof this.status[c]==="number"){if(b(this.status[c])){this.status[c]=0}}}if(this.status.actionOnDeath==0){this.clearBuffOnDeathSkill()}};a.prototype.hasStatus=function(b){var d=false;for(var c in this.status){if(this.status.hasOwnProperty(c)&&typeof this.status[c]==="number"){if(b(this.status[c])){d=true;break}}}return d};a.prototype.getHP=function(){return this.stats.hp};a.prototype.getOriginalHP=function(){return this.originalStats.hp};a.prototype.changeHP=function(b){this.stats.hp+=b;if(this.stats.hp>this.originalStats.hp){this.stats.hp=this.originalStats.hp}if(this.stats.hp<=0){this.stats.hp=0;this.setDead()}};a.prototype.isFullHealth=function(){return this.stats.hp==this.originalStats.hp};a.prototype.getHPRatio=function(){return this.stats.hp/this.originalStats.hp};a.prototype.setDead=function(){this.isDead=true;this.clearAffliction();this.status=new Status()};a.prototype.revive=function(b){if(!this.isDead){throw new Error("You can't revive a card that is not dead!")}this.isDead=false;this.status=new Status();this.stats.hp=this.originalStats.hp*b};a.prototype.getATK=function(){var b=this.stats.atk+this.status.atk;if(b<0){b=0}b=this.adjustByNewDebuffLogic(1,b,this.originalStats.atk);return b};a.prototype.getDEF=function(){var b=this.stats.def+this.status.def;if(b<0){b=0}b=this.adjustByNewDebuffLogic(2,b,this.originalStats.def);return b};a.prototype.getWIS=function(){var b=this.stats.wis+this.status.wis;if(b<0){b=0}b=this.adjustByNewDebuffLogic(3,b,this.originalStats.wis);return b};a.prototype.getAGI=function(){var b=this.stats.agi+this.status.agi;if(b<0){b=0}b=this.adjustByNewDebuffLogic(4,b,this.originalStats.agi);return b};a.prototype.adjustByNewDebuffLogic=function(d,e,b){if(this.status.isNewLogic[d]){var c=b*a.NEW_DEBUFF_LOW_LIMIT_FACTOR;e=(e>c)?e:c}return e};a.prototype.hasWardOfType=function(b){switch(b){case 1:return this.status.attackResistance!==0;case 2:return this.status.magicResistance!==0;case 3:return this.status.breathResistance!==0;default:throw new Error("Invalid type of ward!")}};a.prototype.clearDamagePhaseData=function(){this.lastBattleDamageDealt=0;this.lastBattleDamageTaken=0;this.justMissed=false;this.justEvaded=false};a.NEW_DEBUFF_LOW_LIMIT_FACTOR=0.4;return a})();var Stats=(function(){function a(e,b,d,c,f){this.hp=e;this.atk=b;this.def=d;this.wis=c;this.agi=f}return a})();var Status=(function(){function a(){this.atk=0;this.def=0;this.wis=0;this.agi=0;this.attackResistance=0;this.magicResistance=0;this.breathResistance=0;this.skillProbability=0;this.actionOnDeath=0;this.hpShield=0;this.willAttackAgain=0;this.isNewLogic={}}return a})();var CardManager=(function(){function a(){if(a._instance){throw new Error("Error: Instantiation failed: Use getInstance() instead of new.")}a._instance=this;this.battle=BattleModel.getInstance()}a.getInstance=function(){if(a._instance===null){a._instance=new a()}return a._instance};a.removeInstance=function(){a._instance=null};a.prototype.getSortFunc=function(b){switch(b){case 0:return function(d,c){return c.getAGI()-d.getAGI()};case 1:return function(d,c){return c.getATK()-d.getATK()};case 3:return function(d,c){return c.getDEF()-d.getDEF()};case 2:return function(d,c){return c.getWIS()-d.getWIS()};default:throw new Error("Invalid turn order type!")}};a.prototype.sortAllCurrentMainCards=function(){var b=this.getSortFunc(this.battle.turnOrderBase);this.battle.allCurrentMainCards.sort(b)};a.prototype.getPlayerCurrentMainCardsByProcOrder=function(c){var d=this.getPlayerCurrentMainCards(c);var e=[];for(var b=0;b<d.length;b++){e.push(d[b])}e.sort(function(g,f){return g.procIndex-f.procIndex});return e};a.prototype.getLeftSideCard=function(b){var d=this.getPlayerCurrentMainCards(b.player);var c=b.formationColumn;if(c==0){return null}else{if(c<=4&&c>=1){return d[c-1]}else{throw new Error("Invalid card index")}}};a.prototype.getRightSideCard=function(b){var d=this.getPlayerCurrentMainCards(b.player);var c=b.formationColumn;if(c==4){return null}else{if(c>=0&&c<=3){return d[c+1]}else{throw new Error("Invalid card index")}}};a.prototype.getCardById=function(b){return this.battle.allCardsById[b]};a.prototype.getPlayerCurrentMainCards=function(b){var c=this.battle;if(b===c.player1){return c.p1_mainCards}else{if(b===c.player2){return c.p2_mainCards}else{throw new Error("Invalid player")}}};a.prototype.getPlayerCurrentReserveCards=function(b){var c=this.battle;if(b===c.player1){return c.p1_reserveCards}else{if(b===c.player2){return c.p2_reserveCards}else{throw new Error("Invalid player")}}};a.prototype.getPlayerOriginalMainCards=function(b){var c=this.battle;if(b===c.player1){return c.p1_originalMainCards}else{if(b===c.player2){return c.p2_originalMainCards}else{throw new Error("Invalid player")}}};a.prototype.getPlayerOriginalReserveCards=function(b){var c=this.battle;if(b===c.player1){return c.p1_originalReserveCards}else{if(b===c.player2){return c.p2_originalReserveCards}else{throw new Error("Invalid player")}}};a.prototype.getPlayerAllCurrentCards=function(b){return this.getPlayerCurrentMainCards(b).concat(this.getPlayerCurrentReserveCards(b))};a.prototype.getEnemyCurrentMainCards=function(b){var c=this.battle;if(b===c.player1){return c.p2_mainCards}else{if(b===c.player2){return c.p1_mainCards}else{throw new Error("Invalid player")}}};a.prototype.getEnemyCurrentReserveCards=function(b){var c=this.battle;if(b===c.player1){return c.p2_reserveCards}else{if(b===c.player2){return c.p1_reserveCards}else{throw new Error("Invalid player")}}};a.prototype.getValidSingleTarget=function(e){var d=[];for(var c=0;c<5;c++){if(!e[c].isDead){d.push(c)}}if(d.length===0){return null}var b=getRandomInt(0,d.length-1);return e[d[b]]};a.prototype.getNearestSingleOpponentTarget=function(g){var b=this.getPlayerCurrentMainCards(this.battle.getOppositePlayer(g.player));var d=g.formationColumn;var f=[0,-1,1,-2,2,-3,3,-4,4];for(var c=0;c<f.length;c++){var e=b[d+f[c]];if(e&&!e.isDead){return e}}return null};a.prototype.isAllDeadPlayer=function(b){var c=true;if(this.battle.isBloodClash){if(!this.isNoReserveLeft(b)){c=false}}return this.isAllMainCardsDead(b)&&c};a.prototype.isAllMainCardsDead=function(d){var b=this.getPlayerCurrentMainCards(d);var e=true;for(var c=0;c<b.length;c++){if(!b[c].isDead){e=false;break}}return e};a.prototype.isNoReserveLeft=function(d){var b=this.getPlayerCurrentReserveCards(d);var e=true;for(var c=0;c<b.length;c++){if(b[c]){e=false;break}}return e};a.prototype.isCardInList=function(b,d){var e=false;for(var c=0;c<d.length;c++){if(d[c].id==b.id){e=true;break}}return e};a.prototype.isSameCard=function(c,b){return c.id==b.id};a.prototype.getAllCurrentMainCards=function(){return this.battle.allCurrentMainCards};a.prototype.getAllCurrentCards=function(){var b=this.battle;return b.p1_mainCards.concat(b.p2_mainCards).concat(b.p1_reserveCards).concat(b.p2_reserveCards)};a.prototype.isCurrentMainCard=function(b){return this.isCardInList(b,this.getAllCurrentMainCards())};a.prototype.updateAllCurrentMainCards=function(){var b=this.battle;b.allCurrentMainCards=b.p1_mainCards.concat(b.p2_mainCards)};a.prototype.switchCardInAllCurrentMainCards=function(d,b){var f=this.battle.allCurrentMainCards;var e=false;for(var c=0;c<f.length;c++){if(f[c].id==d.id){e=true;f[c]=b;break}}if(!e){throw new Error("Card not found!")}};a.prototype.getAllMainCardsInPlayerOrder=function(){return this.battle.p1_mainCards.concat(this.battle.p2_mainCards)};a.prototype.getPlayerMainBrigString=function(b){var c=this.getPlayerCurrentMainCards(b);return 1?this.getPlainBrigString(c):this.getHtmlBrigString(c)};a.prototype.getPlayerReserveBrigString=function(b){var c=this.getPlayerOriginalReserveCards(b);return 1?this.getPlainBrigString(c):this.getHtmlBrigString(c)};a.prototype.getHtmlBrigString=function(e){var d="";for(var c=0;c<e.length;c++){var f=(c==0)?"":" - ";var b="showCardDetailDialogById("+e[c].id+");";d+=(f+"<a href='javascript:void(0)' onclick='"+b+"'>"+e[c].name)+"</a>"}return d};a.prototype.getPlainBrigString=function(d){var c="";for(var b=0;b<d.length;b++){var e=(b==0)?"":" - ";c+=(e+d[b].name)}return c};a.prototype.getCurrentMainCardByIndex=function(c,b){var d=this.getPlayerCurrentMainCards(this.battle.getPlayerById(c));return d[b]};a.prototype.getTotalHPRatio=function(g){var f=0;var e=0;for(var d=0,b=g.length;d<b;d++){var c=g[d];if(c){if(!c.isDead){f+=c.getHP()}e+=c.originalStats.hp}}return f/e};a.prototype.getCardInfoForDialog=function(c){var e=[];for(var d=0;d<c.skills.length;d++){var b=c.skills[d];e.push({id:b.id,name:b.name,comment:b.description,maxProbability:b.maxProbability})}return{name:c.fullName,image:getScaledFamiliarWikiaImageLink(c.imageLink,c.fullName,150),hp:c.originalStats.hp,atk:c.originalStats.atk,def:c.originalStats.def,wis:c.originalStats.wis,agi:c.originalStats.agi,maxLevel:99,skills:e,standardAction:{name:"Standard Action",comment:c.autoAttack.description}}};a._instance=null;return a})();var CsRandom=(function(){function a(d){this.seedArray=[];var h;var c,b;var g=(d==-2147483648)?2147483647:Math.abs(d);c=a.MSEED-g;this.seedArray[55]=c;b=1;for(var f=1;f<55;f++){h=(21*f)%55;this.seedArray[h]=b;b=c-b;if(b<0){b+=a.MBIG}c=this.seedArray[h]}for(var e=1;e<5;e++){for(f=1;f<56;f++){this.seedArray[f]-=this.seedArray[1+(f+30)%55];if(this.seedArray[f]<0){this.seedArray[f]+=a.MBIG}}}this.inext=0;this.inextp=21;d=1}a.prototype.sample=function(){return(this.internalSample()*(1/a.MBIG))};a.prototype.internalSample=function(){var c;var d=this.inext;var b=this.inextp;if(++d>=56){d=1}if(++b>=56){b=1}c=this.seedArray[d]-this.seedArray[b];if(c==a.MBIG){c--}if(c<0){c+=a.MBIG}this.seedArray[d]=c;this.inext=d;this.inextp=b;return c};a.prototype.next=function(){return this.internalSample()};a.prototype.getSampleForLargeRange=function(){var b=this.internalSample();var c=(this.internalSample()%2==0)?true:false;if(c){b=-b}var e=b;e+=(2147483647-1);e/=2*2147483647-1;return e};a.prototype.nextInRange=function(c,d){if(c>d){throw new Error("max less than min")}var b=d-c;if(b<=2147483647){return(Math.floor(this.sample()*b)+c)}else{return Math.floor(Math.floor(this.getSampleForLargeRange()*b)+c)}};a.prototype.nextLessThan=function(b){if(b<0){throw new Error("Max value less than 0")}return Math.floor(this.sample()*b)};a.prototype.nextDouble=function(){return this.sample()};a.MBIG=2147483647;a.MSEED=161803398;a.MZ=0;return a})();var famDatabase={11261:{name:"Rahab",stats:[14073,12597,15498,9004,16754],skills:[434],img:"21c",fullName:"Abyssal Rahab II"},11282:{name:"Achilles",stats:[13593,15630,11362,10603,16562],skills:[459,460],img:"1c7",fullName:"Achilles, Fallen Hero II"},10613:{name:"Adara",stats:[16024,12134,17620,10857,9370],skills:[166],img:"268",fullName:"Adara Luck Shot II"},11099:{name:"Adranus",stats:[20223,23517,19855,18609,18046],skills:[347],img:"275",fullName:"Adranus, Lava Beast II"},358:{name:"Aegis",stats:[14560,11280,15530,10600,10100],skills:[64],img:"235",fullName:"Aegis, the Bulwark"},11206:{name:"Aeneas",stats:[14590,15630,13561,10311,13561],skills:[400,401],img:"25c",fullName:"Aeneas, Fallen Hero II"},11385:{name:"Aeshma",stats:[17558,17212,15034,5804,13019],skills:[579],autoAttack:10035,img:"243",fullName:"Aeshma, the Tyrant II"},11344:{name:"Afanc",stats:[16518,8610,14124,16020,13214],skills:[529,530],autoAttack:10003,img:"4a1",fullName:"Afanc, Beast of the Deep II"},21404:{name:"Ah Puch",stats:[22515,9134,18258,20999,17486],skills:[585],autoAttack:10007,img:"460",fullName:"Ah Puch, Lord of Death"},11041:{name:"Ahab",stats:[10273,12001,11342,9978,12342],skills:[195],img:"2ec",fullName:"Ahab, the Colossal Anchor II"},10841:{name:"Alcina",stats:[12684,14169,11356,13682,15755],skills:[269],img:"31b",fullName:"Alcina the Soulsucker II"},11400:{name:"Ales",stats:[18119,18009,16024,10101,5884],skills:[562,563],img:"4d5",fullName:"Ales Darkblood II"},10813:{name:"ASK",stats:[12952,14282,11477,10490,17133],skills:[219],img:"339",fullName:"All-Seeing Keeper II"},10936:{name:"Merrow",stats:[16811,14709,13723,17537,17320],skills:[217],img:"26d",fullName:"Alluring Merrow II"},10972:{name:"Alp",stats:[11917,14120,10928,17168,13366],skills:[277],img:"20d",fullName:"Alp, Dynast of Darkness II"},11436:{name:"Alyssa",stats:[17883,8718,16594,20516,17786],skills:[616,617],autoAttack:10007,img:"41d",fullName:"Alyssa, Black Cat Witch II"},10623:{name:"Warfist",stats:[10904,11417,10466,10660,11830],skills:[156],img:"21a",fullName:"Amazon Warfist II"},11058:{name:"Ammit",stats:[18306,23495,18501,18490,18057],skills:[325],img:"2f9",fullName:"Ammit, Soul Destroyer II"},10717:{name:"Amon",stats:[13171,16128,10755,14861,13214],skills:[47],img:"386",fullName:"Amon, Marquis of Blaze II"},10757:{name:"Amphisbaena",stats:[14861,14850,13030,19855,18024],skills:[202,203],isMounted:true,img:"346",fullName:"Amphisbaena II"},11065:{name:"ABS",stats:[14005,15901,11903,11838,14904],skills:[365],img:"1e0",fullName:"Ancient Beetle Soldier II"},10464:{name:"Andorra",stats:[12538,13621,13510,12134,12342],skills:[142],img:"252",fullName:"Andorra the Indomitable II"},10947:{name:"Ankou",stats:[17017,9628,16854,14308,10246],skills:[345,346],autoAttack:10007,isMounted:true,img:"4d6",fullName:"Ankou, Harbinger of Death II"},10999:{name:"Anne",stats:[12232,13782,12342,13510,15599],skills:[250],img:"13d",fullName:"Anne, the Whirlwind II"},11245:{name:"Anneberg",stats:[19097,18241,17038,8794,16518],skills:[489,490],img:"1e1",fullName:"Anneberg, Steel Steed II"},11292:{name:"Anubis",stats:[14330,17006,12510,10625,14005],skills:[473,474],img:"247",fullName:"Anubis, Keeper of the Dead II"},21288:{name:"Apep",stats:[20543,20975,15503,14302,16729],skills:[468],autoAttack:10017,img:"179",fullName:"Apep the Chaotic"},10593:{name:"Apocalyptic Beast",stats:[14189,15977,15413,13420,14969],skills:[123],img:"15a",fullName:"Apocalyptic Beast II"},11364:{name:"Apsara",stats:[15717,4992,14113,17179,17006],skills:[630,631],autoAttack:10007,img:"152",fullName:"Apsara, Spirit of Water II"},11281:{name:"Chariot",stats:[17342,19346,16453,10376,17472],skills:[464],img:"3da",fullName:"Arcanan Chariot II"},21300:{name:"Fate",stats:[20706,17848,13181,18794,17522],skills:[475],autoAttack:10007,img:"3ee",fullName:"Arcanan Circle of Fate"},11335:{name:"Daemon",stats:[18252,20700,12510,13117,15023],skills:[509,510],img:"249",fullName:"Arcanan Daemon II"},11324:{name:"Death",stats:[20234,19508,13008,13019,18111],skills:[546,547],autoAttack:10028,isMounted:true,img:"25b",fullName:"Arcanan Death II"},11239:{name:"Emperor",stats:[18577,17916,17786,10809,14590],skills:[425,426],img:"102",fullName:"Arcanan Emperor II"},11211:{name:"Empress",stats:[15197,12380,15348,19422,17168],skills:[394,395],img:"104",fullName:"Arcanan Empress II"},11427:{name:"Fool",stats:[20613,20104,18057,13182,11102],skills:[632,633],img:"3f3",isMounted:true,fullName:"Arcanan Fool II"},11311:{name:"Hanged Man",stats:[20505,15002,13008,13030,18024],skills:[480,481],img:"489",fullName:"Arcanan Hanged Man II"},11287:{name:"Hermit",stats:[19205,12066,12586,20722,15002],skills:[453,454],autoAttack:10007,img:"3c5",fullName:"Arcanan Hermit II"},11199:{name:"High Priestess",stats:[17233,8350,20256,19086,14839],skills:[388,389],autoAttack:10007,img:"458",fullName:"Arcanan High Priestess II"},11395:{name:"Judgment",stats:[19996,7754,16009,19508,17753],skills:[573],autoAttack:10003,img:"172",fullName:"Arcanan Judgment II"},11242:{name:"Lovers",stats:[16908,13875,12705,19021,17006],skills:[430,431],autoAttack:10007,img:"3fb",fullName:"Arcanan Lovers II"},11208:{name:"Magus",stats:[15186,12131,17688,19010,15641],skills:[402,403],img:"1bb",fullName:"Arcanan Magus II"},11284:{name:"Might",stats:[18598,19227,10766,13301,17948],skills:[461,462],isMounted:true,img:"2a4",fullName:"Arcanan Might II"},11363:{name:"Moon",stats:[18273,18046,13279,12467,17948],skills:[551,552],autoAttack:10030,img:"3b8",fullName:"Arcanan Moon II"},11360:{name:"Star",stats:[20223,7548,18035,18208,15803],skills:[540,541],autoAttack:10007,img:"475",fullName:"Arcanan Star II"},11394:{name:"Sun",stats:[20299,7982,16356,18013,17916],skills:[570,571],autoAttack:10032,img:"10a",fullName:"Arcanan Sun II"},11332:{name:"Temperance",stats:[19183,3800,20007,19985,18046],skills:[543],autoAttack:10027,img:"38d",fullName:"Arcanan Temperance II"},11329:{name:"Archbishop",stats:[19064,20191,16009,10744,15002],skills:[520],autoAttack:10025,img:"39a",fullName:"Archbishop of the Deep II"},10600:{name:"Ose",stats:[16995,14395,15023,14850,11990],skills:[154],img:"300",fullName:"Archduke Ose II"},11105:{name:"Ares",stats:[25434,21285,21047,16345,17407],skills:[542],img:"180",fullName:"Ares, God of Ruin II"},10372:{name:"Artemisia",stats:[10042,10977,10977,10042,12589],skills:[18],img:"3aa",fullName:"Artemisia Swiftfoot II"},11457:{name:"Asena",stats:[15121,17385,11622,7505,16995],skills:[608],img:"3f8",fullName:"Asena, Wolfwoman II"},11361:{name:"Ashlee",stats:[17038,16042,15045,13431,17992],skills:[623],autoAttack:10029,img:"3f7",fullName:"Ashlee Steamsaw II"},10595:{name:"Astaroth",stats:[12194,13965,10087,15278,14280],skills:[155],img:"22e",fullName:"Astaroth, Duke of Fear II"},10900:{name:"Aurboda",stats:[11903,15348,11773,18468,11015],skills:[261],img:"315",fullName:"Aurboda, the Great Mother II"},11441:{name:"Ausra",stats:[21913,9596,15998,18403,18154],skills:[638,639],autoAttack:10023,img:"2c8",fullName:"Ausra, the Fall Breeze II"},11388:{name:"Azi",stats:[20375,20202,20104,22899,18057],skills:[572],autoAttack:10033,img:"25b",fullName:"Azi Dahaka II"},10657:{name:"Baal",stats:[14677,15457,12813,14482,16551],skills:[178],img:"22f",fullName:"Baal, Thunder Lord of Hell II"},11168:{name:"Badalisc",stats:[14092,16107,11882,11297,15218],skills:[315],img:"26c",fullName:"Badalisc, the Gourmet II"},11390:{name:"Suzhen",stats:[15998,3096,15002,17504,17006],skills:[81],autoAttack:10031,img:"105",fullName:"Bai Suzhen, Lady of Scales II"},11102:{name:"Balgo",stats:[18585,16037,13962,5799,13510],skills:[349],img:"2fd",fullName:"Balgo, the Cursed Flame II"},11243:{name:"Bandersnatch",stats:[21805,8047,14200,19183,17786],skills:[635],autoAttack:10046,img:"1bc",fullName:"Bandersnatch, Beast Divine II"},10652:{name:"Batraz",stats:[14471,15511,13442,12293,12174],skills:[142],img:"4e3",fullName:"Batraz, the Immortal Hero II"},11371:{name:"Bayam",stats:[13269,7966,12804,17106,16779],skills:[506],autoAttack:10023,img:"171",fullName:"Bayam II"},11025:{name:"Scarecrow",stats:[10625,13756,10490,11001,9342],skills:[256],img:"34d",fullName:"Beheading Scarecrow II"},10659:{name:"Behemoth",stats:[12442,14755,13269,12380,12999],skills:[186],img:"230",fullName:"Behemoth, Thunder Beast II"},10935:{name:"Belisama",stats:[17777,17071,17000,11111,4981],skills:[628],img:"39e",fullName:"Belisama, Flame Goddess II"},10684:{name:"Biast",stats:[13879,12655,10163,13611,9798],skills:[163],img:"229",fullName:"Biast II"},10787:{name:"Black Knight",stats:[12648,16097,11623,11574,13842],skills:[211],img:"19e",fullName:"Black Knight, Soul Hunter II"},10824:{name:"Bolus",stats:[12086,16889,12427,11610,12832],skills:[152],img:"4a0",fullName:"Bolus, the Blue Bolt II"},10977:{name:"Boudica",stats:[9967,11914,8918,13110,12014],skills:[276],img:"2ab",fullName:"Boudica, the Dawn Chief II"},11223:{name:"Brang",stats:[18826,18544,14027,18208,10105],skills:[423],autoAttack:10010,img:"4f3",fullName:"Brang Two-Heads II"},11209:{name:"Rabbit",stats:[18999,13951,20007,9986,18035],skills:[435,436],img:"26e",fullName:"Brass Rabbit"},11194:{name:"Tarantula",stats:[19324,14568,18024,15695,12120],skills:[396,397],autoAttack:10005,img:"271",fullName:"Brass Tarantula II"},11171:{name:"Hyena",stats:[14644,10766,11860,18923,12228],skills:[321],autoAttack:10008,img:"2fc",fullName:"Bronzeclad Hyena II"},11114:{name:"Brownies",stats:[9821,11283,9515,13196,11414],skills:[307],img:"190",fullName:"Brownies, the Uproarious II"},10488:{name:"Bunga",stats:[12269,11049,14182,9612,10343],skills:[125],img:"25d",fullName:"Bunga, the Stalwart II"},11129:{name:"Caassimolar",stats:[16009,24979,15587,10625,12521],skills:[371],img:"1c7",fullName:"Caassimolar, the Chimera II"},11449:{name:"Camazo",stats:[22628,22585,22173,16139,18208],skills:[601,445],autoAttack:10038,img:"26c",fullName:"Camazo, Knight of Bats II"},11119:{name:"Canhel",stats:[15608,19606,17992,11329,16399],skills:[293],img:"254",fullName:"Canhel, Guardian Dragon II"},10997:{name:"Jolly",stats:[14200,16594,14070,18956,15424],skills:[226],img:"214",fullName:"Cap'n Jolly, Sea Scourge II"},11333:{name:"Kidd",stats:[18403,18046,12781,14395,16085],skills:[157,518],img:"442",fullName:"Captain Kidd II"},11062:{name:"Chillweaver",stats:[13293,13196,10611,16144,14489],skills:[2],img:"2b2",fullName:"Cat Sith Chillweaver II"},11090:{name:"CSMM",stats:[14096,10112,10549,15804,17095],skills:[343],autoAttack:10007,img:"26d",fullName:"Cat Sith Magus Master II"},11366:{name:"CSS",stats:[15034,16518,13052,7202,16811],skills:[549],img:"17b",fullName:"Cat Sith Swordswoman II"},11177:{name:"CSW",stats:[15804,16768,14000,5334,16707],skills:[637],autoAttack:10048,img:"1d8",fullName:"Cat Sith Warlord II"},11213:{name:"Cegila",stats:[13149,11492,9498,17504,16995],skills:[354],img:"2a5",fullName:"Cegila, Dragonian Incantator II"},10673:{name:"Cernunnos",stats:[16446,15351,13761,13181,14330],skills:[177],img:"25b",fullName:"Cernunnos II"},10409:{name:"Magma Giant",stats:[12832,12380,13097,11477,11928],skills:[123],img:"363",fullName:"Chaotic Magma Giant II"},10907:{name:"Chiyome",stats:[12635,14148,11369,15817,13510],skills:[238],img:"183",fullName:"Chiyome, the Kamaitachi II"},11306:{name:"Circe",stats:[15002,7776,11947,17017,16009],skills:[487,488],autoAttack:10007,img:"20f",fullName:"Circe, Fallen Heroine II"},11437:{name:"Pumpkin",stats:[16497,7061,12423,17060,15457],skills:[618,619],autoAttack:10007,img:"46b",fullName:"Clockwork Pumpkin II"},11392:{name:"Viper",stats:[14999,12999,14999,7808,17133],skills:[574],img:"338",fullName:"Clockwork Viper II"},10303:{name:"Crystal Gillant",stats:[11832,10896,10439,10439,13317],skills:[11],img:"460",fullName:"Crystal Gillant II"},11095:{name:"Roc",stats:[12073,14879,12559,11501,16510],skills:[322],img:"220",fullName:"Crystalwing Roc II"},10712:{name:"Cuelebre",stats:[13702,16096,12954,11134,13572],skills:[249],img:"28c",fullName:"Cuelebre the Ironscaled II"},11019:{name:"Cursebone",stats:[14807,16952,14146,15652,17721],skills:[248],img:"33e",fullName:"Cursebone Pterosaur II"},10820:{name:"Cyclops",stats:[15868,17147,18360,13214,14449],skills:[218],img:"3ba",fullName:"Cyclops, the Rocky Cliff II"},11328:{name:"Dagon",stats:[23343,22065,18035,19703,18208],skills:[519],img:"36a",fullName:"Dagon II"},10973:{name:"Dagr",stats:[12012,14059,10712,17818,13810],skills:[275],img:"4d2",fullName:"Dagr Sunrider II"},10983:{name:"Danniel",stats:[23571,24990,21458,13951,16204],skills:[292],img:"1e2",fullName:"Danniel, Golden Paladin II"},11415:{name:"Dantalion",stats:[15193,5298,10990,14207,11098],skills:[596],autoAttack:10007,img:"18e",fullName:"Dantalion, Duke of Hell II"},21445:{name:"Darkwind Wyvern",stats:[22211,8270,19352,20917,17649],skills:[607],autoAttack:10042,img:"4dd",fullName:"Darkwind Wyvern"},10905:{name:"Danzo",stats:[14774,17277,14872,17667,16128],skills:[237],img:"464",fullName:"Danzo, Falcon Ninja II"},21308:{name:"Justice",stats:[20795,11717,17470,22225,18005],skills:[494,495],autoAttack:10007,img:"27c",fullName:"Dauntless Justice"},10967:{name:"Deborah",stats:[13550,14157,13442,12987,13929],skills:[222],img:"373",fullName:"Deborah, Knight Immaculate II"},11225:{name:"Dein",stats:[14000,16768,11098,11683,14417],skills:[424],img:"48e",fullName:"Dein, Silent Bomber II"},10722:{name:"Delphyne",stats:[11990,14601,11882,18858,11080],skills:[288],img:"415",fullName:"Delphyne, Thunder Dragon II"},10503:{name:"Desna",stats:[13146,15089,14287,12137,12378],skills:[124],img:"245",fullName:"Desna, Mythic Wendigo II"},10914:{name:"Dharva",stats:[14096,13742,12280,11942,15427],skills:[254],img:"297",fullName:"Dharva Fangclad II"},11096:{name:"Djinn",stats:[14048,17363,13333,19422,16605],skills:[319,320],img:"18d",fullName:"Djinn of the Lamp II"},11355:{name:"Dong",stats:[13489,17000,13196,8150,16110],skills:[545],img:"48b",fullName:"Dong, the Bloody Claw II"},10423:{name:"Doppeladler",stats:[13940,14709,14417,14092,14850],skills:[33],img:"168",fullName:"Doppeladler II"},10691:{name:"Dors",stats:[15435,9433,13268,16464,13019],skills:[446],img:"11d",fullName:"Dors, Demiwyrm Warrior II"},11303:{name:"Dunkleosteus",stats:[14000,8394,13110,16620,15804],skills:[477],autoAttack:10007,img:"222",fullName:"Dunkleosteus, the Rendmaw II"},10272:{name:"Cat Sidhe",stats:[9614,8322,11959,11243,10056],skills:[18],img:"448",fullName:"Earl Cat Sidhe II"},10619:{name:"Ebon",stats:[17493,15543,13431,14330,13788],skills:[157],img:"248",fullName:"Ebon Dragon II"},10756:{name:"Edgardo",stats:[10904,15485,14389,8978,14755],skills:[179],img:"25f",fullName:"Edgardo, Grand Inquisitor II"},11450:{name:"Elsa",stats:[19010,19021,15132,10018,17851],skills:[602],autoAttack:10039,img:"2fe",fullName:"Elsa, Undead Bride II"},21276:{name:"Empusa",stats:[20706,12623,16110,20999,17510],skills:[447],autoAttack:10016,img:"30a",fullName:"Empusa, the Death Scythe"},10317:{name:"Eton",stats:[10904,10490,10490,12952,12952],skills:[94],img:"174",fullName:"Eton, Eater of Darkness II"},10708:{name:"Ettin",stats:[16063,14482,14677,9498,13702],skills:[304],autoAttack:10006,img:"31f",fullName:"Ettin II"},11358:{name:"Europa",stats:[14731,8296,12207,16735,16518],skills:[538,539],autoAttack:10007,img:"425",fullName:"Europa, Fallen Heroine II"},10452:{name:"Evil Eye",stats:[10770,10394,10490,12221,11721],skills:[120],img:"2bf",fullName:"Evil Eye II"},10674:{name:"Fenrir",stats:[15099,16865,22498,13008,11167],skills:[154],img:"1dd",fullName:"Fenrir II"},21352:{name:"Siege Tower",stats:[20007,19750,16915,14021,17567],skills:[548],autoAttack:10029,img:"293",fullName:"Ferocious Siege Tower"},10496:{name:"Bat Demon",stats:[12538,14182,12648,11928,12720],skills:[131],img:"10e",fullName:"Fiendish Bat Demon II"},11435:{name:"Figgo",stats:[15509,16377,13451,6051,16534],skills:[614],img:"275",fullName:"Figgo, Executioner II"},10849:{name:"Fimbul",stats:[12086,13489,12562,16743,12597],skills:[242],img:"24a",fullName:"Fimbul Frostclad II"},10470:{name:"Flame Dragon",stats:[14601,14449,13756,15153,13940],skills:[23],img:"18e",fullName:"Flame Dragon II"},10888:{name:"Flesh Collector Golem",stats:[17450,14536,18089,8664,9661],skills:[253],img:"252",fullName:"Flesh Collector Golem II"},11191:{name:"Freyja",stats:[14709,17125,14027,10213,12380],skills:[387],img:"3c8",fullName:"Freyja, Earth Goddess II"},10473:{name:"Freila",stats:[11928,10490,12453,12221,11417],skills:[16],img:"3f2",fullName:"Freila the Bountiful II"},11190:{name:"Freyr",stats:[16562,19909,15370,12943,15998],skills:[385,386],img:"151",fullName:"Freyr, God of the Harvest II"},10606:{name:"Fomor",stats:[13052,14645,11928,9967,9781],skills:[138],img:"143",fullName:"Fomor the Savage II"},11115:{name:"Bearwolf",stats:[14503,24513,11492,11405,17992],skills:[353],img:"25b",fullName:"Frost Bearwolf II"},10022:{name:"Galahad",stats:[6543,7271,7349,6842,6478],skills:[10000,33,5],isMounted:true,img:"4e2",fullName:"Galahad, Drake Knight II"},11172:{name:"Galatea",stats:[19833,10062,15825,18566,15218],skills:[533],autoAttack:10007,img:"48a",fullName:"Galatea, Nereid II"},201:{name:"Gan Ceann",stats:[7950,10530,8830,8910,8540],skills:[33],img:"2ca",fullName:"Gan Ceann"},10842:{name:"Gargoyle Gatekeeper",stats:[15608,17602,14503,15002,18035],skills:[268],img:"277",fullName:"Gargoyle Gatekeeper II"},21384:{name:"Garshasp",stats:[22002,18058,20019,20007,8223],skills:[578],autoAttack:10034,img:"225",fullName:"Garshasp, the Juggernaut"},10609:{name:"Garuda",stats:[14417,14677,14081,15814,15023],skills:[47],img:"1bf",fullName:"Garuda II"},10571:{name:"Gathgoic",stats:[14839,16128,14980,17948,14709],skills:[141],img:"3fb",fullName:"Gathgoic the Other II"},10742:{name:"Gevi",stats:[15565,15424,18447,13593,11015],skills:[180],img:"255",fullName:"Gevi, Crystal Troll Master II"},10088:{name:"Ghislandi",stats:[12324,13551,13525,12212,12187],skills:[17],img:"468",fullName:"Ghislandi, Iron Heart II"},11271:{name:"Ghislandi L",stats:[18533,20234,14590,10235,16204],skills:[455,456],autoAttack:10015,img:"391",fullName:"Ghislandi, the Unchained II"},11453:{name:"GCE",stats:[15100,7564,11403,17254,16609],skills:[604],autoAttack:10007,img:"333",fullName:"Ghost Carriage Express II"},11304:{name:"Gigantopithecus",stats:[24210,25055,21946,13994,15998],skills:[491],img:"3e5",fullName:"Gigantopithecus II"},11375:{name:"Gilgamesh",stats:[20115,19053,18013,8220,16096],skills:[558,559],img:"1e1",fullName:"Gilgamesh the Bold II"},10177:{name:"Goblin King",stats:[8144,8339,6400,10159,10278],skills:[18],img:"34f",fullName:"Goblin King II"},10011:{name:"Gorgon",stats:[10170,12436,8652,12773,10924],skills:[18],img:"46f",fullName:"Gorgon II"},10611:{name:"Gorlin",stats:[11928,12380,17000,6809,10904],skills:[167],img:"150",fullName:"Gorlin Gold Helm II"},10720:{name:"Goviel",stats:[14135,14547,13604,14926,16616],skills:[204],img:"290",fullName:"Goviel, Hail Knight II"},10551:{name:"Grandor",stats:[14709,17277,15738,13756,11903],skills:[149],img:"365",fullName:"Grandor, Giant of Old II"},10586:{name:"Gregoire",stats:[11708,12121,10318,14854,10159],skills:[144],img:"308",fullName:"Gregoire, Weaponmaster II"},11131:{name:"Gregory",stats:[16192,16121,15558,9794,10294],skills:[372],img:"248",fullName:"Gregory, the Masked Slayer II"},10791:{name:"Grellas",stats:[12066,14796,10636,17374,13073],skills:[212],img:"211",fullName:"Grellas Fellstaff II"},21216:{name:"Gremory",stats:[18466,12819,18945,20426,17009],skills:[411],autoAttack:10007,img:"20b",fullName:"Gremory, the Vermilion Moon"},10784:{name:"Gretch",stats:[16280,15305,12683,15652,13875],skills:[196],img:"3a9",fullName:"Gretch, Chimaera Mistress II"},10182:{name:"Griffin",stats:[11887,9909,14391,14263,11960],skills:[2],img:"457",fullName:"Griffin Mount II"},361:{name:"Griflet",stats:[11520,12970,11430,10110,13780],skills:[10],img:"2b1",fullName:"Griflet, Falcon Knight"},10276:{name:"Grim",stats:[11001,13047,8888,13026,11060],skills:[109],img:"17f",fullName:"Grim Executioner II"},10925:{name:"Grimoire",stats:[15231,18609,10441,8064,15451],skills:[134],img:"49b",fullName:"Grimoire Beast II"},11170:{name:"Gryla",stats:[16529,11622,15868,15294,8740],skills:[308,316],isMounted:true,img:"2c3",fullName:"Gryla, the Lullaby II"},21285:{name:"Guillaume",stats:[21515,20887,16308,12948,18505],skills:[466,467],img:"122",fullName:"Guillaume, Fanatic"},10898:{name:"Hamad",stats:[10294,10367,9881,16416,10951],skills:[265],img:"3fd",fullName:"Hamad, the Sweeping Wind II"},10861:{name:"Haokah",stats:[13476,13928,11111,15706,13245],skills:[232],img:"198",fullName:"Haokah, the Lightning Brave II"},11451:{name:"Hatshepsut",stats:[17049,16334,13041,6097,16096],skills:[603],autoAttack:10040,img:"2bd",fullName:"Hatshepsut, Mummy Queen II"},10951:{name:"Hecatoncheir",stats:[11807,13902,14768,13928,13366],skills:[264],img:"488",fullName:"Hecatoncheir the Adamantine II"},21312:{name:"Hei Long",stats:[20486,13485,16192,20881,17113],skills:[496],autoAttack:10019,img:"1bd",fullName:"Hei Long, the New Moon"},10465:{name:"Heinrich",stats:[16887,13940,15132,13290,14005],skills:[133],img:"305",fullName:"Heinrich the Bold II"},10634:{name:"Hel",stats:[14709,17450,14709,15771,18057],skills:[239,240],img:"1e8",fullName:"Hel, Goddess of Death II"},10895:{name:"Hercinia",stats:[14062,13414,12562,12686,15876],skills:[225],img:"1a4",fullName:"Hercinia the Blest II"},11202:{name:"Hereward",stats:[14927,14000,12524,10951,15498],skills:[391],img:"105",fullName:"Hereward, Storm of Arrows II"},11073:{name:"Hippocamp",stats:[14514,16486,14926,19855,15002],skills:[360,167],img:"4f8",fullName:"Hippocamp II"},10560:{name:"Hippogriff",stats:[9978,11063,11942,9295,10074],skills:[133],img:"43e",fullName:"Hippogriff of Rites II"},10726:{name:"Hlokk",stats:[14328,14462,12832,9271,17133],skills:[502,503],img:"37a",fullName:"Hlokk, Blade of Thunder II"},10635:{name:"Hollofernyiges",stats:[16551,16757,13875,14568,16941],skills:[33],img:"320",fullName:"Hollofernyiges II"},11297:{name:"Hoska",stats:[18996,7906,15096,17023,8881],skills:[484,485],autoAttack:10016,img:"26c",fullName:"Hoska, the Firestroke II"},10704:{name:"Hraesvelg",stats:[12499,17472,11784,12662,13799],skills:[251],img:"3cd",fullName:"Hraesvelg, Corpse Feaster II"},10715:{name:"Hrimthurs",stats:[13414,15572,16144,9783,10600],skills:[205],img:"2e9",fullName:"Hrimthurs the Blizzard II"},11401:{name:"Huan",stats:[14005,14406,13106,9997,16096],skills:[577],img:"1d4",fullName:"Huan, Doomcaller II"},10980:{name:"Hundred-eyed Warrior",stats:[17385,18501,15641,10452,17634],skills:[289],img:"221",fullName:"Hundred-eyed Warrior II"},10970:{name:"Hypnos",stats:[16291,17277,15446,12488,17992],skills:[274],img:"43b",fullName:"Hypnos, Lord of Dreams II"},11393:{name:"Icarus",stats:[15186,14796,14005,7137,17363],skills:[568,569],img:"194",fullName:"Icarus, Fallen Hero II"},10688:{name:"Ignis",stats:[11022,11312,10818,13460,12859],skills:[164],img:"22f",fullName:"Ignis Fatuus II"},10706:{name:"Ijiraq",stats:[13929,14536,9791,17797,12012],skills:[168],img:"21b",fullName:"Ijiraq, the Glacier II"},11064:{name:"Ijiraq L",stats:[16995,14449,17006,19508,12987],skills:[328,329],img:"33c",fullName:"Ijiraq the Brinicle II"},21104:{name:"IIG",stats:[23155,19935,21027,8440,17505],skills:[444,445],img:"15f",fullName:"Impregnable Iron Golem"},11144:{name:"Infested Cyclops",stats:[19508,19508,15392,9997,15348],skills:[364],img:"3db",fullName:"Infested Cyclops II"},11120:{name:"Infested Minotaur",stats:[13691,15294,16031,9390,14070],skills:[299,301],img:"3ab",fullName:"Infested Minotaur II"},10319:{name:"Peryton",stats:[10904,9674,10490,10490,12952],skills:[33],img:"12b",fullName:"Infested Peryton II"},11342:{name:"Ghost Ship",stats:[15365,12879,11928,10951,16803],skills:[525],img:"20f",fullName:"Inhabited Ghost Ship II"},693:{name:"Ioskeha",stats:[13138,13611,11162,15329,13675],skills:[160],img:"222",fullName:"Ioskeha"},10592:{name:"Ira",stats:[12832,14489,8770,11172,17254],skills:[138],img:"46c",fullName:"Ira, Hypnotic Specter II"},10681:{name:"Iron Golem",stats:[16778,13615,17818,9867,8848],skills:[152],img:"29f",fullName:"Iron Golem II"},10746:{name:"Iseult",stats:[12731,10977,11708,15865,14193],skills:[144],img:"13b",fullName:"Iseult the Redeemer II"},11376:{name:"Ishtar",stats:[16009,16074,13106,9022,14265],skills:[560,561],img:"24d",fullName:"Ishtar, Goddess of Love II"},11351:{name:"Ivy",stats:[16341,3882,13803,15889,17998],skills:[536],autoAttack:10026,img:"373",fullName:"Ivy the Verdant II"},11407:{name:"Ixtab",stats:[20007,8502,17472,17504,18013],skills:[588,589],autoAttack:10031,img:"294",fullName:"Ixtab, Guardian of the Dead II"},11009:{name:"Jabberwock",stats:[13994,16193,13008,19508,18024],skills:[270,271],img:"41f",fullName:"Jabberwock, Phantom Dragon II"},11169:{name:"Jack",stats:[13507,9000,12196,16204,16995],skills:[333],autoAttack:10009,img:"10b",fullName:"Jack o' Frost II"},11448:{name:"Jack Rusty",stats:[17021,16123,10148,9539,15121],skills:[609],autoAttack:10044,img:"46a",fullName:"Jack, the Rusty II"},10569:{name:"Jinx-eye",stats:[14709,15998,13832,13832,14915],skills:[146],img:"1c4",fullName:"Jinx-eye Dragon II"},11266:{name:"Jormungandr",stats:[13024,16768,11756,10112,15889],skills:[438],autoAttack:10012,img:"397",fullName:"Jormungandr, World Serpent II"},10510:{name:"Kagemaru",stats:[14319,16973,13940,13420,14568],skills:[137],img:"430",fullName:"Kagemaru, Master Ninja II"},11121:{name:"Kalevan",stats:[12629,18013,11914,12055,13821],skills:[297,240],img:"3bd",fullName:"Kalevan, the Forest Green II"},10804:{name:"Kangana",stats:[15803,18750,14872,12813,13247],skills:[216],img:"2b1",fullName:"Kangana, the Maelstrom II"},10789:{name:"Katiria",stats:[10807,11318,11356,10245,11623],skills:[156],img:"2b6",fullName:"Katiria Nullblade II"},11125:{name:"Kekro",stats:[17992,12001,15002,19660,16302],skills:[379],autoAttack:10007,img:"33b",fullName:"Kekro, Demiwyrm Magus II"},10767:{name:"Kelaino",stats:[12538,12707,10490,15047,14999],skills:[197],img:"405",fullName:"Kelaino, the Dark Cloud II"},11381:{name:"Kijin",stats:[17047,3323,14038,17402,16110],skills:[566],autoAttack:10031,img:"23a",fullName:"Kijin, Heavenly Maiden II"},11279:{name:"Kobold",stats:[14207,14462,15804,8442,14999],skills:[449],img:"16e",fullName:"Kobold Guard Captain II"},11314:{name:"Kua Fu",stats:[16510,16561,12207,9174,13476],skills:[497],img:"3e3",fullName:"Kua Fu, Sun Chaser II"},10911:{name:"Kyteler",stats:[11721,12524,9892,17254,16416],skills:[258],img:"4d4",fullName:"Kyteler the Corrupted II"},10985:{name:"Lahamu",stats:[14024,10784,15999,16010,11001],skills:[281],autoAttack:10004,img:"2fe",fullName:"Lahamu, Royal Viper II"},21372:{name:"Lamashtu",stats:[20579,17977,20007,12062,17685],skills:[555],img:"2e5",fullName:"Lamashtu, Fell Goddess"},10432:{name:"Lanvall",stats:[12914,14639,12245,12210,15040],skills:[18],img:"163",fullName:"Lanvall, Lizard Cavalier II"},11347:{name:"Lava Dragon",stats:[19021,8881,16237,18891,16497],skills:[534,535],autoAttack:10019,img:"3de",fullName:"Lava Dragon II"},11128:{name:"Leupold",stats:[17585,11038,12963,9794,16510],skills:[378],img:"4ca",fullName:"Leupold, Wyvern Knight II"},10852:{name:"Libuse",stats:[11221,13782,13379,16048,13038],skills:[245],img:"27e",fullName:"Libuse, the Black Queen II"},10933:{name:"Linnorm",stats:[12326,11102,11979,16605,16497],skills:[313],img:"30b",fullName:"Linnorm, the Hailstorm II"},21433:{name:"Liza",stats:[22491,9517,16542,21861,18011],skills:[613],autoAttack:10045,img:"4ff",fullName:"Liza, Blood-Anointed"},21187:{name:"Loki",stats:[19202,21231,16192,15119,15806],skills:[382],img:"47b",fullName:"Loki, God of Cunning"},11316:{name:"Long Feng",stats:[15164,17125,13539,10452,12207],skills:[501],img:"2ad",fullName:"Long Feng, the Dragon Fist II"},11440:{name:"Lucan",stats:[25304,22011,18349,17916,18154],skills:[634],autoAttack:10049,img:"419",fullName:"Lucan, Eagle Knight II"},10754:{name:"Lucia",stats:[17106,13878,16633,9881,10857],skills:[16],img:"197",fullName:"Lucia, Petal-Shears II"},10794:{name:"Ma-Gu",stats:[14182,12438,11477,15306,12438],skills:[4],img:"2a8",fullName:"Ma-Gu the Enlightened II"},11141:{name:"Lynx",stats:[14207,14062,12500,10014,17147],skills:[493],img:"321",fullName:"Madprowl Lynx II"},10558:{name:"Magdal",stats:[13929,15110,15132,13810,15359],skills:[120],img:"1c0",fullName:"Magdal Dragonheart II"},11126:{name:"Magdal M",stats:[18728,20917,21491,23235,15998],skills:[336],img:"346",fullName:"Magdal, Dragonmaster II"},11429:{name:"Maisie",stats:[19194,19097,16258,8101,17905],skills:[599,600],autoAttack:10037,img:"1da",fullName:"Maisie, Grimoire Keeper II"},10365:{name:"Makalipon",stats:[10343,8405,10611,12280,10343],skills:[60],img:"1f1",fullName:"Makalipon, Sacred Fruit II"},11456:{name:"Chimaera",stats:[19519,9986,16009,17038,18013],skills:[612,134],autoAttack:10043,img:"4a7",fullName:"Maleficent Chimaera II"},10445:{name:"Managarmr",stats:[12210,12258,13266,13887,11688],skills:[108],img:"151",fullName:"Managarmr Frost Touch II"},11280:{name:"Managarmr M",stats:[20007,21599,17396,23907,18100],skills:[463],autoAttack:10007,img:"42b",fullName:"Managarmr, the Frost Moon II"},11319:{name:"Manannan",stats:[16551,10668,16464,19227,16605],skills:[513,514],autoAttack:10007,img:"4a4",fullName:"Manannan mac Lir II"},10792:{name:"Marchosias",stats:[18165,15424,12781,18566,13561],skills:[210],img:"271",fullName:"Marchosias, Pit Beast II"},11136:{name:"Marcus",stats:[12317,16534,14255,8991,15438],skills:[358],img:"353",fullName:"Marcus, Brave of Liberation II"},332:{name:"Mari",stats:[10500,10980,10850,13370,11500],skills:[47],img:"1e4",fullName:"Mari the Witch"},11013:{name:"Marraco",stats:[18716,15876,17254,7381,8809],skills:[61,167],img:"47b",fullName:"Marraco, Crusted Wyrm II"},10656:{name:"Mathilda",stats:[11841,15172,10639,12718,15218],skills:[115],img:"368",fullName:"Mathilda the Tarantula II"},10632:{name:"Doog",stats:[10560,10549,10777,14330,11925],skills:[94],img:"409",fullName:"Mauthe Doog II"},10705:{name:"Melanippe",stats:[16139,16800,13929,11849,15132],skills:[195],img:"44f",fullName:"Melanippe, Wolfrider II"},11214:{name:"Melek",stats:[19097,16107,21545,12792,10094],skills:[374,375],img:"219",fullName:"Melek, the Black Peacock II"},10527:{name:"Melusine",stats:[11417,11976,10490,13562,11210],skills:[155],img:"272",fullName:"Melusine the Witch II"},11305:{name:"Microraptor",stats:[16172,18577,14406,14092,17753],skills:[492],img:"414",fullName:"Microraptor II"},11212:{name:"Millarca",stats:[15305,10668,15565,21393,18046],skills:[407,408],autoAttack:10007,img:"2ff",fullName:"Millarca, Lady of Thorns II"},11134:{name:"Minerva",stats:[14590,18024,14438,15435,18013],skills:[357],img:"2a2",fullName:"Minerva, Goddess of War II"},11081:{name:"Moni",stats:[13562,15537,12121,10234,16448],skills:[340],img:"343",fullName:"Moni the Dismemberer II"},10621:{name:"Montu",stats:[12952,12904,12269,12269,15306],skills:[170],img:"21d",fullName:"Montu, God of War II"},308:{name:"Mordred",stats:[11000,12050,10950,11000,12500],skills:[18],img:"16b",fullName:"Mordred, Drake Knight"},10625:{name:"Moren",stats:[8502,11318,7759,16803,8039],skills:[10000,71,85],isMounted:true,img:"34a",fullName:"Moren, Rime Mage II"},11233:{name:"Musashi",stats:[20592,24752,19151,17981,18024],skills:[404],img:"11f",fullName:"Musashi, the Twinblade II"},10186:{name:"Naberius",stats:[9563,9552,7828,11208,11298],skills:[18],img:"2e9",fullName:"Naberius II"},11015:{name:"Narmer",stats:[15876,12194,15172,8870,15924],skills:[260],img:"12d",fullName:"Narmer, Mummy King II"},10989:{name:"Nehasim",stats:[12707,16071,11390,12466,15172],skills:[294],img:"28b",fullName:"Nehasim the Seething II"},11057:{name:"Neith",stats:[18999,19660,15002,12001,15305],skills:[326],img:"23b",fullName:"Neith, Goddess of War II"},21291:{name:"Nephthys",stats:[21015,11985,18202,22005,16912],skills:[471,472],autoAttack:10007,img:"116",fullName:"Nephthys, Ruler of Death"},10994:{name:"Nergal",stats:[13008,15392,11947,11643,16518],skills:[282],img:"175",fullName:"Nergal, Abyssal Overseer II"},11079:{name:"Nightblade",stats:[12196,16995,13528,10896,14915],skills:[341],img:"164",fullName:"Nightblade, Archsage of Winds II"},11369:{name:"Nin-Ridu",stats:[16529,16215,11351,10495,14005],skills:[505],autoAttack:10022,img:"239",fullName:"Nin-Ridu"},10799:{name:"Niu Mo Wang",stats:[14276,17071,15998,13420,13138],skills:[133],img:"126",fullName:"Niu Mo Wang II"},10438:{name:"Odin Stormgod",stats:[12855,14346,12378,14929,12245],skills:[119],img:"15c",fullName:"Odin Stormgod II"},11267:{name:"Odin L",stats:[15110,16562,13875,17363,18057],skills:[440,441],isMounted:true,img:"365",fullName:"Odin, God of Victory II"},11446:{name:"Olan",stats:[16497,14048,14113,6779,17255],skills:[610,611],img:"36b",fullName:"Olan, Tricky Succubus II"},10889:{name:"Olitiau",stats:[14081,15760,11676,11232,15197],skills:[221],img:"133",fullName:"Olitiau, the Great Bat II"},10505:{name:"Oniroku",stats:[12207,13731,12235,12194,13621],skills:[115],img:"196",fullName:"Oniroku the Slayer II"},11088:{name:"Ovinnik",stats:[19010,11210,20592,16627,12315],skills:[342,356],autoAttack:10007,img:"3c1",fullName:"Ovinnik, Hex Beast II"},11408:{name:"Pakal",stats:[15435,15175,10777,10018,17103],skills:[590,591],img:"168",fullName:"Pakal, Jade King II"},11286:{name:"Aquarius",stats:[16323,7494,11448,17363,16009],skills:[450,451],autoAttack:10007,img:"2b9",fullName:"Paladin of Aquarius II"},11310:{name:"Cancer",stats:[16627,17201,10408,7494,16908],skills:[478,479],img:"24e",fullName:"Paladin of Cancer II"},11210:{name:"Aries",stats:[14395,15543,16854,9011,12813],skills:[392,393],img:"337",fullName:"Paladin of Aries II"},11301:{name:"Capricorn",stats:[14937,8491,13507,16551,15099],skills:[476],autoAttack:10007,img:"2f4",fullName:"Paladin of Capricorn II"},11325:{name:"Gemini",stats:[15197,15641,10343,10148,17147],skills:[511,512],isMounted:true,img:"240",fullName:"Paladin of Gemini II"},11277:{name:"Leo",stats:[15121,15002,14200,7440,16811],skills:[448],autoAttack:10014,img:"491",fullName:"Paladin of Leo II"},11229:{name:"Pisces",stats:[13041,8621,14796,17114,14991],skills:[419],autoAttack:10007,img:"122",fullName:"Paladin of Pisces II"},11200:{name:"Libra",stats:[14178,16172,14698,9845,13669],skills:[390],img:"486",fullName:"Paladin of Libra II"},11334:{name:"Sagittarius",stats:[15587,15218,12163,8415,17255],skills:[507,508],img:"3c0",fullName:"Paladin of Sagittarius II"},11353:{name:"Scorpio",stats:[14146,15998,13117,8350,16995],skills:[544],img:"4fe",fullName:"Paladin of Scorpio II"},11362:{name:"Taurus",stats:[15608,18598,10105,7007,17363],skills:[553,554],img:"2d3",fullName:"Paladin of Taurus II"},11241:{name:"Virgo",stats:[15500,6118,12380,17797,16822],skills:[421,422],autoAttack:10007,img:"4cf",fullName:"Paladin of Virgo II"},11231:{name:"Palna",stats:[14999,15509,14606,8991,13807],skills:[420],img:"3fb",fullName:"Palna, the Vanguard II"},11374:{name:"Pazuzu",stats:[15121,17182,14988,5640,14999],skills:[556],img:"24d",fullName:"Pazuzu, the Whirling Jinn II"},11259:{name:"Peg Powler",stats:[15500,7353,12499,17049,16204],skills:[636],autoAttack:10047,img:"30c",fullName:"Peg Powler II"},10348:{name:"Pegasus",stats:[8756,10200,8843,10880,9181],skills:[111],img:"469",fullName:"Pegasus, the Light Divine II"},10831:{name:"Pegasus Knight",stats:[15251,19032,15370,13073,18046],skills:[311,312],isMounted:true,img:"3e4",fullName:"Pegasus Knight II"},11425:{name:"Pelops",stats:[15056,14113,10018,12055,17266],skills:[597,598],img:"3ee",fullName:"Pelops, Fallen Hero II"},10013:{name:"Pendragon",stats:[9844,10317,10751,12357,10861],skills:[60],img:"345",fullName:"Pendragon, the Scourge II"},21368:{name:"Perendon",stats:[19202,17300,17055,17009,17604],skills:[504],autoAttack:10021,img:"124",fullName:"Perendon the Pure"},11020:{name:"Phantasmal Succubus",stats:[18013,13604,20007,17190,10701],skills:[272,273],img:"1fb",fullName:"Phantasmal Succubus II"},10710:{name:"Phantom Assassin",stats:[13507,13951,11102,14341,14081],skills:[193],img:"110",fullName:"Phantom Assassin II"},11022:{name:"Phantom Knight",stats:[19877,23213,19270,19682,18057],skills:[267],img:"461",fullName:"Phantom Knight, the Vagabond II"},11039:{name:"Phoenix",stats:[14005,11188,12033,19010,12185],skills:[305],img:"125",fullName:"Phoenix, the Metempsychosis II"},11237:{name:"Pollux",stats:[13290,18631,11654,10311,13756],skills:[427,428],img:"1a2",fullName:"Pollux, Fallen Hero II"},10876:{name:"Pontifex",stats:[14590,16410,13507,18371,17797],skills:[229,167],img:"2bd",fullName:"Pontifex Antiquus II"},10075:{name:"Pouliquen",stats:[7890,6271,8910,9439,7843],skills:[16],img:"26c",fullName:"Pouliquen, Archibishop II"},10785:{name:"Premyslid",stats:[13626,16984,14926,18772,11232],skills:[244],img:"2c7",fullName:"Premyslid, the Black King II"},10599:{name:"Princeps",stats:[9360,10772,9674,10181,11667],skills:[156],img:"4dc",fullName:"Princeps, Angel of Doom II"},11203:{name:"Prismatic",stats:[24004,14438,20982,23300,18024],skills:[432],autoAttack:10007,img:"4fe",fullName:"Prismatic Wyvern"},11100:{name:"Queen Waspmen",stats:[14070,19898,13247,15998,17829],skills:[348],img:"1f6",fullName:"Queen of the Waspmen II"},21340:{name:"Cetus",stats:[22316,20624,17579,11013,16729],skills:[524],autoAttack:10021,img:"30a",fullName:"Raging Cetus"},11048:{name:"Ragnar",stats:[13245,15804,12001,10294,16510],skills:[314],img:"497",fullName:"Ragnar, Dragonslayer II"},10664:{name:"Ramiel",stats:[15543,13929,13431,16388,14709],skills:[185],img:"3da",fullName:"Ramiel, Angel of the Storm II"},10699:{name:"Rampant Lion",stats:[16291,17569,16518,12564,18035],skills:[380,381],img:"387",fullName:"Rampant Lion II"},10806:{name:"Rapse",stats:[11928,14182,13110,11270,15524],skills:[179],img:"4e0",fullName:"Rapse, the Bloody Horns II"},10863:{name:"Rasiel",stats:[11936,15587,11817,17797,11004],skills:[234],img:"213",fullName:"Rasiel, Angel All-Knowing II"},10844:{name:"Regin",stats:[12734,13342,12832,16144,11270],skills:[155],img:"2b6",fullName:"Regin, the Brass Mantis II"},11196:{name:"Brass Gorilla",stats:[18996,9760,18096,12684,8319],skills:[398],img:"26b",fullName:"Reinforced Brass Gorilla II"},11215:{name:"Rohde",stats:[17591,8101,16042,15305,10582],skills:[376,377],autoAttack:10007,img:"23b",fullName:"Rohde, the Rose Thorn II"},10845:{name:"Rovn",stats:[16269,19086,18772,13214,13355],skills:[228],img:"2a4",fullName:"Rovn, the Brass Panzer II"},11066:{name:"Ruprecht",stats:[12911,15316,11795,17504,11199],skills:[330,334],img:"479",fullName:"Ruprecht the Punisher II"},11295:{name:"Ryaum",stats:[19454,13561,17667,11221,17602],skills:[482,483],img:"237",fullName:"Ryaum, Hussar Captain II"},11343:{name:"Sachiel",stats:[19357,14059,13052,17017,17526],skills:[527,528],img:"42b",fullName:"Sachiel, Angel of Water II"},11063:{name:"Treant",stats:[18566,17017,22542,13626,8014],skills:[154],img:"167",fullName:"Sagacious Treant II"},11234:{name:"Saizo",stats:[16128,12055,16367,19422,16995],skills:[405],autoAttack:10007,img:"241",fullName:"Saizo, Phantom Ninja II"},10966:{name:"Saurva",stats:[14958,15305,11329,11362,15002],skills:[259],img:"1f3",fullName:"Saurva, the Lawless Lord II"},21228:{name:"Hierophant",stats:[19681,13391,17534,20112,16950],skills:[418],autoAttack:10007,img:"1b1",fullName:"Scathing Hierophant"},10676:{name:"Scirocco",stats:[15002,14503,14503,18999,16497],skills:[331,301],img:"3d5",fullName:"Scirocco, Father of Winds II"},10626:{name:"Marid",stats:[14070,17851,14449,12597,15478],skills:[169],img:"2ed",fullName:"Scorching Marid II"},11036:{name:"Sea Serpent",stats:[16020,12012,15121,19259,17103],skills:[302],img:"165",fullName:"Sea Serpent II"},11379:{name:"Seimei",stats:[19963,6389,17038,19053,17103],skills:[564,565],autoAttack:10007,img:"4b7",fullName:"Seimei, Onmyoji II"},11204:{name:"Seismo",stats:[18999,19097,15056,11015,16800],skills:[433],img:"188",fullName:"Seismo Worm"},10258:{name:"Sekhmet",stats:[12529,16780,13843,13598,13823],skills:[11],img:"3d7",fullName:"Sekhmet Aflame II"},11056:{name:"Selk",stats:[13902,15854,11976,11208,14927],skills:[327],img:"403",fullName:"Selk, Desert King II"},11321:{name:"Selkie",stats:[15804,8442,14049,16024,13586],skills:[515,516],autoAttack:10007,img:"431",fullName:"Selkie, Lady of the Shore II"},11413:{name:"Sera",stats:[14293,17023,13306,7406,15903],skills:[594,595],img:"284",fullName:"Sera, Exorcist II"},11290:{name:"Set",stats:[13097,16364,10990,10001,17133],skills:[469],img:"2c6",fullName:"Set, God of the Sands II"},11006:{name:"Siby",stats:[15558,8005,11442,17120,15804],skills:[550],autoAttack:10018,img:"20c",fullName:"Siby, Sea Seer II"},11219:{name:"Sigiled Corpse Beast",stats:[17006,12954,14926,19855,16042],skills:[414,415],autoAttack:10007,img:"1f6",fullName:"Sigiled Corpse Beast II"},11220:{name:"Sigiled Axeman",stats:[14644,9076,12987,18338,13409],skills:[416],autoAttack:10007,img:"39e",fullName:"Sigiled Skeleton Axeman II"},10987:{name:"Sihn",stats:[12001,10495,12001,17504,16497],skills:[285],img:"453",fullName:"Sihn, Moonlight King II"},11207:{name:"Silver Dragon",stats:[19714,14601,15067,16215,18154],skills:[522,523],autoAttack:10024,img:"48e",fullName:"Silver Dragon II"},11387:{name:"Simurgh",stats:[15524,6956,12145,17206,16110],skills:[580],autoAttack:10007,img:"2a2",fullName:"Simurgh, Bird Divine II"},11093:{name:"Sinbad",stats:[15868,18154,14644,13853,17006],skills:[318],img:"29e",fullName:"Sinbad the Adventurer II"},10566:{name:"Bedwyr",stats:[12235,11318,12221,13510,10598],skills:[145],img:"321",fullName:"Sir Bedwyr of the Garden II"},10921:{name:"Brandiles",stats:[17017,18100,16269,13940,14070],skills:[252],img:"106",fullName:"Sir Brandiles, the Flameblade II"},11455:{name:"Skeleton King",stats:[19714,19064,20982,6097,18143],skills:[605,606],autoAttack:10041,img:"3b5",fullName:"Skeleton King II"},11074:{name:"Skoll",stats:[15002,13160,15153,9000,16302],skills:[301,367],img:"3e8",fullName:"Skoll, Dark Wolf II"},11038:{name:"Skrimsl",stats:[13049,11417,12466,17182,13379],skills:[303],img:"278",fullName:"Skrimsl the Freezing II"},11273:{name:"Slagh",stats:[12978,16561,11098,11683,15631],skills:[457],img:"13c",fullName:"Slagh, Carnage Incarnate II"},10450:{name:"Snow Queen",stats:[14070,13994,13940,15229,14449],skills:[128],img:"399",fullName:"Snow Queen II"},10614:{name:"Solsten",stats:[13940,14449,15998,17233,12900],skills:[165],img:"37a",fullName:"Solsten the Really Wanted II"},10941:{name:"Soura",stats:[12012,12261,7917,16930,17667],skills:[287,291],img:"4f1",fullName:"Soura, Inferno Shaman II"},10568:{name:"Spellforged Cyclops",stats:[17047,11683,14096,11111,10380],skills:[61],img:"2c7",fullName:"Spellforged Cyclops II"},10850:{name:"Stalo",stats:[16269,16280,16681,12792,13496],skills:[241],img:"296",fullName:"Stalo, Glacial Giant II"},414:{name:"Steamwork",stats:[14360,10800,10600,12240,10560],skills:[11],img:"3de",fullName:"Steamwork Dragon"},10955:{name:"Sugaar",stats:[13110,7481,14293,16950,16097],skills:[465],autoAttack:10007,img:"19b",fullName:"Sugaar, the Thunderstorm II"},10461:{name:"Sulima",stats:[13417,13583,12194,12293,12269],skills:[17],img:"1ec",fullName:"Sulima, Executioner II"},11189:{name:"Surtr",stats:[15440,17106,15085,7016,12890],skills:[383],img:"15b",fullName:"Surtr the Fervent II"},11017:{name:"Svadilfari",stats:[15977,19595,13442,15998,14503],skills:[369,370],img:"1ce",fullName:"Svadilfari II"},11000:{name:"Tanba",stats:[17580,23213,17883,23289,18057],skills:[236],img:"3a8",fullName:"Tanba, Founder of the Ninja II"},327:{name:"Tangata",stats:[10500,10800,10630,10740,12480],skills:[110],img:"3b4",fullName:"Tangata Manu"},11122:{name:"Tannin",stats:[13669,15500,12683,19541,17894],skills:[298],img:"24a",fullName:"Tannin, Sea Dragon II"},695:{name:"Tawiscara",stats:[11914,14513,14395,11366,15630],skills:[161],img:"3f5",fullName:"Tawiscara"},10582:{name:"Tepaxtl",stats:[10831,13562,9209,13110,12100],skills:[115],img:"37d",fullName:"Tepaxtl, Fatal Fang II"},11103:{name:"Tiamat",stats:[13702,14698,16497,18869,15738],skills:[280],img:"2c5",fullName:"Tiamat, Mother of Dragons II"},1:{name:"Black Brute",stats:[14254,17131,13848,11794,11699],skills:[34],isWarlord:true,img:"36f",fullName:"The Black Brute"},2:{name:"Blue Beard",stats:[12982,11344,15588,15554,13527],skills:[118],isWarlord:true,img:"10a",fullName:"The Blue Beard"},3:{name:"Golden Lance",stats:[14462,13994,11951,12227,16809],skills:[10],isWarlord:true,img:"3d6",fullName:"The Golden Lance"},4:{name:"Green Healer",stats:[13770,10556,16359,15329,13596],skills:[116,111],isWarlord:true,img:"265",fullName:"The Green Healer"},5:{name:"Grey Mage",stats:[13415,13838,10712,15865,16602],skills:[40],isWarlord:true,img:"248",fullName:"The Grey Mage"},6:{name:"Purple Knife",stats:[13735,16281,10712,15779,13595],skills:[113],isWarlord:true,img:"3ee",fullName:"The Purple Knife"},7:{name:"Red Samurai",stats:[13432,14783,13961,12869,14333],skills:[46],isWarlord:true,img:"4ad",fullName:"The Red Samurai"},8:{name:"White Knight",stats:[13916,14332,15311,12851,13466],skills:[46],isWarlord:true,img:"225",fullName:"The White Knight"},10480:{name:"Thor",stats:[10343,13245,11807,13842,11917],skills:[114],img:"3a1",fullName:"Thor, God of Lightning II"},21264:{name:"Thor L",stats:[20007,22002,19063,10334,16518],skills:[437],autoAttack:10011,img:"323",fullName:"Thor, the Roaring Thunder"},10859:{name:"Thunderbird",stats:[15912,16995,13572,15771,17006],skills:[231],img:"2be",fullName:"Thunderbird II"},11236:{name:"Tomoe",stats:[13889,16010,13110,8285,16622],skills:[406],img:"2b5",fullName:"Tomoe, the Lightning Arrow II"},11143:{name:"TBB",stats:[12001,9905,12207,17000,16803],skills:[366],autoAttack:10007,img:"115",fullName:"Tormented Bone Beast II"},10747:{name:"Tristan",stats:[13832,16193,15197,13052,15771],skills:[122],img:"3c3",fullName:"Tristan the Sorrowful II"},10647:{name:"Tuniq",stats:[13635,16709,12062,12086,9794],skills:[150],img:"29c",fullName:"Tuniq, Guardian Colossus II"},10454:{name:"Stormwyrm",stats:[11025,11514,9646,14489,11318],skills:[47],img:"3ee",fullName:"Two-Headed Stormwyrm II"},10735:{name:"Typhon",stats:[14677,13355,14341,17959,13626],skills:[117],autoAttack:10001,img:"283",fullName:"Typhon II"},10344:{name:"Hydarnes",stats:[11928,12832,10587,14182,11928],skills:[114],img:"4fd",fullName:"Undead General, Hydarnes II"},10920:{name:"Unicorn",stats:[10807,12600,8770,11721,12001],skills:[156],img:"204",fullName:"Unicorn, Spirit Eater II"},11124:{name:"Ushabti",stats:[12434,16475,14655,10062,14027],skills:[317],img:"21d",fullName:"Ushabti II"},11268:{name:"Vafthruthnir",stats:[15500,17732,13008,9997,12228],skills:[442],img:"22b",fullName:"Vafthruthnir, Elder Giant II"},10896:{name:"Valin",stats:[15500,16865,22953,12716,11167],skills:[263],img:"34a",fullName:"Valin the Terrible II"},11008:{name:"Karkadann",stats:[17034,16475,13510,7822,13097],skills:[521],img:"422",fullName:"Venomhorn Karkadann II"},11137:{name:"Venusia",stats:[14514,18273,13333,10831,11492],skills:[361],img:"403",fullName:"Venusia, the Grace II"},10807:{name:"Vezat",stats:[16648,18165,14709,13431,17721],skills:[214],img:"429",fullName:"Vezat, Dragonbone Warrior II"},10572:{name:"Vivian",stats:[14677,17851,15229,13095,14677],skills:[224],img:"25f",fullName:"Vivian Griffinrider II"},11021:{name:"Vlad",stats:[16323,19508,13680,14709,16529],skills:[295,296],img:"356",fullName:"Vlad the Impaler II"},10675:{name:"Void Yaksha",stats:[15706,18013,14471,14276,15814],skills:[199],img:"297",fullName:"Void Yaksha II"},11406:{name:"Vucub",stats:[16123,13110,14732,6967,17000],skills:[586],img:"2aa",fullName:"Vucub Caquix, the Barbarian II"},11461:{name:"Wang Yi",stats:[16024,6577,11855,17000,16816],skills:[621,622],autoAttack:10007,img:"1b8",fullName:"Wang Yi, Lady of Iron II"},11046:{name:"Waheela",stats:[17006,13008,16204,16692,18100],skills:[19,134],img:"2dc",fullName:"Waheela, Dire Wolf II"},11396:{name:"Wicker Man",stats:[16605,6833,11654,16670,16930],skills:[581,582],autoAttack:10036,img:"2d2",fullName:"Wicker Man II"},10570:{name:"Wolfert",stats:[14189,23972,13723,13290,13431],skills:[118],img:"391",fullName:"Wolfert, Grave Keeper II"},10798:{name:"Wu Chang",stats:[10294,14182,10977,10600,11928],skills:[115],img:"365",fullName:"Wu Chang the Infernal II"},11018:{name:"Warden",stats:[19400,17504,18273,11026,11795],skills:[532],img:"33d",fullName:"Wyrm Warden, Everwakeful II"},11218:{name:"Xaphan",stats:[13013,9415,12573,17000,15537],skills:[412],img:"47f",fullName:"Xaphan, the Foul Flame II"},11315:{name:"Xuan Wu",stats:[18013,18609,17038,13821,13507],skills:[499,500],autoAttack:10020,img:"325",fullName:"Xuan Wu II"},10995:{name:"Ymir",stats:[22650,24600,16464,20592,15933],skills:[227],img:"167",fullName:"Ymir, Primordial Giant II"},10486:{name:"Yulia",stats:[14081,14664,12052,13544,12524],skills:[134],img:"341",fullName:"Yulia, Snakesage II"},10497:{name:"Zagan",stats:[16128,16941,14709,12423,13052],skills:[143],img:"192",fullName:"Zagan II"},11077:{name:"Zahhak",stats:[16789,10051,19151,17797,17168],skills:[339],autoAttack:10001,img:"194",fullName:"Zahhak, Dragon Marshal II"},10869:{name:"Zanga",stats:[10218,10787,9694,9512,12780],skills:[161],img:"1cf",fullName:"Zanga, the Iron Storm II"},10992:{name:"Zeruel",stats:[16995,19573,13886,13507,16984],skills:[351,352],img:"4a7",fullName:"Zeruel, Angel of War II"},11443:{name:"Zorg",stats:[14073,15196,11331,5395,10805],skills:[629],img:"1e0",fullName:"Zorg, the Cruncher II"},10474:{name:"Zuniga",stats:[12987,15132,14276,14839,14709],skills:[132],img:"322",fullName:"Zuniga, Guard Captain II"}};var FamiliarDatabase=(function(){function a(){}a.getTierList=function(m,k){if(!this.tierList){this.tierList={};var h=JSON.parse(k);var d=["X+","X","S+","S","A+","A","B","C"];for(var f=0;f<d.length;f++){var c=[];var g=d[f];for(var e=0;e<h[g].length;e++){c.push(h[g][e].name)}this.tierList[g]=[];for(var l in famDatabase){if(famDatabase.hasOwnProperty(l)){var b=famDatabase[l].fullName;if(c.indexOf(b)!=-1){this.tierList[g].push(l)}}}}}return this.tierList[m]};a.getAllFamiliarList=function(){if(!this.allIdList){this.allIdList=[];for(var b in famDatabase){if(famDatabase.hasOwnProperty(b)&&!famDatabase[b].isWarlord){this.allIdList.push(b)}}}return this.allIdList};a.getRandomFamList=function(e,c){var g=this.getTierList("X+",c);var f=this.getTierList("X",c);var i=this.getTierList("S+",c);var b=this.getTierList("S",c);var d=this.getTierList("A+",c);var h=this.getTierList("A",c);switch(e){case 1:return this.getAllFamiliarList();case 2:return g;case 3:return f;case 4:return f.concat(g);case 5:return i;case 6:return i.concat(f).concat(g);case 7:return b;case 8:return b.concat(i).concat(f).concat(g);case 9:return d;case 10:return d.concat(b).concat(i).concat(f).concat(g);case 11:return h;case 12:return h.concat(d).concat(b).concat(i).concat(f).concat(g);default:throw new Error("Invalid brig random type")}};a.getWarlordList=function(){return[1,2,3,4,5,6,7,8]};a.tierList=null;a.allIdList=null;return a})();var Formation=(function(){function a(b){this.type=b}a.initialize=function(){a.FORMATION_CONFIG[0]=[3,2,1,2,3];a.FORMATION_CONFIG[1]=[1,2,3,2,1];a.FORMATION_CONFIG[2]=[1,3,1,3,1];a.FORMATION_CONFIG[3]=[3,1,2,1,3];a.FORMATION_CONFIG[4]=[1,1,1,1,1];a.FORMATION_CONFIG[5]=[2,2,2,2,2];a.FORMATION_CONFIG[6]=[3,3,3,3,3];a.FORMATION_CONFIG[7]=[3,3,1,3,3];a.FORMATION_CONFIG[8]=[1,1,3,1,1];a.FORMATION_CONFIG[9]=[3,1,3,1,3];a.FORMATION_CONFIG[10]=[1,3,2,3,1];a.FORMATION_CONFIG[11]=[3,3,1,1,1];a.ANDROID_PROC_ORDER[1]=[11,15,14,13,12];a.ANDROID_PROC_ORDER[2]=[6,10,9,8,7];a.ANDROID_PROC_ORDER[3]=[1,5,4,3,2];a.IOS_PROC_ORDER[1]=[11,12,13,14,15];a.IOS_PROC_ORDER[2]=[6,7,8,9,10];a.IOS_PROC_ORDER[3]=[1,2,3,4,5];return null};a.getProcIndex=function(e,d,c){var b=(c==1)?this.ANDROID_PROC_ORDER:this.IOS_PROC_ORDER;return b[e][d]};a.prototype.getCardRow=function(b){return a.FORMATION_CONFIG[this.type][b]};a.prototype.getFormationConfig=function(){return a.FORMATION_CONFIG[this.type]};a.FORMATION_CONFIG={};a.ANDROID_PROC_ORDER={};a.IOS_PROC_ORDER={};a.whyfoo=a.initialize();return a})();function setPreviousChoices(){if(localStorage.getItem("f0")&&localStorage.getItem("f0")!="null"){for(var b=0;b<10;b++){document.getElementById("f"+b).value=localStorage.getItem("f"+b)}}if(localStorage.getItem("f10")&&localStorage.getItem("f10")!="null"){for(b=0;b<10;b++){document.getElementById("f"+(b+10)).value=localStorage.getItem("f"+(b+10))}}if(localStorage.getItem("s10")&&localStorage.getItem("s10")!="null"){for(b=0;b<3;b++){document.getElementById("s1"+b).value=localStorage.getItem("s1"+b)}}if(localStorage.getItem("s20")&&localStorage.getItem("s20")!="null"){for(b=0;b<3;b++){document.getElementById("s2"+b).value=localStorage.getItem("s2"+b)}}if(localStorage.getItem("1f")&&localStorage.getItem("1f")!="null"){document.getElementById("1f").value=localStorage.getItem("1f")}if(localStorage.getItem("2f")&&localStorage.getItem("2f")!="null"){document.getElementById("2f").value=localStorage.getItem("2f")}if(localStorage.getItem("po")&&localStorage.getItem("po")!="null"){document.getElementById("po").value=localStorage.getItem("po")}if(localStorage.getItem("debug")=="true"){document.getElementById("debug").checked=true}var a=localStorage.getItem("bt");if(a==1||a==2){document.getElementById("bt").value=a}}function toogleDisable(){for(var e=1;e<=2;e++){var c=document.getElementById("r"+e).checked;var b=document.getElementsByClassName("p"+e);for(var d=0;d<b.length;d++){if(c){b[d].disabled=true}else{b[d].disabled=false}}var a=document.getElementById(e+"r");if(c){a.disabled=false}else{a.disabled=true}}}function toogleReserve(){for(var c=1;c<=2;c++){var e=document.getElementById("bt").value=="1";var a=document.getElementsByClassName("reserve");for(var b=0;b<a.length;b++){var d=a[b];if(!e){d.disabled=true;d.style.display="none"}else{d.disabled=false;d.style.display="inline"}}}toogleDisable()}function onFormLoad(){toogleReserve();toogleDisable()}function validateForm(){return true}function submitForm(){var a=document.forms.mainForm;if(a.debug.checked==true){a.action="debug.html"}a.submit()}function setFamOptions(){var a=document.getElementsByClassName("famSelect");var b=[];for(var e in famDatabase){b.push(e)}b.sort(function(h,g){return famDatabase[h].fullName.localeCompare(famDatabase[g].fullName)});for(var d=0;d<a.length;d++){for(var c=0;c<b.length;c++){e=b[c];var f=document.createElement("option");f.value=e;f.text=famDatabase[e].fullName;a[d].add(f)}}}function setSkillOptions(){var a=document.getElementsByClassName("skillSelect");var b=Skill.getAvailableSkillsForSelect();b.sort(function(h,g){return SkillDatabase[h].name.localeCompare(SkillDatabase[g].name)});for(var e=0;e<a.length;e++){for(var c=0;c<b.length;c++){var d=b[c];var f=document.createElement("option");f.value=d+"";f.text=SkillDatabase[d].name;a[e].add(f)}}}function getBattleDataOption(){localStorage.setItem("debug",getURLParameter("debug"));var g={},e={};e.procOrder=getURLParameter("po");localStorage.setItem("po",e.procOrder);var f=getURLParameter("bt");localStorage.setItem("bt",f);e.battleType=f;e.p1RandomMode=getURLParameter("1r");e.p2RandomMode=getURLParameter("2r");g.p1_formation=getURLParameter("1f");if(!e.p1RandomMode){localStorage.setItem("1f",g.p1_formation)}g.p2_formation=getURLParameter("2f");if(!e.p2RandomMode){localStorage.setItem("2f",g.p2_formation)}g.p1_cardIds=[];g.p2_cardIds=[];g.p1_warlordSkillIds=[];g.p2_warlordSkillIds=[];for(var d=0;d<10;d++){var c=getURLParameter("f"+d);var h=getURLParameter("f"+(d+10));g.p1_cardIds.push(c);g.p2_cardIds.push(h);if(!e.p1RandomMode){localStorage.setItem("f"+d,c)}if(!e.p2RandomMode){localStorage.setItem("f"+(d+10),h)}}for(d=0;d<3;d++){var a=getURLParameter("s1"+d);var b=getURLParameter("s2"+d);g.p1_warlordSkillIds.push(a);g.p2_warlordSkillIds.push(b);if(!e.p1RandomMode){localStorage.setItem("s1"+d,a)}if(!e.p2RandomMode){localStorage.setItem("s2"+d,b)}}return[g,e]}function prepareRandom(){var b=false;if(b){var a=new CsRandom(1234);Math.random=function(){return a.nextDouble()}}}function onBattleFinished(){var a=document.getElementById("startButton");a.disabled=false;if(1){a.style.display="block"}else{showStarRequest()}}function onSimulationFinished(){if(!1){showStarRequest()}}function showStarRequest(){setTimeout(function(){if(!localStorage.getItem("starRequestShown")){swal({title:"Star this!",text:"If you like this simulator, star the project on Github. It motivates me to improve it :)",type:"warning",showCancelButton:true,confirmButtonColor:"#5cb85c",confirmButtonText:"Take me there",closeOnConfirm:false},function(){localStorage.setItem("starRequestShown","true");window.location.href="https://github.com/chinhodado/Blood-Brothers-PvP-Simulator"})}},2000)}function getRandomBackground(){var a=["23b/Bamboo01","34d/Bamboo02","1c5/Carpet01","141/Carpet02","283/Carpet03","1f8/Carpet04","193/Carpet05","24d/Carpet06","17b/Carpet07","3ff/Carpet08","1e6/Carpet09","3c3/Carpet10","3a3/Carpet11","224/Carpet12","4ad/Carpet13","20c/Carpet14","29f/Carpet15","21c/Carpet16","385/Carpet17","4f8/Carpet18","362/Carpet19","387/Carpet20","311/Carpet21","352/Carpet22","392/Castle01","2f9/Castle02","3b4/Cave01","266/Cave02","3bc/Cave03","1ad/Cave04","4d5/Cave05","3bf/Desert01","4c9/Desert02","3d9/Fog01","30e/Fog02","267/Forest01","2c5/Forest02","247/Greatwall01","450/Halloween01","22e/Halloween02","28a/Halloween03","11a/Jungle01","268/Mountain01","3fb/River01","451/River02","49f/Road01","270/Road02","475/Road03","2a8/Road04","40c/Road05","2ff/Road06","310/Road07","383/Road08","41e/Road09","289/Road10","183/Road11","1d8/Road12","2a7/Road13","3cf/Road14","3fb/Road15","1f4/Road16","28f/Road17","2a5/Road28","102/Road29","4e9/Ruins01","1f4/Sakura01","336/Snow01","49a/Swamp01","145/Swamp02","144/Tints01","1fb/Tree01","33c/Tree02","329/81a5ccfd07ca41c238e124a5b6683b93","1a0/Castle1","39f/F459e81069786396191c375060d778a3","3b1/66fddb4d129fa8b494cf3d21a057e226","45f/452d87b11eb533d33fba937073bb5668","4a5/48645b3ae0106d4f96fa0bf3ad6239b8"];var d=getRandomElement(a);var b="http://img"+d.charAt(0)+".wikia.nocookie.net/bloodbrothersgame/images/";var c=b+d.charAt(1)+"/"+d.substring(1)+".png";return c}function prepareField(){var b=getRandomBackground();var a=new Image();var c=document.getElementById("svgWrapper");a.onload=function(){c.style.backgroundImage="url('"+b+"')"};a.onerror=function(){console.log("Background not found: "+b);c.style.backgroundImage="url(img/bg01.png)"};a.src=b}function getTierList(a){if(a=="debug"){var b="updateTierListThenDebug"}else{if(a=="play"){b="updateTierListThenPlay"}else{if(a=="sim"){b="updateTierListThenSim"}else{if(a=="test"){b="updateTierListThenTest"}else{b="updateTierList"}}}}if(!localStorage.getItem("tierList")){console.log("Fetching tier list...");$.ajax({url:"https://www.kimonolabs.com/api/e67eckbg?apikey=ddafaf08128df7d12e4e0f8e044d2372&callback="+b,crossDomain:true,dataType:"jsonp"})}else{if(a=="debug"){playDebug()}else{if(a=="play"){playGame()}else{if(a=="sim"){playSim()}else{if(a=="test"){startTest()}}}}}}function updateTierList(a){localStorage.setItem("tierList",JSON.stringify(a.results))}function updateTierListThenPlay(a){updateTierList(a);playGame()}function updateTierListThenDebug(a){updateTierList(a);playDebug()}function updateTierListThenSim(a){updateTierList(a);playSim()}function updateTierListThenTest(a){updateTierList(a);startTest()}function playGame(){prepareField();BattleGraphic.PLAY_MODE="AUTO";BattleLogger.IS_DEBUG_MODE=false;document.getElementById("startButton").onclick=function(){this.disabled=true;if(1){this.style.display="none"}BattleGraphic.getInstance().resetInitialField();BattleGraphic.getInstance().displayMajorEventAnimation(0)};var d=getBattleDataOption();var c=d[0],b=d[1];var a=new BattleModel(c,b);a.startBattle()}function playSim(){if(!1){prepareField()}var d=getBattleDataOption();var c=d[0],b=d[1];var e=10000;document.getElementById("numBattle").innerHTML=numberWithCommas(e);document.getElementById("progressBar").max=e;if(b.p1RandomMode){BattleGraphic.HIDE_PLAYER1=true}if(b.p2RandomMode){BattleGraphic.HIDE_PLAYER2=true}BattleLogger.IS_DEBUG_MODE=false;BattleModel.IS_MASS_SIMULATION=true;if(!1){var a=new BattleModel(c,b)}document.getElementById("gameDiv").setAttribute("style","display: none;");document.getElementById("startButton").setAttribute("style","display: none;");document.getElementById("simDiv").setAttribute("style","display: block;");if(1){startSynchronousSim(c,b,e)}else{startWorkerSim(c,b,e)}}function playDebug(){prepareField();var d=getBattleDataOption();var c=d[0],b=d[1];var a=new BattleModel(c,b);a.startBattle()}function startSynchronousSim(h,i,l){prepareRandom();var j=0;var c=0;var g={};BattleModel.IS_MASS_SIMULATION=true;BattleGraphic.GRAPHIC_DISABLED=true;var a=localStorage.getItem("tierList");var d=new Date().getTime();var e=0;var k=100;var f=l/k;var b=setInterval(function(){for(var s=0;s<f;s++){var n=new BattleModel(h,i,a);var o=n.startBattle();BattleModel.resetAll();if(o.playerWon.id==1){j++}else{if(o.playerWon.id==2){c++}}var q=o.cardManager.getPlayerOriginalMainCards(o.playerWon);if(o.isBloodClash){q=q.concat(o.cardManager.getPlayerOriginalReserveCards(o.playerWon))}for(var r=0;r<q.length;r++){if(g[q[r].dbId]){g[q[r].dbId]++}else{g[q[r].dbId]=1}}document.getElementById("progressPercent").innerHTML=e+1+"%";document.getElementById("progressBar").setAttribute("value",(e*f+s+1)+"")}e++;if(e>=k){clearInterval(b)}if(e*f>=l){var p=new Date().getTime();var m={p1WinCount:j,p2WinCount:c,winCountTable:g};onSimulationResultObtained(m,d,p)}},0)}function startWorkerSim(f,g,k){var h=0;var b=0;var i=4;var e=[];var d=[];for(var j=0;j<i;j++){var c=new Worker("js/worker.js");c.onmessage=function(q){if(q.data.status=="ongoing"){h+=100;document.getElementById("progressBar").setAttribute("value",h.toString())}else{if(q.data.status=="done"){h+=100;document.getElementById("progressBar").setAttribute("value",h.toString());d[b]=q.data;b++;console.log(b+" workers done.");if(b==i){var m=performance.now();var l={p1WinCount:0,p2WinCount:0,winCountTable:[]};for(var p=0;p<i;p++){l.p1WinCount+=d[p].p1WinCount;l.p2WinCount+=d[p].p2WinCount;var o=d[p].winCountTable;for(var n in o){if(l.winCountTable[n]){l.winCountTable[n]+=o[n]}else{l.winCountTable[n]=o[n]}}}onSimulationResultObtained(l,a,m);e.forEach(function(r){r.terminate()})}}}};e[j]=c}c=null;var a=performance.now();for(j=0;j<e.length;j++){e[j].postMessage({data:f,option:g,tierList:localStorage.getItem("tierList"),numBattle:k/i})}}function onSimulationResultObtained(d,c,g){var a=[];for(var h in d.winCountTable){a.push(h)}a.sort(function(k,i){return d.winCountTable[i]-d.winCountTable[k]});var e=document.getElementById("simResultDiv");e.innerHTML+=("Player 2 won: "+d.p2WinCount+"<br> Player 1 won: "+d.p1WinCount+"<br><br> Time: "+((g-c)/1000).toFixed(2)+"s<br><a href=setting.html>Go back to main page </a>");var j="<br><br><details><summary> Most frequent appearances in win team: </summary><br>";for(var f=0;f<a.length;f++){var b=a[f];j+=(famDatabase[b].fullName+": "+d.winCountTable[b]+"<br>")}j+="</details>";e.innerHTML+=j;onSimulationFinished()}var Player=(function(){function a(e,b,c,d){this.id=e;this.name=b;this.formation=c;this.multiplier=d}return a})();var Skill=(function(){function a(c){var d=SkillDatabase[c];this.id=c;this.name=d.name;this.skillType=d.type;this.skillFunc=d.func;this.skillCalcType=d.calc;this.skillFuncArg1=d.arg1?d.arg1:0;this.skillFuncArg2=d.arg2?d.arg2:0;this.skillFuncArg3=d.arg3?d.arg3:0;this.skillFuncArg4=d.arg4?d.arg4:0;this.skillFuncArg5=d.arg5?d.arg5:0;this.skillRange=d.range;this.maxProbability=d.prob;this.ward=d.ward;this.description=d.desc;this.isAutoAttack=d.isAutoAttack;this.logic=SkillLogicFactory.getSkillLogic(this.skillFunc);var b=false;if(this.skillFunc===6){b=true}this.range=RangeFactory.getRange(this.skillRange,b)}a.isAttackSkill=function(b){var c=false;var d=SkillDatabase[b];switch(d.func){case 3:case 4:case 13:case 14:case 21:case 22:case 33:case 34:case 36:case 37:case 7:c=true;break;default:break}return c};a.isIndirectSkill=function(c){var b=true;var d=SkillDatabase[c];switch(d.func){case 3:case 13:case 14:case 28:case 21:case 33:case 36:b=false;break;default:break}return b};a.isPositionIndependentAttackSkill=function(b){var c=SkillDatabase[b];return this.isIndirectSkill(b)&&c.func!=7};a.isWisAutoAttack=function(b){var c=SkillDatabase[b];return this.isAutoAttackSkill(b)&&c.calc==2};a.isAtkAutoAttack=function(b){var c=SkillDatabase[b];return this.isAutoAttackSkill(b)&&c.calc==1};a.isAutoAttackSkill=function(b){return SkillDatabase[b].isAutoAttack};a.isMagicSkill=function(c){var b=false;var d=SkillDatabase[c];if(d.calc==2){b=true}if([19,1,2,4,34,37].indexOf(d.func)!=-1){b=true}return b};a.isAoeSkill=function(c){var b=false;var d=SkillDatabase[c];if(RangeFactory.canBeAoeRange(d.range)&&this.isIndirectSkill(c)){b=true}return b};a.isDebuffAttackSkill=function(c){var b=false;var d=SkillDatabase[c];switch(d.func){case 21:case 22:case 33:case 34:b=true;break;default:break}return b};a.isAvailableForSelect=function(c){var b=true;var d=SkillDatabase[c];if(d.isAutoAttack||c==355||c==452){b=false}return b};a.getAvailableSkillsForSelect=function(){if(this.availableSkillsForSelect==null){this.availableSkillsForSelect=[];for(var b in SkillDatabase){if(this.isAvailableForSelect(b)){this.availableSkillsForSelect.push(b)}}}return this.availableSkillsForSelect};a.getStatusModified=function(c){var d=SkillDatabase[c];var b=[];switch(d.func){case 1:b.push(d.arg2);if(d.arg3&&d.arg2!=17){b.push(d.arg3)}break;case 2:case 21:case 22:case 33:case 34:b.push(d.arg2);break;case 32:case 38:b.push(d.arg2);if(d.arg3){b.push(d.arg3)}break;default:break}return b};a.canProtectFromCalcType=function(b,c){switch(b){case 1:case 2:case 3:return c.skillCalcType==b;case 8:return c.skillCalcType==1||c.skillCalcType==2;case 9:return c.skillCalcType==1||c.skillCalcType==3;case 10:return c.skillCalcType==2||c.skillCalcType==3;default:return false}};a.canProtectFromAttackType=function(b,c){switch(b){case 2:return(c.skillFunc!=13&&c.skillFunc!=14&&c.skillFunc!=41&&c.id==10000);case 3:return(c.skillFunc!=13&&c.skillFunc!=14&&c.skillFunc!=41);default:throw new Error("Unimplemented ProtectAttackType")}};a.prototype.isIndirectSkill=function(){return a.isIndirectSkill(this.id)};a.prototype.getSerializableObject=function(){return{id:this.id,name:this.name,skillType:this.skillType,skillFunc:this.skillFunc,skillCalcType:this.skillCalcType,skillFuncArg1:this.skillFuncArg1,skillFuncArg2:this.skillFuncArg2,skillFuncArg3:this.skillFuncArg3,skillFuncArg4:this.skillFuncArg4,skillFuncArg5:this.skillFuncArg5,skillRange:this.skillRange,maxProbability:this.maxProbability,ward:this.ward,description:this.description,isAutoAttack:this.isAutoAttack}};a.prototype.willBeExecuted=function(b){return this.logic.willBeExecuted(b)};a.prototype.execute=function(b){return this.logic.execute(b)};a.prototype.getTarget=function(b){return this.range.getTarget(b)};a.prototype.getReady=function(b){this.range.getReady(b)};a.availableSkillsForSelect=null;return a})();function getDamageCalculatedByATK(a,d,c){var e=0.3;var i=0.2;var g={};g[3]=0.8;g[2]=1;g[1]=1.2;var h={};h[3]=0.8;h[2]=1;h[1]=1.2;var b=a.getATK()*e;var f=((a.getATK()-d.getDEF())*i)+b;if(!c){f*=g[a.getFormationRow()];f*=h[d.getFormationRow()]}if(f<b*0.1){f=b*0.1}f=Math.floor(f*getRandomArbitary(0.9,1.1));return f}function getDamageCalculatedByAGI(a,d,c){var e=0.3;var i=0.2;var g={};g[3]=0.8;g[2]=1;g[1]=1.2;var h={};h[3]=0.8;h[2]=1;h[1]=1.2;var b=a.getAGI()*e;var f=((a.getAGI()-d.getDEF())*i)+b;if(!c){f*=g[a.getFormationRow()];f*=h[d.getFormationRow()]}if(f<b*0.1){f=b*0.1}f=Math.floor(f*getRandomArbitary(0.9,1.1));return f}function getDamageCalculatedByWIS(b,a){var c=0.3;var g=0.5;var h=0.2;var f=b.getWIS()*c;var e=(a.getWIS()+a.getDEF())*g;var d=((b.getWIS()-e)*h)+f;if(d<f*0.1){d=f*0.1}d=Math.floor(d*getRandomArbitary(0.9,1.1));return d}function getHealAmount(c){var b=0.3;var a=c.getWIS()*b;a=Math.floor(a*getRandomArbitary(0.9,1.1));return a}function getDebuffAmount(e,d){var a=1;var c=(e.getWIS()-d.getWIS())*a;var b=e.getWIS()*0.1;if(c<b){c=b}return -1*c}function getCasterBasedDebuffAmount(c){var a=1.2;var b=c.getWIS()*a;return -1*b}function getReflectAmount(b,l,a,g,e,d){var m=0.7;var i={};i[3]=0.8;i[2]=1;i[1]=1.2;var k={};k[3]=0.8;k[2]=1;k[1]=1.2;var h;var j=d;switch(l.skillCalcType){case 1:case 3:var f=e?1:i[b.formationRow]*k[a.formationRow];var c=e?1:i[a.formationRow]*k[g.formationRow];h=(j/f+Math.max(0,a.getDEF()-g.getDEF())*m)*c;break;case 2:h=j+Math.max(0,a.getDEF()-(g.getWIS()+g.getDEF())/2)*m;break}h=Math.floor(h*getRandomArbitary(0.9,1.1));return h}var SkillDatabase={10000:{name:"Default auto",type:2,func:3,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},2:{name:"Strength of Blades",type:1,func:1,calc:0,arg1:0.5,arg2:1,range:3,prob:70,desc:"Raise ATK of self and adjacent familiars."},4:{name:"Guile of Runes",type:1,func:1,calc:0,arg1:0.5,arg2:3,range:3,prob:70,desc:"Raise WIS of self and adjacent familiars."},5:{name:"Grace of Winds",type:1,func:1,calc:0,arg1:0.5,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars."},6:{name:"Blade Break",type:1,func:2,calc:0,arg1:0.5,arg2:1,range:7,prob:70,desc:"Lower ATK of up to three foes."},7:{name:"Shield Rend",type:1,func:2,calc:0,arg1:0.5,arg2:2,range:7,prob:70,desc:"Lower DEF of up to three foes."},8:{name:"Mind Rust",type:1,func:2,calc:0,arg1:0.5,arg2:3,range:7,prob:70,desc:"Lower WIS of up to three foes."},9:{name:"Speed Sap",type:1,func:2,calc:0,arg1:0.5,arg2:4,range:7,prob:70,desc:"Lower AGI of up to three foes."},10:{name:"Scythe Storm",type:2,func:3,calc:3,arg1:1,range:8,prob:30,ward:1,desc:"Deal heavy AGI-based damage to all foes."},11:{name:"Torrent of Flame",type:2,func:4,calc:2,arg1:2,range:8,prob:30,ward:3,desc:"Deal heavy damage to all foes."},16:{name:"Greater Recall",type:2,func:6,calc:0,arg1:1,range:2,prob:50,desc:"Revive and fully restore HP of adjacent familiars."},17:{name:"Berserk",type:2,func:3,calc:1,arg1:0.8,range:17,prob:30,ward:1,desc:"Deal damage to six random targets."},18:{name:"Rush",type:2,func:3,calc:3,arg1:0.7,range:17,prob:30,ward:1,desc:"Deal AGI-based damage to six random targets."},19:{name:"Dispell",type:2,func:16,calc:0,range:8,prob:70,desc:"Remove the buffs of all foes."},20:{name:"Recall",type:2,func:6,calc:0,arg1:1,range:1,prob:50,desc:"Revive an adjacent familiar."},21:{name:"Elixir of Recall",type:2,func:6,calc:0,arg1:1,range:1,prob:50,desc:"Revive an adjacent familiar."},23:{name:"Breath of Flame",type:2,func:4,calc:2,arg1:2.5,range:7,prob:30,ward:3,desc:"Deal heavy damage to up to three foes."},26:{name:"Greater Heal",type:2,func:18,calc:4,arg1:1,range:2,prob:30,desc:"Restore a fixed amount of HP to adjacent familiars."},27:{name:"Greater Healing Sage",type:2,func:18,calc:4,arg1:1,range:2,prob:30,desc:"Restore a fixed amount of HP to adjacent familiars."},28:{name:"Envenom",type:2,func:4,calc:2,arg1:1,arg2:1,arg3:1,range:5,prob:30,ward:2,desc:"Deal damage and poison one foe."},29:{name:"Bind",type:2,func:4,calc:2,arg1:1,arg2:2,arg3:0.3,range:5,prob:30,ward:2,desc:"Deal damage and sometimes paralyze one foe."},33:{name:"Whirlwind",type:2,func:3,calc:3,arg1:2.5,range:16,prob:30,ward:1,desc:"Deal heavy AGI-based damage to three foes."},34:{name:"Massive Assault",type:2,func:3,calc:1,arg1:4,range:5,prob:30,ward:1,desc:"Deal massive damage to one foe."},38:{name:"Heal",type:2,func:18,calc:4,arg1:1,range:1,prob:30,desc:"Restore a fixed amount of HP to an adjacent familiar."},39:{name:"Healing Sage",type:2,func:18,calc:4,arg1:1,range:1,prob:30,desc:"Restore a fixed amount of HP to an adjacent familiar."},40:{name:"Firestrike",type:2,func:4,calc:2,arg1:3,range:5,prob:30,ward:2,desc:"Deal heavy damage to one foe."},41:{name:"Blizzard",type:2,func:4,calc:2,arg1:1,arg2:3,arg3:0.3,range:7,prob:30,ward:3,desc:"Deal damage and sometimes freeze up to three foes."},42:{name:"Thunderstorm",type:2,func:4,calc:2,arg1:0.7,range:8,prob:30,ward:2,desc:"Deal damage to all foes."},43:{name:"Windlash",type:2,func:3,calc:3,arg1:1,range:16,prob:30,ward:1,desc:"Deal AGI-based damage to multiple foes."},45:{name:"Intense Assault",type:2,func:3,calc:1,arg1:3,range:5,prob:30,ward:1,desc:"Deal very heavy damage to one foe."},46:{name:"Brawl",type:2,func:3,calc:1,arg1:1,range:16,prob:30,ward:1,desc:"Attack three foes."},47:{name:"Blastwave",type:2,func:4,calc:2,arg1:2,range:12,prob:30,ward:2,desc:"Deal heavy damage to all foes in the front line."},48:{name:"Impale",type:2,func:4,calc:1,arg1:1,range:6,prob:30,ward:1,desc:"Deal damage to up to two foes, ignoring position."},50:{name:"Focused Assault",type:2,func:3,calc:1,arg1:2,range:5,prob:30,ward:1,desc:"Deal heavy damage to one foe."},51:{name:"Skirmish",type:2,func:3,calc:1,arg1:1,range:6,prob:30,ward:1,desc:"Attack up to two foes."},52:{name:"Dervish",type:2,func:3,calc:3,arg1:2,range:5,prob:30,ward:1,desc:"Deal heavy AGI-based damage to one foe."},54:{name:"Foul Fang",type:2,func:3,calc:1,arg1:1,arg2:1,arg3:1,range:5,prob:30,ward:1,desc:"Poison one foe."},55:{name:"Embrace",type:2,func:3,calc:1,arg1:0.5,arg2:4,arg3:1,range:5,prob:30,ward:1,desc:"Deal damage and disable one foe for one turn."},60:{name:"Syphon",type:3,func:11,calc:1,arg1:1,range:1,prob:50,desc:"Heal an adjacent familiar for the amount of damage taken."},61:{name:"Cloak & Dagger",type:5,func:14,calc:1,arg1:1,range:2,prob:50,ward:1,desc:"Take damage in place of nearby ally and counter."},62:{name:"Cloak",type:5,func:12,calc:1,arg1:1,range:2,prob:50,desc:"Take damage in place of adjacent familiars."},63:{name:"Shroud",type:5,func:12,calc:0,arg1:0,range:4,prob:50,desc:"Take damage in place of familiars."},64:{name:"Riposte",type:3,func:13,calc:1,arg1:1,range:1,prob:50,ward:1,desc:"Counterattack after receiving an attack."},69:{name:"Lightning Bolt",type:2,func:4,calc:2,arg1:3,range:5,prob:30,ward:2,desc:"Deal heavy damage to one foe."},70:{name:"Wind Cutter",type:2,func:4,calc:2,arg1:3,range:5,prob:30,ward:2,desc:"Deal heavy damage to one foe."},71:{name:"Icicle",type:2,func:4,calc:2,arg1:3,range:5,prob:30,ward:3,desc:"Deal heavy damage to one foe."},77:{name:"Blade Break 1",type:1,func:2,calc:0,arg1:0.1,arg2:1,range:8,prob:70,desc:"Lower ATK of all foes."},78:{name:"Shield Rend 1",type:1,func:2,calc:0,arg1:0.1,arg2:2,range:8,prob:70,desc:"Lower DEF of all foes."},79:{name:"Mind Rust 1",type:1,func:2,calc:0,arg1:0.1,arg2:3,range:8,prob:70,desc:"Lower WIS of all foes."},80:{name:"Speed Sap 1",type:1,func:2,calc:0,arg1:0.1,arg2:4,range:8,prob:70,desc:"Lower AGI of all foes."},81:{name:"Boon of Blade & Shield 2",type:1,func:1,calc:0,arg1:0.2,arg2:1,arg3:2,range:4,prob:70,desc:"Raise ATK and DEF of all familiars."},85:{name:"Grace of Winds 2",type:1,func:1,calc:0,arg1:0.2,arg2:4,range:4,prob:70,desc:"Raise AGI of all familiars."},86:{name:"Blade Break 2",type:1,func:2,calc:0,arg1:0.2,arg2:1,range:8,prob:70,desc:"Lower ATK of all foes."},87:{name:"Shield Rend 2",type:1,func:2,calc:0,arg1:0.2,arg2:2,range:8,prob:70,desc:"Lower DEF of all foes."},88:{name:"Mind Rust 2",type:1,func:2,calc:0,arg1:0.2,arg2:3,range:8,prob:70,desc:"Lower WIS of all foes."},89:{name:"Speed Sap 2",type:1,func:2,calc:0,arg1:0.2,arg2:4,range:8,prob:70,desc:"Lower AGI of all foes."},94:{name:"Grace of Winds 3",type:1,func:1,calc:0,arg1:0.3,arg2:4,range:4,prob:70,desc:"Raise AGI of all familiars."},95:{name:"Blade Break 3",type:1,func:2,calc:0,arg1:0.3,arg2:1,range:8,prob:70,desc:"Lower ATK of all foes."},96:{name:"Shield Rend 3",type:1,func:2,calc:0,arg1:0.3,arg2:2,range:8,prob:70,desc:"Lower DEF of all foes."},97:{name:"Mind Rust 3",type:1,func:2,calc:0,arg1:0.3,arg2:3,range:8,prob:70,desc:"Lower WIS of all foes."},98:{name:"Speed Sap 3",type:1,func:2,calc:0,arg1:0.3,arg2:4,range:8,prob:70,desc:"Lower AGI of all foes."},104:{name:"Blade Break 4",type:1,func:2,calc:0,arg1:0.4,arg2:1,range:8,prob:70,desc:"Lower ATK of all foes."},105:{name:"Shield Rend 4",type:1,func:2,calc:0,arg1:0.4,arg2:2,range:8,prob:70,desc:"Lower DEF of all foes."},106:{name:"Mind Rust 4",type:1,func:2,calc:0,arg1:0.4,arg2:3,range:8,prob:70,desc:"Lower WIS of all foes."},107:{name:"Speed Sap 4",type:1,func:2,calc:0,arg1:0.4,arg2:4,range:8,prob:70,desc:"Lower AGI of all foes."},108:{name:"Icestorm",type:2,func:4,calc:2,arg1:2,range:8,prob:30,ward:3,desc:"Deal ice damage to all foes."},109:{name:"Plasma field",type:2,func:4,calc:2,arg1:2,range:8,prob:30,ward:2,desc:"Deal lightning damage to all foes."},110:{name:"Typhoon",type:2,func:4,calc:3,arg1:2,range:8,prob:30,ward:2,desc:"Deal AGI-based damage to all foes."},111:{name:"Whorl of Wisdom",type:2,func:4,calc:2,arg1:1,range:16,prob:30,ward:2,desc:"Deal WIS-based damage to three foes."},112:{name:"Whorl of Attack",type:2,func:3,calc:1,arg1:1,range:16,prob:30,ward:1,desc:"Deal ATK-based damage to three foes."},113:{name:"Thundercloud",type:2,func:4,calc:2,arg1:1,arg2:2,arg3:0.3,range:7,prob:30,ward:2,desc:"Deal damage and sometimes paralyze up to three foes."},114:{name:"Electric Shock",type:2,func:4,calc:2,arg1:2.5,range:7,prob:30,ward:2,desc:"Deal heavy lightning damage to up to three foes."},115:{name:"Venomstorm",type:2,func:3,calc:1,arg1:1.5,arg2:1,arg3:1,range:16,prob:30,ward:1,desc:"Deal heavy poison damage to three foes."},116:{name:"Mass Greater Heal",type:2,func:18,calc:4,arg1:0.7,range:4,prob:30,desc:"Restore a fixed amount of HP to all party members."},117:{name:"Hellfire",type:2,func:4,calc:2,arg1:1,range:8,prob:30,ward:2,desc:"Hurl a ball of flame to damage all foes."},118:{name:"Slashing Blade",type:2,func:3,calc:1,arg1:1,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes."},119:{name:"Flash of Rage",type:2,func:4,calc:2,arg1:0.9,range:17,prob:30,ward:2,desc:"Call down six random lightning bolts on foes."},120:{name:"Boon of Mind & Shield 2",type:1,func:1,calc:0,arg1:0.2,arg2:3,arg3:2,range:4,prob:70,desc:"Raise WIS and DEF of all party members."},121:{name:"Charge",type:2,func:4,calc:1,arg1:1.2,range:16,prob:30,ward:1,desc:"Deal ATK-based damage to three foes, regardless of his position."},122:{name:"Frontal Onslaught",type:2,func:3,calc:1,arg1:1.5,range:12,prob:30,ward:1,desc:"Deal heavy damage to the front line."},123:{name:"Flame Fist",type:2,func:3,calc:1,arg1:1.7,range:16,prob:30,ward:1,desc:"Deal heavy fire damage to three random targets."},124:{name:"Ice Fist",type:2,func:3,calc:1,arg1:1.7,range:16,prob:30,ward:1,desc:"Deal heavy ice damage to three random targets."},125:{name:"Shield & Dagger",type:5,func:14,calc:1,arg1:1,range:4,prob:50,ward:1,desc:"Take damage in place of any ally and counter."},127:{name:"Poison Fang",type:2,func:4,calc:2,arg1:1,arg2:1,arg3:0.3,range:16,prob:30,ward:2,desc:"Deal damage and sometimes poison three random targets."},128:{name:"Whiteout",type:2,func:4,calc:2,arg1:2.3,arg2:3,arg3:0.3,range:7,prob:30,ward:3,desc:"Deal heavy damage and sometimes freeze up to three foes."},129:{name:"Fire Whirlwind",type:2,func:4,calc:2,arg1:1,range:16,prob:30,ward:2,desc:"Deal damage to three foes."},131:{name:"Bloodlust Lance",type:2,func:4,calc:1,arg1:1,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes, ignoring position."},132:{name:"Boon of Blade & Wind 2",type:1,func:1,calc:0,arg1:0.2,arg2:1,arg3:4,range:4,prob:70,desc:"Raise ATK and AGI of all party members."},133:{name:"Blade Ward 2",type:1,func:1,calc:0,arg1:0.4,arg2:5,range:4,prob:70,desc:"Reduce physical damage taken by all allies."},134:{name:"Magic Ward 2",type:1,func:1,calc:0,arg1:0.4,arg2:6,range:4,prob:70,desc:"Reduce magic damage taken by all allies."},135:{name:"Breath Ward 2",type:1,func:1,calc:0,arg1:0.4,arg2:7,range:4,prob:70,desc:"Reduce breath damage taken by all allies."},136:{name:"Breath Ward",type:1,func:1,calc:0,arg1:0.7,arg2:7,range:3,prob:70,desc:"Reduce breath damage taken by self and adjacent familiars."},137:{name:"Binding Arcana",type:2,func:3,calc:1,arg1:1,arg2:5,arg3:0.3,arg4:3,range:19,prob:30,ward:1,desc:"Deal four physical strikes that sometimes silence foes."},138:{name:"Head Bash",type:2,func:3,calc:1,arg1:3,range:23,prob:30,ward:1,desc:"Deal heavy physical damage to two random targets."},139:{name:"Mad Dash",type:2,func:3,calc:1,arg1:2,range:23,prob:30,ward:1,desc:"Deal Massive ATK-based damage to two random foes."},140:{name:"Numbing Touch",type:2,func:3,calc:1,arg1:1,arg2:2,arg3:0.7,range:5,prob:70,ward:1,desc:"Cause attacks to have a high chance to paralyze foes."},141:{name:"Burning Rage",type:2,func:4,calc:2,arg1:0.9,range:17,prob:30,ward:2,desc:"Engulf six random foes in flames."},142:{name:"Barrage",type:2,func:3,calc:1,arg1:0.9,range:20,prob:30,ward:1,desc:"Deal physical damage to five random targets."},143:{name:"Sonic Boom",type:2,func:7,calc:1,arg1:1,arg2:0.1,range:8,prob:30,ward:1,desc:"Damage all foes. May kill targets outright."},144:{name:"Windcrush",type:2,func:4,calc:2,arg1:1,range:19,prob:30,ward:2,desc:"Deal heavy damage to four foes."},145:{name:"Mass Greater Heal 2",type:2,func:18,calc:4,arg1:2,range:4,prob:30,desc:"Restore a fixed amount of HP to all party members."},146:{name:"Ritual of Binding",type:1,func:19,calc:0,arg1:0,arg2:5,arg3:0.3,arg4:3,range:8,prob:70,desc:"Chance to silence all foes at beginning of battle."},147:{name:"Spirit Curse",type:2,func:4,calc:2,arg1:1,arg2:4,arg3:0.3,range:16,prob:30,ward:2,desc:"Deal damage and sometimes disable three random foes."},148:{name:"Windblast",type:2,func:22,calc:2,arg1:1.5,arg2:4,arg3:0.3,arg4:0.2,range:16,prob:30,ward:2,desc:"Deal damage and sometimes lower AGI of three foes."},149:{name:"Spiteful Strike",type:2,func:21,calc:1,arg1:1,arg2:2,arg3:0.3,arg4:0.2,range:8,prob:30,ward:1,desc:"Deal damage to all foes and sometimes lower DEF."},150:{name:"Grin and Bear It",type:3,func:20,calc:0,arg1:0.5,range:21,prob:70,desc:"Survive devastating damage as long as HP is above 50%."},152:{name:"Mad Swing",type:2,func:4,calc:1,arg1:1.7,range:7,prob:30,ward:1,desc:"Deal heavy damage to up to three foes with a mighty swing."},153:{name:"Onfall",type:2,func:4,calc:1,arg1:4,range:5,prob:30,ward:1,desc:"Deal massive damage with dual blades to one foe."},154:{name:"Cloak & Dagger 2",type:5,func:14,calc:1,arg1:1.5,range:2,prob:50,ward:1,desc:"Take heavy damage in place of nearby ally and counter."},155:{name:"Firecell Roar",type:2,func:22,calc:2,arg1:1.5,arg2:1,arg3:0.3,arg4:0.2,range:16,prob:30,ward:2,desc:"Three random fire strikes that sometimes lower ATK."},156:{name:"Rebuke",type:2,func:3,calc:3,arg1:2,range:23,prob:30,ward:1,desc:"Deal heavy AGI-based damage to two random foes."},157:{name:"Rally Cry",type:1,func:1,calc:0,arg1:0.1,arg2:9,range:4,prob:70,desc:"Raise ATK, DEF, WIS and AGI of all party members."},160:{name:"Ice Fang",type:2,func:4,calc:1,arg1:1.5,arg2:3,arg3:0.3,range:16,prob:30,ward:1,desc:"Deal heavy ice damage and sometimes freeze three foes."},161:{name:"Shadow Strike",type:2,func:3,calc:3,arg1:1,range:19,prob:30,ward:1,desc:"Deal AGI-based damage to four random foes."},163:{name:"Poison Mist",type:2,func:4,calc:2,arg1:2.3,arg2:1,arg3:0.3,range:7,prob:30,ward:2,desc:"Deal massive damage and sometimes poison up to three foes."},164:{name:"Boon of Mind & Blade 2",type:1,func:1,calc:0,arg1:0.2,arg2:1,arg3:3,range:4,prob:70,desc:"Raise the ATK and WIS of all party members."},165:{name:"Furious Cannon",type:2,func:22,calc:2,arg1:1,arg2:1,arg3:0.3,arg4:0.5,range:8,prob:30,ward:2,desc:"Deal fire damage to all foes and sometimes lower ATK."},166:{name:"Payback",type:3,func:13,calc:1,arg1:2.3,range:21,prob:50,ward:1,desc:"Chance to unleash a massive counter attack when struck."},167:{name:"Bulwark",type:1,func:1,calc:0,arg1:0.4,arg2:5,range:3,prob:70,desc:"Reduce physical damage taken by self and nearby familiars."},168:{name:"Frost and Ice",type:2,func:4,calc:2,arg1:0.8,arg2:3,arg3:0.3,range:17,prob:30,ward:2,desc:"Deal damage and sometimes freeze six random foes."},169:{name:"Silent Cheer",type:1,func:1,calc:0,arg1:0.2,arg2:8,range:2,prob:70,desc:"Raise the skill trigger rate of adjacent familiars."},170:{name:"War Dance",type:2,func:4,calc:3,arg1:1.5,range:15,prob:30,ward:2,desc:"Deal heavy AGI-based damage to foes in front and middle."},175:{name:"Lifesaver",type:2,func:18,calc:4,arg1:2,range:2,prob:30,desc:"Restore a large amount of HP to adjacent familiars."},177:{name:"Divine Shield",type:1,func:1,calc:0,arg1:0.65,arg2:5,range:21,prob:70,desc:"Escape most damage from physical attacks."},178:{name:"Light Fist",type:2,func:3,calc:1,arg1:1.7,range:16,prob:30,ward:1,desc:"Deal heavy lightning damage to three random targets."},179:{name:"Sword of Justice",type:2,func:3,calc:3,arg1:2.5,range:23,prob:30,ward:1,desc:"Deal massive AGI-based damage to two random foes."},180:{name:"Proxy Counter",type:5,func:14,calc:1,arg1:1,range:28,prob:50,ward:1,desc:"Take damage in place of familiars to its right and counter."},185:{name:"Thunderclap",type:2,func:4,calc:2,arg1:0.7,arg2:2,arg3:0.3,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes and sometimes paralyze them."},186:{name:"Razor Claws",type:2,func:3,calc:1,arg1:2,arg2:2,arg3:0.5,range:6,prob:30,ward:1,desc:"Deal massive damage and sometimes paralyze up to two foes."},187:{name:"Mega Shot",type:2,func:4,calc:1,arg1:4,range:5,prob:30,ward:1,desc:"Deal ATK-based damage to one foe, ignoring position."},188:{name:"Shatter Armor",type:2,func:21,calc:1,arg1:3,arg2:2,arg3:0.3,arg4:0.3,range:5,prob:30,ward:1,desc:"Deal a heavy blow to one foe, sometimes lowering DEF."},193:{name:"Angler",type:2,func:24,calc:0,range:21,prob:50,randSkills:[10,11,16,18,19,20,21,26,27,28,29,34,38,39,41,42,43,45,46,47,48,50,51,52,54,55,69,70,108,110,111,113,114,115,116,117,118,119,121,122,123,124,127,129,131,137,138,139,140,144,145,147,148,149,152,153,155,156,160,161,163,175,187,188,197,198,206],desc:"Not even its user knows what this skill will do."},195:{name:"Warrior's Wrath",type:2,func:3,calc:1,arg1:2,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},196:{name:"Spark Shot",type:2,func:3,calc:1,arg1:0.8,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},197:{name:"Revitalize",type:2,func:18,calc:4,arg1:1.5,range:4,prob:30,desc:"Restore HP to all party members."},198:{name:"Flame Rasp",type:2,func:4,calc:2,arg1:1.3,range:7,prob:30,ward:3,desc:"Deal heavy damage to up to three foes."},199:{name:"Cruelest Touch",type:2,func:3,calc:1,arg1:0.75,arg2:1,arg3:0.25,range:17,prob:30,ward:1,desc:"Deal ATK-based damage and sometimes poison six random foes."},202:{name:"Trial by Fire",type:2,func:4,calc:2,arg1:2,range:6,prob:30,ward:3,desc:"Deal massive WIS-based fire damage to up to two foes."},203:{name:"Trial by Ice",type:2,func:4,calc:2,arg1:2,arg2:3,arg3:0.3,range:6,prob:30,ward:3,desc:"Deal massive WIS-based water damage to up to two foes."},204:{name:"Frozen Spear",type:2,func:4,calc:2,arg1:3,arg2:3,arg3:0.7,range:5,prob:30,ward:2,desc:"Deal massive damage and sometimes freeze one foe."},205:{name:"Crushing Hammer",type:2,func:4,calc:1,arg1:1,arg2:3,arg3:0.3,range:8,prob:30,ward:1,desc:"Deal physical damage and sometimes freeze all foes."},206:{name:"Dance of Petals",type:2,func:4,calc:3,arg1:1,range:16,prob:30,ward:2,desc:"Deal AGI-based damage to three random foes, ignoring position."},210:{name:"Poison Spout",type:2,func:4,calc:2,arg1:1.2,arg2:1,arg3:0.3,range:19,prob:30,ward:3,desc:"Deal WIS-based damage and sometimes poison four random foes."},211:{name:"Requiem",type:2,func:3,calc:1,arg1:1,arg2:5,arg3:0.3,arg4:3,range:8,prob:30,ward:1,desc:"Deal physical damage and sometimes silence all foes."},212:{name:"Ghasthunt",type:2,func:3,calc:2,arg1:1.2,range:19,prob:30,ward:1,desc:"Deal WIS-based damage to four random foes."},214:{name:"Blade of Madness",type:2,func:3,calc:1,arg1:1.35,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes."},216:{name:"Bodycheck",type:2,func:3,calc:1,arg1:2.5,range:6,prob:30,ward:1,desc:"Deal massive ATK-based damage to up to two foes."},217:{name:"Harrowing Trial",type:2,func:4,calc:2,arg1:2.5,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes."},218:{name:"Boulder Toss",type:2,func:3,calc:1,arg1:1.4,arg2:2,arg3:0.3,range:15,prob:30,ward:1,desc:"Deal ATK-based damage and sometimes paralyze front/middles lines."},219:{name:"Evil Eye",type:2,func:21,calc:3,arg1:1.2,arg2:4,arg3:0.3,arg4:0.3,range:8,prob:30,ward:1,desc:"Deal AGI-based damage and sometimes lower AGI of all foes."},221:{name:"Skittering Darkness",type:2,func:3,calc:1,arg1:1.5,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},222:{name:"Boastful Blade",type:2,func:3,calc:1,arg1:1.9,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},224:{name:"Feather Shot",type:2,func:4,calc:1,arg1:2.1,range:16,prob:30,ward:1,desc:"Deal massive ATK-based damage to three random foes."},225:{name:"Wings of Winter",type:2,func:3,calc:3,arg1:0.8,range:20,prob:30,ward:1,desc:"Deal AGI-based damage to five random foes."},226:{name:"Pirate's Pride",type:2,func:4,calc:2,arg1:1.8,arg2:2,arg3:0.3,range:15,prob:30,ward:2,desc:"Deal WIS-based damage and sometimes paralyze front/middle lines."},227:{name:"Muscle Play",type:2,func:3,calc:1,arg1:1.65,range:7,prob:30,ward:1,desc:"Deal massive ATK-based damage to up to three foes."},228:{name:"Mecha Rush",type:2,func:4,calc:1,arg1:1.8,range:14,prob:30,ward:1,desc:"Deal massive ATK-based damage to all foes in the rear line."},229:{name:"Spirit Word",type:2,func:3,calc:2,arg1:2.1,range:16,prob:30,ward:1,desc:"Deal massive WIS-based damage to three random foes."},231:{name:"Rolling Thunder",type:2,func:21,calc:3,arg1:1.25,arg2:1,arg3:0.3,arg4:0.2,range:8,prob:30,ward:1,desc:"Deal AGI-based damage to all foes and sometimes lower ATK."},232:{name:"Lightning Web",type:2,func:4,calc:2,arg1:2.15,arg2:2,arg3:0.3,range:16,prob:30,ward:2,desc:"Deal massive WIS-based damage and sometimes paralyze three foes."},234:{name:"Lightning Spirits",type:2,func:4,calc:2,arg1:1.15,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes."},236:{name:"Flash",type:2,func:4,calc:2,arg1:2.25,range:16,prob:30,ward:2,desc:"Deal massive WIS-based damage to three random foes, ignoring position."},237:{name:"Piercing Claws",type:2,func:4,calc:2,arg1:2.15,range:7,prob:30,ward:2,desc:"Deal massive WIS-based damage to up to three foes, ignoring position."},238:{name:"Shadow Slash",type:2,func:3,calc:1,arg1:1.05,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},239:{name:"Dark Rush",type:2,func:4,calc:3,arg1:2,range:16,prob:30,ward:2,desc:"Deal massive AGI-based damage to three random foes, ignoring position."},240:{name:"Midnight Smile",type:1,func:1,calc:0,arg1:0.2,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars at start of battle."},241:{name:"Chilling Blast",type:2,func:3,calc:1,arg1:1.7,arg2:3,arg3:0.3,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage and sometimes freeze three random foes."},242:{name:"Glacial Blade",type:2,func:4,calc:2,arg1:1.7,arg2:3,arg3:0.3,range:7,prob:30,ward:2,desc:"Deal heavy WIS-based damage and sometimes freeze up to three foes, ignoring position."},244:{name:"High Spirits",type:2,func:4,calc:2,arg1:1.6,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},245:{name:"Brave Blade",type:2,func:4,calc:2,arg1:1.2,range:8,prob:30,ward:2,desc:"Deal WIS-based damage to all foes, ignoring position."},248:{name:"Venomwing Dance",type:2,func:3,calc:3,arg1:1.45,arg2:1,arg3:0.3,range:19,prob:30,ward:1,desc:"Deal heavy AGI-based damage and randomly poison four foes."},249:{name:"Steelscales",type:2,func:3,calc:1,arg1:0.9,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes."},250:{name:"Goddess of the Deep",type:2,func:3,calc:3,arg1:1.6,range:7,prob:30,ward:1,desc:"Deal heavy AGI-based damage to up to three foes."},251:{name:"Hungry Beak",type:2,func:3,calc:1,arg1:1,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},252:{name:"Scathing Fire Brand",type:2,func:3,calc:1,arg1:1.5,range:15,prob:30,ward:1,desc:"Deal heavy ATK-based damage to all foes in the front/middle line."},253:{name:"Brutal Fist",type:2,func:3,calc:1,arg1:2.1,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},254:{name:"Roving Fang",type:2,func:3,calc:3,arg1:1.6,range:12,prob:30,ward:1,desc:"Deal heavy AGI-based damage to all foes in the front line."},256:{name:"Silent Madness",type:2,func:3,calc:1,arg1:1.3,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three foes."},258:{name:"Fatal Kiss",type:2,func:4,calc:2,arg1:1.35,range:8,prob:30,ward:2,desc:"Deal WIS-based damage to all foes, ignoring position."},259:{name:"Hell Spark",type:2,func:3,calc:1,arg1:1.1,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},260:{name:"Curse of Ages",type:2,func:21,calc:3,arg1:0.7,arg2:1,arg3:0.3,arg4:0.2,range:17,prob:30,ward:1,desc:"Deal AGI-based damage to six random foes and sometimes lower ATK."},261:{name:"Groundswell",type:2,func:4,calc:2,arg1:1.15,range:8,prob:30,ward:2,desc:"Deal WIS-based damage to all foes, ignoring position."},263:{name:"Judgment",type:2,func:3,calc:1,arg1:1.75,range:7,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to three foes."},264:{name:"Bone Crush",type:2,func:3,calc:1,arg1:1.95,range:16,prob:30,ward:1,desc:"Deal massive ATK-based damage to three random foes."},265:{name:"Ancient Feast",type:1,func:1,calc:0,arg1:0.5,arg2:1,range:3,prob:70,desc:"Raise ATK of self and adjacent familiars at beginning of battle."},267:{name:"Swordmaster",type:2,func:3,calc:3,arg1:2.4,range:7,prob:30,ward:1,desc:"Deal massive AGI-based damage to up to three foes."},268:{name:"Gaoler's Torment",type:2,func:3,calc:3,arg1:1.65,range:15,prob:30,ward:1,desc:"Deal heavy AGI-based damage to front/middle lines."},269:{name:"Tears of the Hideous",type:2,func:4,calc:3,arg1:2.05,range:16,prob:30,ward:2,desc:"Deal massive AGI-based damage to three random foes, ignoring position."},270:{name:"Withering Flame",type:2,func:4,calc:2,arg1:1.7,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},271:{name:"Scales of Tranquility",type:1,func:19,calc:0,arg1:0,arg2:5,arg3:0.45,arg4:1,range:7,prob:70,desc:"Chance to silence up to three foes for one turn at start of battle."},272:{name:"Bewitching Wings",type:2,func:4,calc:2,arg1:2.5,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes, ignoring position."},273:{name:"Stirring Kiss",type:2,func:6,calc:0,arg1:1,range:2,prob:50,desc:"Revive and fully restore HP of adjacent familiars."},274:{name:"Eternal Sleep",type:2,func:3,calc:3,arg1:1.5,range:32,prob:30,ward:1,desc:"Deal heavy AGI-based damage to up to four foes."},275:{name:"Blinding Light",type:2,func:4,calc:2,arg1:1.7,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},276:{name:"Divine Grief",type:2,func:4,calc:2,arg1:2,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes, ignoring position."},277:{name:"Nightmarish Notion",type:2,func:4,calc:2,arg1:1.1,arg2:3,arg3:0.3,range:20,prob:30,ward:3,desc:"Deal WIS-based damage and sometimes freeze five random foes, ignoring position."},280:{name:"Snake Charmer",type:2,func:4,calc:2,arg1:2.05,range:16,prob:30,ward:2,desc:"Deal massive WIS-based damage to three random foes, ignoring position."},281:{name:"Snake Eyes",type:2,func:4,calc:2,arg1:2.1,arg2:2,arg3:0.3,range:7,prob:30,ward:2,desc:"Deal massive WIS-based damage and sometimes paralyze up to three foes."},282:{name:"Corpse Hymn",type:2,func:4,calc:3,arg1:1,range:20,prob:30,ward:2,desc:"Deal AGI-based damage to five random foes, ignoring position."},285:{name:"Moon Soul",type:2,func:4,calc:2,arg1:1.45,range:15,prob:30,ward:2,desc:"Deal WIS-based damage to front/middle lines, ignoring position."},287:{name:"Staff of Knowledge",type:2,func:18,calc:4,arg1:1.3,range:3,prob:70,desc:"High chance to restore HP to self and adjacent familiars."},288:{name:"Chain Attack",type:2,func:4,calc:2,arg1:0.95,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},289:{name:"Quakeblade",type:2,func:3,calc:1,arg1:1.35,range:15,prob:30,ward:1,desc:"Deal ATK-based damage to front/middle lines."},291:{name:"Grin and Bear It 2",type:3,func:20,calc:0,arg1:0.01,range:21,prob:70,desc:"Survive devastating damage as long as HP is above 1%."},292:{name:"Golden Rule",type:2,func:4,calc:1,arg1:2.1,range:7,prob:30,ward:1,desc:"Deal massive ATK-based damage to up to three foes, ignoring position."},293:{name:"Cruel Flame",type:2,func:4,calc:1,arg1:1.7,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes, ignoring position."},294:{name:"Mocking Laugh",type:2,func:3,calc:1,arg1:2.5,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},295:{name:"Dream Lure",type:1,func:19,calc:0,arg1:0,arg2:4,arg3:0.25,range:7,prob:70,desc:"Sometimes disable up to three foes at start of battle."},296:{name:"Blood Offering",type:2,func:4,calc:1,arg1:1.2,arg2:4,arg3:0.3,range:17,prob:30,ward:1,desc:"Deal ATK-based damage and disable six random foes, ignoring position."},297:{name:"Awe of the Wild",type:2,func:4,calc:3,arg1:2.15,range:16,prob:30,ward:2,desc:"Deal massive AGI-based damage to three random foes, ignoring position."},298:{name:"Freezing Scales",type:2,func:4,calc:2,arg1:1.35,arg2:3,arg3:0.3,range:8,prob:30,ward:2,desc:"Deal WIS-based damage to all foes and sometimes freeze them, ignoring position."},299:{name:"Crazed Axe",type:2,func:3,calc:1,arg1:1.7,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},301:{name:"Fortitude",type:3,func:20,calc:0,arg1:0.2,range:21,prob:70,desc:"Survive devastating damage as long as HP is above 20%."},302:{name:"Ice Wall",type:2,func:4,calc:2,arg1:1.4,range:8,prob:30,ward:3,desc:"Deal WIS-based damage to all foes, ignoring position."},303:{name:"Chill Horn",type:2,func:3,calc:2,arg1:1.9,range:16,prob:30,ward:1,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},304:{name:"Ferocious Omen",type:1,func:1,calc:0,arg1:0.1,arg2:1,range:3,prob:70,desc:"Raise ATK of self and adjacent familiars."},305:{name:"Dancing Flame",type:2,func:4,calc:2,arg1:1.3,range:19,prob:30,ward:3,desc:"Deal WIS-based damage to four random foes, ignoring position."},307:{name:"Evil Wink",type:2,func:3,calc:2,arg1:1.8,range:16,prob:30,ward:1,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},308:{name:"Bloodied Hands",type:2,func:4,calc:2,arg1:1.7,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes."},311:{name:"Black Phantasm",type:2,func:3,calc:1,arg1:1.75,range:6,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to two foes."},312:{name:"Demon Spear",type:2,func:3,calc:1,arg1:1.75,range:6,prob:30,ward:1,desc:"A spear technique from the West. Deal heavy ATK-based damage to up to two foes."},313:{name:"White Ruin",type:2,func:4,calc:2,arg1:1.5,range:8,prob:30,ward:3,desc:"Deal heavy WIS-based damage to all foes, ignoring position."},314:{name:"Fearless Laugh",type:2,func:3,calc:1,arg1:1.3,range:32,prob:30,ward:1,desc:"Deal ATK-based damage to up to four foes."},315:{name:"Trembling Horn",type:2,func:3,calc:1,arg1:1.3,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},316:{name:"Healing Prism",type:3,func:11,calc:1,arg1:1,range:3,prob:30,desc:"Convert damage to heal self and adjacent familiars."},317:{name:"Mad Swing 2",type:2,func:4,calc:1,arg1:1.9,range:7,prob:30,ward:1,desc:"Deal heavy damage to up to three foes with a mighty swing."},318:{name:"Frontier Spirit",type:2,func:3,calc:1,arg1:1.1,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},319:{name:"Magic Overwhelming",type:2,func:4,calc:2,arg1:1.55,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},320:{name:"Mystic Teachings",type:1,func:1,calc:0,arg1:0.1,arg2:3,range:3,prob:70,desc:"Raise WIS of self and adjacent familiars at beginning of battle."},321:{name:"Roaring Blood",type:2,func:3,calc:2,arg1:0.95,range:17,prob:30,ward:1,desc:"Deal WIS-based damage to six random foes."},322:{name:"Cruel Dance",type:2,func:4,calc:3,arg1:1.5,range:15,prob:30,ward:2,desc:"Deal heavy AGI-based damage to front/middle lines, ignoring position."},325:{name:"Rippling Flame",type:2,func:3,calc:1,arg1:1.85,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},326:{name:"Heart of the Warrior",type:2,func:3,calc:1,arg1:1.6,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},327:{name:"Test of Courage",type:2,func:3,calc:1,arg1:1.6,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},328:{name:"Rime Fist",type:2,func:4,calc:2,arg1:1.4,arg2:3,arg3:0.3,range:20,prob:30,ward:2,desc:"Deal WIS-based damage and sometimes freeze five random foes, ignoring position."},329:{name:"Backstep",type:5,func:27,calc:0,arg1:2,arg2:3,arg3:78,arg4:79,range:21,prob:50,desc:"Evade enemy AGI-based attack skills."},330:{name:"Dark Blessing",type:1,func:19,calc:0,arg1:0,arg2:5,arg3:0.45,arg4:1,range:7,prob:70,desc:"Chance to silence up to three foes for one turn at start of battle."},331:{name:"Light Divine",type:2,func:4,calc:2,arg1:1.2,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},333:{name:"Cold-Blooded Smile",type:2,func:3,calc:3,arg1:1.2,arg2:3,arg3:0.3,range:8,prob:30,ward:1,desc:"Deal AGI-based damage and sometimes freeze all foes."},334:{name:"Gift of Terror",type:2,func:4,calc:2,arg1:1.5,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage to three random foes."},336:{name:"Golden Flame",type:2,func:4,calc:2,arg1:1.65,range:15,prob:30,ward:3,desc:"Deal heavy WIS-based damage to all foes in the front/middle lines, ignoring position."},339:{name:"Burning Scales",type:2,func:4,calc:2,arg1:2,range:15,prob:30,ward:3,desc:"Deal massive WIS-based damage to all foes in the front/middle lines, ignoring position."},340:{name:"Penance",type:2,func:3,calc:1,arg1:1.25,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes."},341:{name:"Staff of Ages",type:2,func:3,calc:3,arg1:1.15,range:19,prob:30,ward:1,desc:"Deal AGI-based damage to four random foes."},342:{name:"Shadow Master",type:1,func:1,calc:0,arg1:0.3,arg2:17,arg3:1.25,range:3,prob:70,desc:"Raise HP of self and adjacent familiars at beginning of battle."},343:{name:"Curiosity",type:2,func:21,calc:2,arg1:1.5,arg2:4,arg3:0.3,arg4:0.3,range:8,prob:30,ward:1,desc:"Deal heavy WIS-based damage to all foes, sometimes lowering AGI."},345:{name:"Wheel of Death",type:2,func:4,calc:2,arg1:2.2,range:16,prob:30,ward:2,desc:"Deal massive WIS-based damage to three random foes, ignoring position."},346:{name:"Hellish Rebirth",type:2,func:6,calc:0,arg1:1,range:101,prob:50,desc:"Revive and fully restore HP of 1 random familiar."},347:{name:"Raging Flames",type:2,func:3,calc:3,arg1:2.4,range:16,prob:30,ward:1,desc:"Deal massive AGI-based damage to three random foes."},348:{name:"Inferno",type:2,func:3,calc:1,arg1:1.4,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},349:{name:"Staff of Tyranny",type:2,func:3,calc:1,arg1:1.55,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},351:{name:"Sword of Fealty",type:2,func:3,calc:1,arg1:1.3,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},352:{name:"Spell of Revival",type:1,func:1,calc:0,arg1:355,arg2:16,range:3,prob:70,desc:"Self and adjacent allies are automatically revived after being killed."},353:{name:"Icerend Claws",type:2,func:3,calc:1,arg1:1.45,arg2:3,arg3:0.3,range:16,prob:30,ward:1,desc:"Deal ATK-based damage to three random foes and sometimes freeze them."},354:{name:"Venomspray Staff",type:2,func:4,calc:2,arg1:2.9,arg2:1,arg3:0.3,arg4:15,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes and sometimes envenom them."},355:{name:"Dawn's Light",type:16,func:6,calc:0,arg1:0.5,range:21,prob:100},356:{name:"Wicked Bolt",type:2,func:4,calc:2,arg1:1.95,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},357:{name:"Welkin Wings",type:2,func:3,calc:3,arg1:1.75,range:12,prob:30,ward:1,desc:"Deal heavy AGI-based damage to all foes in the front line."},358:{name:"Call of Steel",type:2,func:3,calc:1,arg1:1.3,arg2:5,arg3:0.1,arg4:3,range:19,prob:30,ward:1,desc:"Deal ATK-based damage and sometimes silence four random foes."},359:{name:"Seeping Darkness",type:2,func:3,calc:1,arg1:1.25,range:16,prob:30,ward:1,desc:"Deal ATK-based damage to three random foes."},360:{name:"Curse of Wrath",type:2,func:4,calc:2,arg1:1,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},361:{name:"Resplendent Light",type:2,func:3,calc:1,arg1:1,range:20,prob:30,ward:2,desc:"Deal ATK-based damage to five random foes."},362:{name:"Rite of Vengeance",type:2,func:3,calc:1,arg1:1.85,range:23,prob:30,ward:1,desc:"Deal heavy ATK-based damage to two random foes."},364:{name:"Depths of Corruption",type:2,func:4,calc:1,arg1:1.95,range:7,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to three foes, ignoring position."},365:{name:"Bug Attack",type:2,func:4,calc:1,arg1:1.95,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes, ignoring position."},366:{name:"Bone Chill",type:2,func:4,calc:2,arg1:1.7,range:32,prob:30,ward:3,desc:"Deal heavy WIS-based damage to up to four foes, ignoring position."},367:{name:"Howl",type:2,func:3,calc:3,arg1:0.9,range:20,prob:30,ward:1,desc:"Deal AGI-based damage to five random foes."},369:{name:"Stone Rain",type:2,func:3,calc:1,arg1:1.45,range:7,prob:30,ward:1,desc:"Deal ATK-based damage up to three foes."},370:{name:"Dust Cloud",type:1,func:1,calc:0,arg1:1,arg2:18,range:132,prob:70,desc:"Allows two random allies to perform an extra action during the next turn."},371:{name:"Battle Hierarchy",type:1,func:31,calc:0,arg1:1,arg2:1,range:4,prob:70,desc:"Change the attack order by ATK for one turn."},372:{name:"Curse Foil",type:3,func:13,calc:1,arg1:1.3,range:21,prob:50,ward:1,desc:"Chance to unleash a counter attack when struck."},374:{name:"Streaming Feathers",type:3,func:11,calc:1,arg1:1,range:3,prob:50,desc:"Convert damage to heal self and adjacent familiars."},375:{name:"Windcutter Blade",type:2,func:4,calc:1,arg1:2,range:16,prob:30,ward:1,desc:"Deal massive ATK-based damage to three random foes, ignoring position."},376:{name:"Enigmatic Bloom",type:2,func:6,calc:0,arg1:1,range:2,prob:50,desc:"Revive and fully restore HP of adjacent familiars."},377:{name:"Healing Bloom",type:2,func:18,calc:4,arg1:1,range:21,prob:70,desc:"Restore HP to self."},378:{name:"Blade Flurry",type:2,func:21,calc:3,arg1:1,arg2:1,arg3:0.3,arg4:0.3,range:19,prob:30,ward:1,desc:"Deal AGI-based damage to four random foes and sometimes lower ATK."},379:{name:"Dragon Aura",type:2,func:4,calc:2,arg1:1.9,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},380:{name:"Feral Claws",type:2,func:3,calc:3,arg1:0.95,range:17,prob:30,ward:1,desc:"Deal AGI-based damage to six random foes."},381:{name:"Lion's Roar",type:1,func:1,calc:0,arg1:0.4,arg2:6,arg3:7,range:3,prob:70,desc:"Reduce magic and breath damages taken by self and adjacent familiars."},382:{name:"Laevateinn",type:2,func:3,calc:1,arg1:1.65,range:7,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to three foes."},383:{name:"Flame of Cinders",type:2,func:3,calc:1,arg1:1.65,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},385:{name:"Prominence",type:2,func:3,calc:1,arg1:1,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},386:{name:"Sun's Mercy",type:1,func:1,calc:0,arg1:0.15,arg2:1,range:3,prob:70,desc:"Raise ATK of self and adjacent familiars."},387:{name:"Earth's Fury",type:2,func:3,calc:1,arg1:1.35,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},388:{name:"Melody of Mercy",type:1,func:1,calc:0,arg1:0.3,arg2:17,arg3:1.25,range:3,prob:70,desc:"Raise HP of self and adjacent familiars at beginning of battle."},389:{name:"Mystic Light",type:2,func:6,calc:0,arg1:1,range:121,prob:50,desc:"Revive and fully restore HP of one random ally."},390:{name:"Libra's Retribution",type:2,func:3,calc:1,arg1:1.6,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},391:{name:"Scatter Arrow",type:2,func:4,calc:3,arg1:1.3,range:32,prob:30,ward:2,desc:"Deal AGI-based damage to up to four foes, ignoring position."},392:{name:"Aries' Strike",type:2,func:3,calc:1,arg1:1.2,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},393:{name:"Sidestep",type:5,func:27,calc:0,arg1:2,arg2:3,arg3:78,arg4:79,range:21,prob:30,desc:"Evade enemy AGI-based attack skills."},394:{name:"Glance",type:2,func:4,calc:2,arg1:1.7,range:15,prob:30,ward:2,desc:"Deal heavy WIS-based damage to all foes in the front/middle lines, ignoring position."},395:{name:"Imperial Audience",type:1,func:19,calc:0,arg1:0,arg2:5,arg3:0.45,arg4:1,range:7,prob:70,desc:"Chance to silence up to three foes for one turn at the start of battle."},396:{name:"Venom Snare",type:5,func:28,calc:7,arg1:0.23,arg2:1,arg3:7,arg4:3,arg5:0.3,range:21,prob:30,desc:"Reflect ATK-based damage back to up to three foes."},397:{name:"Tarantella",type:1,func:1,calc:0,arg1:0.3,arg2:2,range:3,prob:70,desc:"Raise DEF of self and adjacent familiars."},398:{name:"Knuckle Guard",type:5,func:12,calc:0,arg1:0,range:4,prob:50,desc:"Take damage in place of allies."},400:{name:"Hatred Blade",type:2,func:3,calc:1,arg1:1.15,arg2:1,arg3:0.3,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes and sometimes poison them."},401:{name:"Shield of Ruin",type:1,func:19,calc:0,arg1:0,arg2:1,arg3:0.5,arg4:10,range:7,prob:70,desc:"Chance to poison up to three foes at the start of battle."},402:{name:"Tricksy Flames",type:2,func:4,calc:2,arg1:1.95,range:12,prob:30,ward:2,desc:"Deal heavy WIS-based damage to all foes in the front line, ignoring position."},403:{name:"Flickering Flames",type:5,func:27,calc:0,arg1:2,arg2:2,arg3:78,arg4:79,range:21,prob:50,desc:"Evade enemy WIS-based attack skills."},404:{name:"Niten Ichi-ryu",type:2,func:3,calc:1,arg1:1.75,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},405:{name:"Visions of Terror",type:2,func:4,calc:2,arg1:1.65,arg2:1,arg3:0.3,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to and sometimes poison four random foes, ignoring position."},406:{name:"Piercing Arrow",type:2,func:4,calc:1,arg1:1.35,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes, ignoring position."},407:{name:"Allure of the Rose",type:2,func:4,calc:2,arg1:1.3,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes, ignoring position."},408:{name:"Covenant of the Rose",type:1,func:1,calc:0,arg1:0.15,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars at start of battle."},411:{name:"Winds of Lust",type:2,func:4,calc:2,arg1:2.1,range:12,prob:30,ward:2,desc:"Deal massive WIS-based damage to all foes in the front line, ignoring position."},412:{name:"Fires of Thirst",type:2,func:4,calc:2,arg1:1.2,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes, ignoring position."},414:{name:"Putrid Stench",type:2,func:4,calc:2,arg1:1.2,arg2:1,arg3:0.25,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to and sometimes poison five random foes, ignoring position."},415:{name:"Sigiled Sanctuary",type:1,func:1,calc:0,arg1:0.11,arg2:3,range:3,prob:70,desc:"Raise WIS of self and adjacent familiars at start of battle."},416:{name:"Bone Smasher",type:2,func:4,calc:2,arg1:1.5,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},418:{name:"Nemesis",type:2,func:4,calc:2,arg1:2.1,range:7,prob:30,ward:2,desc:"Deal massive WIS-based damage to up to three foes, ignoring position."},419:{name:"Ichthocannon",type:2,func:4,calc:2,arg1:1.5,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},420:{name:"Breaking Wave",type:2,func:3,calc:1,arg1:1.35,range:15,prob:30,ward:1,desc:"Deal ATK-based damage to all foes in the front/middle line."},421:{name:"Light of Virtue",type:2,func:4,calc:2,arg1:1.9,arg2:3,arg3:0.5,range:16,prob:30,ward:3,desc:"Deal heavy WIS-based damage and sometimes freeze three random foes, ignoring position."},422:{name:"Maiden's Prayer",type:5,func:29,calc:0,arg1:0,arg2:0,arg3:8,arg4:1,range:21,prob:50,desc:"Remove the buffs of all foes after receiving an attack."},423:{name:"Wail of Sorrow",type:1,func:32,calc:0,arg1:0.2,arg2:2,range:7,prob:70,desc:"Greatly lower DEF of up to three foes."},424:{name:"Ultrasonic",type:2,func:4,calc:1,arg1:1.85,arg2:2,arg3:0.2,range:7,prob:30,ward:1,desc:"Deal heavy ATK-based damage to and sometimes paralyze up to three foes."},425:{name:"Lese Majesty",type:5,func:14,calc:1,arg1:1.5,range:4,prob:50,ward:1,desc:"Take damage in place of any ally and unleash a heavy counterattack."},426:{name:"Imperial Gift",type:2,func:18,calc:4,arg1:2,range:21,prob:50,desc:"Restore HP to self."},427:{name:"Funerary Rush",type:2,func:3,calc:1,arg1:1.5,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes."},428:{name:"Rematch",type:16,func:18,calc:4,arg1:0.5,arg2:1,range:122,prob:70,desc:"Heal two random allies for half of their maximum HP upon death."},430:{name:"Broken Vow",type:1,func:32,calc:0,arg1:0.22,arg2:3,range:7,prob:70,desc:"Greatly lower WIS of up to three foes."},431:{name:"Lovers' Arrows",type:2,func:4,calc:2,arg1:1.2,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},432:{name:"Spectrum",type:2,func:4,calc:2,arg1:2.25,range:7,prob:30,ward:3,desc:"Deal massive WIS-based damage to up to three foes, ignoring position."},433:{name:"Deep Rumble",type:2,func:3,calc:1,arg1:0.95,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes."},434:{name:"Maelstrom",type:2,func:3,calc:3,arg1:1.45,range:313,prob:30,ward:1,desc:"AGI-based damage to up to three foes. Increased if fewer foes."},435:{name:"Obedience",type:2,func:3,calc:3,arg1:1.5,arg2:2,arg3:0.3,range:19,prob:30,ward:1,desc:"Deal heavy AGI-based damage to and sometimes paralyze four random foes."},436:{name:"Troublemaker",type:5,func:28,calc:7,arg1:0.23,arg2:3,arg3:7,arg4:3,arg5:0.3,range:21,prob:50,desc:"Reflect AGI-based damage back to up to three foes."},438:{name:"Poison Torrent",type:2,func:3,calc:1,arg1:1.3,arg2:1,arg3:0.25,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to and sometimes poison four random foes."},440:{name:"Thunderstroke",type:2,func:4,calc:3,arg1:2,range:23,prob:30,ward:2,desc:"Deal massive AGI-based damage to two random foes, ignoring position."},441:{name:"Bolt of Judgment",type:2,func:4,calc:2,arg1:2.15,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes, ignoring position."},437:{name:"Mjolnir",type:2,func:4,calc:1,arg1:1.5,range:32,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to four foes, ignoring position."},442:{name:"Masterstroke",type:2,func:4,calc:1,arg1:1.05,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes, ignoring position."},443:{name:"Fangs of the Devoted",type:2,func:3,calc:3,arg1:2,range:23,prob:30,ward:1,desc:"Deal massive AGI-based damage to two random foes."},444:{name:"Cruel Swing",type:2,func:4,calc:1,arg1:1.45,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes, ignoring position."},445:{name:"Bastion",type:3,func:20,calc:0,arg1:0.1,range:21,prob:70,desc:"Survive devastating damage as long as HP is above 10%."},446:{name:"Tail Lash",type:2,func:4,calc:2,arg1:1.6,range:32,prob:30,ward:2,desc:"Deal heavy WIS-based damage to up to four foes, ignoring position."},447:{name:"Looming Nightmare",type:2,func:4,calc:2,arg1:1.6,range:32,prob:30,ward:2,desc:"Deal heavy WIS-based damage to up to four foes, ignoring position."},448:{name:"Leo's Claws",type:2,func:3,calc:3,arg1:1.3,range:19,prob:30,ward:1,desc:"Deal AGI-based damage to four random foes."},449:{name:"Whirling Dervish",type:2,func:3,calc:1,arg1:1.8,range:313,prob:30,ward:1,desc:"Heavy ATK-based damage to up to three foes. Increased if fewer foes."},450:{name:"Aquarius Unleashed",type:2,func:4,calc:2,arg1:1.25,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes, ignoring position."},451:{name:"Endless Deluge",type:1,func:1,calc:0,arg1:452,arg2:16,range:101,prob:70,desc:"One random ally is automatically revived with full HP after being killed."},452:{name:"Dawn's Tear",type:16,func:6,calc:0,arg1:1,range:21,prob:100},453:{name:"Shadow of Death",type:2,func:4,calc:2,arg1:1.65,range:314,prob:30,ward:2,desc:"Heavy WIS-based damage to up to four foes. Increased if fewer foes."},454:{name:"Shadow of Confusion",type:1,func:31,calc:0,arg1:2,arg2:2,range:4,prob:70,desc:"Order of attack is determined by WIS during the next two turns."},455:{name:"Berserker Rage",type:2,func:3,calc:1,arg1:0.85,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes."},456:{name:"Chain Lash",type:1,func:32,calc:0,arg1:0.5,arg2:1,range:7,prob:70,desc:"Greatly lower ATK of up to three foes."},457:{name:"Brink of Death",type:16,func:4,calc:1,arg1:3.5,range:5,prob:70,ward:1,desc:"Deal massive ATK-based damage, ignoring position, to one foe upon its death."},459:{name:"Fleet of Foot",type:2,func:4,calc:3,arg1:1.3,range:8,prob:30,ward:2,desc:"Deal AGI-based damage to all foes, ignoring position."},460:{name:"Void Strike",type:16,func:19,calc:0,arg1:0,arg2:5,arg3:0.6,arg4:1,range:8,prob:70,desc:"High chance to silence all foes for one turn upon his death."},461:{name:"Lion's Wrath",type:2,func:3,calc:1,arg1:1.35,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes."},462:{name:"Heroic Might",type:2,func:18,calc:4,arg1:2,range:113,prob:50,desc:"Restore HP to three random familiars."},463:{name:"Absolute Zero",type:2,func:4,calc:2,arg1:1.7,arg2:3,arg3:0.25,range:32,prob:30,ward:3,desc:"Deal heavy WIS-based damage and sometimes freeze up to four foes, ignoring position."},464:{name:"Chariot Rush",type:2,func:3,calc:3,arg1:1.8,arg2:2,arg3:0.3,range:16,prob:30,ward:1,desc:"Deal heavy AGI-based damage to and sometimes paralyze three random foes."},465:{name:"Stormcaller Pinion",type:2,func:4,calc:2,arg1:1.3,range:20,prob:30,ward:3,desc:"Deal WIS-based damage to five random foes, ignoring position."},466:{name:"Blade of Judgment",type:2,func:4,calc:1,arg1:1.8,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes, ignoring position."},467:{name:"Atonement",type:1,func:1,calc:0,arg1:0.3,arg2:5,arg3:7,range:4,prob:70,desc:"Reduce physical and breath damages taken by all familiars."},468:{name:"Rain of Death",type:2,func:3,calc:1,arg1:1.7,arg2:1,arg3:0.25,arg4:10,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage and sometimes envenom three random foes."},469:{name:"Sand Blade",type:2,func:21,calc:1,arg1:1.2,arg2:1,arg3:0.3,arg4:0.3,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes and sometimes reduce ATK."},471:{name:"Darkflame",type:2,func:4,calc:2,arg1:1,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},472:{name:"Nightveil",type:1,func:1,calc:0,arg1:0.1,arg2:1,arg3:3,range:3,prob:70,desc:"Raise WIS and ATK of self and adjacent familiars at start of battle."},473:{name:"Entomb",type:2,func:3,calc:1,arg1:1.15,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},474:{name:"Embalm",type:1,func:1,calc:0,arg1:0.3,arg2:5,range:3,prob:70,desc:"Reduce physical damage taken by self and adjacent familiars."},475:{name:"Hand of Fortune",type:2,func:24,calc:0,randSkills:[11,16,20,26,33,34,109,110,114,116,138,145,218,232,264,274,277,287,296,319,331,345,346,354,378,426,431,462],range:21,prob:50,desc:"The outcome of this skill depends on the user's Fortune."},476:{name:"Furious Horns",type:2,func:4,calc:2,arg1:2,range:16,prob:30,ward:2,desc:"Deal massive WIS-based damage to three random foes, ignoring position."},477:{name:"Chatter Tooth",type:2,func:4,calc:2,arg1:1.5,arg2:3,arg3:0.3,range:32,prob:30,ward:3,desc:"Deal heavy WIS-based damage and sometimes freeze up to four foes, ignoring position."},478:{name:"Cancer's Claws",type:2,func:3,calc:1,arg1:1.65,arg2:5,arg3:0.5,arg4:1,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage and sometimes silence three random foes."},479:{name:"Infiltrate",type:1,func:1,calc:0,arg1:1,arg2:18,arg3:0,arg4:0,range:121,prob:70,desc:"Allows a random ally to perform an extra action during the next turn."},480:{name:"Rasteira",type:2,func:3,calc:3,arg1:1.5,range:314,prob:30,ward:1,desc:"Heavy AGI-based damage to up to four foes. Increased if fewer foes."},481:{name:"Macaco",type:6,func:27,calc:0,arg1:2,arg2:9,arg3:78,arg4:79,range:21,prob:50,desc:"Evade enemy ATK-based and AGI-based attack skills."},482:{name:"Souldrain Fangs",type:2,func:36,calc:3,arg1:1.75,arg2:0.2,arg3:27,arg4:21,range:7,prob:30,ward:1,desc:"Drains HP from up to three foes while dealing heavy AGI-based damage."},483:{name:"Spearhead",type:1,func:19,calc:0,arg1:0,arg2:7,arg3:0.4,arg4:1,arg5:1,range:7,prob:70,desc:"Chance to blind up to three foes at start of battle."},484:{name:"Wall of the Brave",type:5,func:12,calc:0,arg1:0,range:4,prob:50,desc:"Take damage in place of allies."},485:{name:"Shield of the Coward",type:1,func:1,calc:0,arg1:1,arg2:2,range:21,prob:70,desc:"Raise DEF of self at start of battle."},487:{name:"Dance of Farewell",type:2,func:4,calc:2,arg1:1.1,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},488:{name:"Dance of Reunion",type:16,func:6,calc:0,arg1:1,range:121,prob:50,desc:"Revives one random ally upon her death."},489:{name:"Hardened Steel",type:1,func:1,calc:0,arg1:0.7,arg2:5,range:21,prob:70,desc:"Reduce physical damage taken by self greatly."},490:{name:"Steel Hooves",type:2,func:3,calc:1,arg1:1.2,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},491:{name:"Primitive Rage",type:2,func:3,calc:1,arg1:1.35,range:32,prob:30,ward:1,desc:"Deal ATK-based damage to up to four foes."},492:{name:"Razor Pinion",type:2,func:4,calc:1,arg1:1.75,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes, ignoring position."},493:{name:"Big Game Hunt",type:2,func:3,calc:3,arg1:1.25,range:314,prob:30,ward:1,desc:"AGI-based damage to up to four foes. Increased if fewer foes."},494:{name:"Hand of Justice",type:2,func:4,calc:2,arg1:1.65,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},495:{name:"Soul Prison",type:1,func:32,calc:0,arg1:0.25,arg2:4,range:7,prob:70,desc:"Greatly lower AGI of up to three foes."},496:{name:"Flame Cloud",type:2,func:4,calc:2,arg1:2.05,range:16,prob:30,ward:3,desc:"Deal massive WIS-based damage to three random foes, ignoring position."},497:{name:"Mighty Stomp",type:2,func:4,calc:1,arg1:2,range:16,prob:30,ward:1,desc:"Deal massive ATK-based damage to three random foes, ignoring position."},499:{name:"Snake Whip",type:2,func:4,calc:1,arg1:1.5,range:20,prob:30,ward:1,desc:"Deal heavy ATK-based damage to five random foes, ignoring position."},500:{name:"Spiny Carapace",type:3,func:13,calc:1,arg1:1.2,range:21,prob:50,ward:1,desc:"Chance to unleash a counter attack when struck."},501:{name:"Dragon Strike",type:2,func:22,calc:1,arg1:1.65,arg2:2,arg3:0.3,arg4:0.3,range:19,prob:30,ward:2,desc:"Heavy ATK-based damage to four random foes and sometimes lower DEF, ignoring position."},502:{name:"Flashing Blade",type:2,func:3,calc:3,arg1:1.6,range:16,prob:30,ward:1,desc:"Deal heavy AGI-based damage to three random foes."},503:{name:"Wing Aegis",type:3,func:20,calc:0,arg1:0.15,range:21,prob:70,desc:"Survive devastating damage as long as HP is above 15%."},504:{name:"Defender's Thunder",type:2,func:4,calc:3,arg1:2.3,arg2:2,arg3:0.35,range:16,prob:30,ward:2,desc:"Deal massive AGI-based damage, sometimes paralyze three random foes, ignoring position."},505:{name:"Fires of Perdition",type:2,func:22,calc:1,arg1:1.3,arg2:3,arg3:0.3,arg4:0.3,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes, sometimes lowering WIS, ignoring position."},506:{name:"Winds of Perdition",type:2,func:4,calc:2,arg1:1.85,range:313,prob:30,ward:2,desc:"Heavy WIS-based damage to up to three foes, ignoring position. Increased if fewer foes."},507:{name:"Sagittarius' Arrow",type:2,func:4,calc:3,arg1:1.2,range:20,prob:30,ward:2,desc:"Deal AGI-based damage to five random foes."},508:{name:"Sage's Wisdom",type:1,func:1,calc:0,arg1:0.5,arg2:6,range:3,prob:70,desc:"Reduce magic damage taken by self and adjacent familiars."},509:{name:"Atrocity",type:2,func:3,calc:1,arg1:1,arg2:4,arg3:0.3,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to and sometimes disable all foes."},510:{name:"Bedazzle",type:1,func:19,calc:0,arg1:0,arg2:7,arg3:0.4,arg4:2,arg5:0.7,range:7,prob:70,desc:"Chance to blind up to three foes for 2 turns at start of battle."},511:{name:"Twin Arrow",type:2,func:4,calc:1,arg1:2.1,range:6,prob:30,ward:1,desc:"Deal massive ATK-based damage to up to two foes, ignoring position."},512:{name:"Fists of Gemini",type:2,func:4,calc:1,arg1:2.1,range:6,prob:30,ward:1,desc:"Deal massive ATK-based damage to up to two foes, ignoring position."},513:{name:"Goblet of Truth",type:1,func:19,calc:0,arg1:0,arg2:5,arg3:0.3,arg4:1,range:8,prob:70,desc:"Chance to silence all foes for one turn at the start of battle."},514:{name:"Fragarach",type:2,func:4,calc:2,arg1:1.95,range:313,prob:30,ward:2,desc:"Heavy WIS-based damage to up to three foes, ignoring position. Increased if fewer foes."},515:{name:"The Sea's Favor",type:2,func:37,calc:2,arg1:2.85,arg2:0.4,arg3:27,arg4:21,range:6,prob:30,ward:2,desc:"Drains HP from up to two foes while dealing massive WIS-based damage, ignoring position."},516:{name:"Enthrall",type:1,func:19,calc:0,arg1:0,arg2:3,arg3:0.15,range:7,prob:70,desc:"Chance to freeze up to three foes at start of battle."},518:{name:"Sabre Dance",type:2,func:3,calc:1,arg1:1.45,range:314,prob:30,ward:1,desc:"ATK-based damage to up to four foes. Increased if fewer foes."},519:{name:"The Sea's Fury",type:2,func:4,calc:3,arg1:2.2,range:32,prob:30,ward:2,desc:"Deal massive AGI-based damage to up to four foes, ignoring position."},520:{name:"Tentacle Lash",type:2,func:4,calc:1,arg1:1.95,range:16,prob:30,ward:1,desc:"Deal heavy ATK-based damage to three random foes, ignoring position."},521:{name:"Horn Rush",type:2,func:3,calc:1,arg1:1.45,arg2:1,arg3:0.4,arg4:10,range:314,prob:30,ward:1,desc:"ATK-based damage to and sometimes poison up to four foes. Increased if fewer foes."},522:{name:"Flash of Silver",type:2,func:3,calc:3,arg1:1.25,range:20,prob:30,ward:1,desc:"Deal AGI-based damage to five random foes."},523:{name:"Glittering Scales",type:5,func:29,calc:0,arg1:0,arg2:0,arg3:8,arg4:1,range:21,prob:50,desc:"Remove the buffs of all foes after receiving an attack."},524:{name:"Twin-Tail Strike",type:2,func:34,calc:1,arg1:1.35,arg2:1,arg3:0.5,arg4:0.2,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes and sometimes greatly lower ATK, ignoring position."},525:{name:"Spirit-Candles",type:2,func:4,calc:3,arg1:1.45,range:19,prob:30,ward:2,desc:"Deal AGI-based damage to four random foes, ignoring position."},527:{name:"Water Blade",type:2,func:3,calc:3,arg1:1.45,range:19,prob:30,ward:1,desc:"Deal AGI-based damage to four random foes."},528:{name:"Wall of Water",type:1,func:1,calc:0,arg1:0.1,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars at start of battle."},529:{name:"Waterslice Claws",type:2,func:4,calc:2,arg1:1.7,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},530:{name:"Gift of the Lair",type:1,func:1,calc:0,arg1:0.1,arg2:3,range:3,prob:70,desc:"Raise WIS of self and adjacent familiars at start of battle."},532:{name:"Purging Flame",type:2,func:3,calc:1,arg1:1.7,range:7,prob:30,ward:1,desc:"Deal heavy ATK-based damage to up to three foes."},533:{name:"Boon of the Sea",type:1,func:1,calc:0,arg1:0.2,arg2:3,arg3:4,range:4,prob:70,desc:"Raise WIS and AGI of all party members."},534:{name:"Lava Torrent",type:1,func:19,calc:0,arg1:0,arg2:8,arg3:0.5,arg4:3000,range:7,prob:70,desc:"Chance to burn up to three foes at start of battle."},535:{name:"Eruption",type:2,func:4,calc:2,arg1:1.75,range:15,prob:30,ward:3,desc:"Deal heavy WIS-based damage to front/middle lines, ignoring position."},536:{name:"Arboreal Succor",type:2,func:40,calc:0,range:4,prob:70,desc:"Remove the debuffs of self and all allies."},538:{name:"Bronze Fist",type:2,func:4,calc:2,arg1:1.5,range:8,prob:30,ward:2,desc:"Deal heavy WIS-based damage to all foes, ignoring position."},539:{name:"Clockwork Guardian",type:16,func:1,calc:0,arg1:0.5,arg2:5,range:122,prob:70,desc:"Reduce physical damage taken by two random allies upon her death."},540:{name:"Mercy of the Star",type:1,func:1,calc:0,arg1:0.4,arg2:17,arg3:1.5,range:3,prob:70,desc:"Raise HP of self and adjacent familiars at beginning of battle."},541:{name:"Tears of the Star",type:2,func:18,calc:4,arg1:1,arg2:1,range:132,prob:70,desc:"Full restore HP of two party members."},542:{name:"Rampart Destroyer",type:2,func:3,calc:1,arg1:1.6,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes."},543:{name:"Devotion",type:2,func:6,calc:0,arg1:1,range:2,prob:50,desc:"Revive and fully restore HP of adjacent familiars."},544:{name:"Tail of the Scorpion",type:2,func:3,calc:3,arg1:1.05,arg2:1,arg3:0.3,arg4:10,range:20,prob:30,ward:1,desc:"Deal AGI-based damage to and sometimes envenom five random foes."},545:{name:"Whirl of Claws",type:2,func:3,calc:1,arg1:1.1,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},546:{name:"Death's March",type:2,func:36,calc:1,arg1:1.85,arg2:0.4,arg3:27,arg4:21,range:23,prob:30,ward:1,desc:"Drains HP from two random foes while dealing heavy ATK-based damage."},547:{name:"Death's Hunt",type:2,func:7,calc:3,arg1:1.8,arg2:0.1,range:23,prob:30,ward:1,desc:"Deal heavy AGI-based damage to two random foes. Chance to kill target."},548:{name:"Cannon Barrage",type:2,func:4,calc:1,arg1:1.75,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes, ignoring position."},549:{name:"Bond en Avant",type:2,func:21,calc:3,arg1:0.85,arg2:4,arg3:0.6,arg4:0.3,range:17,prob:30,ward:1,desc:"Deal AGI-based damage to six random foes and sometimes reduce AGI."},550:{name:"Judgment of the Sea",type:2,func:4,calc:2,arg1:1.3,range:208,prob:30,ward:2,desc:"WIS-based damage to all foes, ignoring position. Increased if fewer foes."},551:{name:"Moonlight",type:1,func:1,calc:0,arg1:0.4,arg2:8,range:21,prob:70,desc:"Raise the skill trigger rate of self by 40%."},552:{name:"Crescent Edge",type:2,func:3,calc:1,arg1:2.6,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},553:{name:"Wrath of Taurus",type:2,func:3,calc:1,arg1:0.9,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes."},554:{name:"Heart of Taurus",type:1,func:1,calc:1,arg1:1,arg2:17,arg3:1.5,range:21,prob:70,desc:"Raise HP of self at start of battle, based on 100% of his ATK."},555:{name:"Shredding Claws",type:2,func:3,calc:3,arg1:1.55,range:19,prob:30,ward:1,desc:"Deal heavy AGI-based damage to four random foes."},556:{name:"Scorching Tornado",type:2,func:33,calc:1,arg1:1.25,arg2:2,arg3:0.4,arg4:0.3,range:19,prob:30,ward:1,desc:"Deal ATK-based damage to four random foes and sometimes greatly lower DEF."},558:{name:"Blade of Conquest",type:2,func:3,calc:1,arg1:0.95,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes."},559:{name:"Grace of the Goddess",type:1,func:1,calc:0,arg1:0.3,arg2:1,arg3:2,range:3,prob:70,desc:"Raise ATK and DEF of self and adjacent familiars."},560:{name:"Yalli of the Blade",type:2,func:3,calc:1,arg1:1.15,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},561:{name:"Affection",type:1,func:1,calc:0,arg1:0.2,arg2:1,range:3,prob:70,desc:"Raise ATK of self and adjacent familiars."},562:{name:"Hewing Rood",type:3,func:13,calc:1,arg1:1.5,range:21,prob:50,ward:1,desc:"Chance to unleash a counter attack when struck."},563:{name:"Ablution",type:1,func:1,calc:0,arg1:0.7,arg2:2,arg3:3,range:21,prob:70,desc:"Raise DEF and WIS of self."},564:{name:"Rites of the Shikigami",type:2,func:4,calc:2,arg1:1.65,range:314,prob:30,ward:2,desc:"Heavy WIS-based damage to up to four foes. Increased if fewer foes."},565:{name:"Pierce the Veil",type:3,func:38,calc:6,arg1:0,arg2:1,arg3:0,arg4:60,arg5:5,range:7,prob:50,desc:"Greatly lower ATK of up to three foes when being attacked."},566:{name:"Divine Compass",type:1,func:32,calc:0,arg1:0.1,arg2:3,range:8,prob:70,desc:"Greatly lower WIS of all foes."},568:{name:"Scorching Wing",type:2,func:3,calc:3,arg1:0.9,arg2:3,arg3:0.3,range:17,prob:30,ward:1,desc:"Deal AGI-based damage to six random foes and sometimes freeze them."},569:{name:"Fallen Wing",type:16,func:16,calc:0,range:8,prob:70,desc:"Remove the buffs of all foes upon his death."},570:{name:"Glaring Sunlight",type:2,func:4,calc:2,arg1:1.6,arg2:7,arg3:0.35,arg4:2,arg5:0.9,range:8,prob:30,ward:2,desc:"Deal heavy WIS-based damage to all foes  and sometimes blind them, ignoring position."},571:{name:"Corona",type:1,func:1,calc:0,arg1:0.35,arg2:5,arg3:6,range:3,prob:70,desc:"Reduce physical and magic damages taken by self and adjacent familiars."},572:{name:"Venomflame",type:2,func:4,calc:2,arg1:2.3,arg2:3,arg3:0.4,range:16,prob:30,ward:3,desc:"Deal massive WIS-based damage, sometimes freeze three random foes, ignoring position."},573:{name:"Blare of Judgment",type:2,func:4,calc:2,arg1:1.15,arg2:5,arg3:0.3,arg4:1,range:17,prob:30,ward:2,desc:"Deal WIS-based damage and sometimes silence six random foes, ignoring position."},574:{name:"Winding Brass",type:2,func:3,calc:3,arg1:1.15,arg2:2,arg3:0.2,range:8,prob:30,ward:1,desc:"Deal AGI-based damage to all foes and sometimes paralyze targets."},577:{name:"Triple Tails",type:2,func:3,calc:3,arg1:1.5,range:7,prob:30,ward:1,desc:"Deal heavy AGI-based damage to up to three foes."},578:{name:"Divine Mace",type:5,func:14,calc:1,arg1:1.6,range:4,prob:50,ward:1,desc:"Take damage in place of any ally and unleash a heavy counterattack."},579:{name:"Intoxicate",type:2,func:4,calc:1,arg1:1.5,range:8,prob:30,ward:1,desc:"Deal heavy ATK-based damage to all foes, ignoring position."},580:{name:"Flurry of Fangs",type:2,func:4,calc:2,arg1:1.6,range:314,prob:30,ward:2,desc:"Heavy WIS-based damage to up to four foes. Increased if fewer foes."},581:{name:"Sacred Offering",type:1,func:32,calc:0,arg1:0.2,arg2:2,range:8,prob:70,desc:"Greatly lower DEF of all foes."},582:{name:"Crumble",type:2,func:4,calc:2,arg1:1.4,arg2:8,arg3:0.4,arg4:2000,range:20,prob:30,ward:2,desc:"Deal heavy WIS-based damage and sometimes burn five random foes, ignoring position."},585:{name:"Death's Call",type:2,func:34,calc:2,arg1:1.6,arg2:3,arg3:0.4,arg4:0.2,range:19,prob:30,ward:2,desc:"Heavy WIS-based damage to four random foes and sometimes greatly lower WIS."},586:{name:"Emerald Teeth",type:2,func:3,calc:3,arg1:1.3,range:419,prob:30,ward:1,desc:"Deal varying AGI-based damage to four random foes."},588:{name:"Tranquil Death",type:2,func:4,calc:3,arg1:1.45,range:20,prob:30,ward:2,desc:"Deal AGI-based damage to five random foes, ignoring position."},589:{name:"Unbridle",type:1,func:1,calc:0,arg1:1,arg2:18,range:21,prob:70,desc:"Allows self to perform an extra action during the next turn."},590:{name:"Macana Slash",type:2,func:3,calc:3,arg1:1.05,range:20,prob:30,ward:1,desc:"Deal AGI-based damage to five random foes."},591:{name:"Glittering Jade",type:1,func:1,calc:0,arg1:0.15,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars."},594:{name:"Holy Lash",type:2,func:37,calc:1,arg1:1.9,arg2:0.2,arg3:27,arg4:21,range:12,prob:30,ward:1,desc:"Heavy ATK-based damage and drain HP from all foes in the front line, ignoring position."},595:{name:"Shadow Whip",type:1,func:19,calc:0,arg1:0,arg2:7,arg3:0.2,arg4:1,arg5:0.9,range:7,prob:70,desc:"Chance to blind up to three foes for one turn at start of battle."},596:{name:"Masquerade",type:2,func:4,calc:2,arg1:0.75,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},597:{name:"Runaway Chariot",type:2,func:3,calc:3,arg1:1.35,range:314,prob:30,ward:1,desc:"AGI-based damage to up to four foes. Increased if fewer foes."},598:{name:"Entangle",type:16,func:32,calc:0,arg1:0.15,arg2:4,range:8,prob:70,desc:"Greatly lower AGI of all foes upon his death."},599:{name:"Poisoned Wine",type:2,func:4,calc:1,arg1:1.2,arg2:4,arg3:0.3,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes and sometimes disable them, ignoring position."},600:{name:"Poison-Laced Hood",type:3,func:41,calc:1,arg1:1.8,arg2:1,arg3:1,arg4:20,range:21,prob:50,ward:1,desc:"Chance of poisonous counter attack (20% of max HP) when struck, ignoring position."},601:{name:"Veil of Night",type:2,func:3,calc:3,arg1:1.85,range:19,prob:30,ward:1,desc:"Deal heavy AGI-based damage to four random foes."},602:{name:"Cake Cutting",type:2,func:3,calc:1,arg1:1.15,arg2:1,arg3:1,arg4:10,range:20,prob:30,ward:1,desc:"Deal venomous ATK-based damage to five random foes."},603:{name:"Bandage Garotte",type:2,func:37,calc:1,arg1:2.05,arg2:0.15,arg3:27,arg4:21,range:16,prob:30,ward:1,desc:"Massive ATK-based damage and drain HP from three random foes, ignoring position."},604:{name:"Blindside",type:2,func:4,calc:2,arg1:1.9,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage to three random foes, ignoring position."},605:{name:"Bone Shatter",type:2,func:3,calc:1,arg1:1.6,range:19,prob:30,ward:1,desc:"Deal heavy ATK-based damage to four random foes."},606:{name:"Overawe",type:5,func:28,calc:7,arg1:0.45,arg2:10,arg3:23,arg4:3,arg5:0.1,range:21,prob:50,desc:"Reflect 90% of AGI/WIS-based damage back to two random foes."},607:{name:"Breath of Darkness",type:2,func:4,calc:2,arg1:1.35,arg2:8,arg3:0.4,arg4:2500,range:8,prob:30,ward:3,desc:"Deal WIS-based damage to all foes and sometimes burn targets, ignoring position."},608:{name:"Hungry Wolf",type:2,func:33,calc:1,arg1:0.9,arg2:4,arg3:0.3,arg4:0.1,range:17,prob:30,ward:1,desc:"Deal ATK-based damage to six random foes and sometimes greatly lower AGI."},609:{name:"Harvest",type:2,func:3,calc:1,arg1:2.6,range:23,prob:30,ward:1,desc:"Deal massive ATK-based damage to two random foes."},610:{name:"Fickle Treat",type:1,func:1,calc:0,arg1:452,arg2:16,range:21,prob:70,desc:"Self is automatically revived with full HP after being killed."},611:{name:"Cruel Trick",type:2,func:3,calc:3,arg1:1.65,range:16,prob:30,ward:1,desc:"Deal heavy AGI-based damage to three random foes."},612:{name:"Triple Bite",type:2,func:4,calc:3,arg1:2.25,range:18,prob:30,ward:3,desc:"Massive AGI-based damage to three random foes, ignoring position. Attacks rear foes first."},613:{name:"Icy Smile",type:2,func:4,calc:2,arg1:1.95,arg2:3,arg3:0.5,range:16,prob:30,ward:2,desc:"Deal heavy WIS-based damage and sometimes freeze three random foes, ignoring position."},614:{name:"Following Orders",type:2,func:3,calc:1,arg1:1.2,arg2:5,arg3:0.2,arg4:2,range:8,prob:30,ward:1,desc:"Deal ATK-based damage to all foes and sometimes silence foes for 2 turns."},616:{name:"Cat Scratch",type:2,func:4,calc:2,arg1:1.25,range:20,prob:30,ward:2,desc:"Deal WIS-based damage to five random foes, ignoring position."},617:{name:"Tail Swish",type:1,func:1,calc:0,arg1:0.2,arg2:3,range:3,prob:70,desc:"Raise WIS of self and adjacent familiars, based on 20% of her WIS."},618:{name:"Jack-O'-Boom",type:2,func:4,calc:2,arg1:1.15,range:17,prob:30,ward:2,desc:"Deal WIS-based damage to six random foes, ignoring position."},619:{name:"Pumpkin Bulwark",type:1,func:1,calc:0,arg1:0.2,arg2:6,range:4,prob:70,desc:"Reduce magic damage taken by all allies."},620:{name:"Storm of Hooves",type:2,func:4,calc:2,arg1:2,range:23,prob:30,ward:2,desc:"Deal massive WIS-based damage to two random foes, ignoring position."},621:{name:"Devoted Arrows",type:2,func:4,calc:2,arg1:1.7,range:19,prob:30,ward:2,desc:"Deal heavy WIS-based damage to four random foes, ignoring position."},622:{name:"Deathbed Shot",type:16,func:4,calc:2,arg1:0.35,range:208,prob:70,ward:2,desc:"Deal WIS-based damage to all foes upon her death. Increased if fewer foes."},623:{name:"Steamsaw Assault",type:2,func:24,calc:0,range:21,prob:35,randSkills:[624,625,626,627],desc:"Strong weapon attack with unpredictable results."},624:{name:"Saw Swipe",type:2,func:4,calc:3,arg1:2.1,range:16,prob:30,ward:2,desc:"Deal AGI-based damage to three random foes, ignoring position."},625:{name:"Brutal Slash",type:2,func:4,calc:3,arg1:1.7,range:19,prob:30,ward:2,desc:"Deal AGI-based damage to four random foes, ignoring position."},626:{name:"Scatter Shot",type:2,func:4,calc:3,arg1:1.4,range:20,prob:30,ward:2,desc:"Deal AGI-based damage to five random foes, ignoring position."},627:{name:"Concussive Blast",type:2,func:4,calc:3,arg1:1.1,arg2:2,arg3:0.7,range:8,prob:30,ward:2,desc:"Deal AGI-based damage to and sometimes stun all foes, ignoring position."},628:{name:"Glittering Flame",type:3,func:13,calc:1,arg1:1.4,arg2:8,arg3:0.5,arg4:2500,range:21,prob:50,ward:1,desc:"Chance to unlease a burning counter attack when struck."},629:{name:"Slice and Dice",type:2,func:3,calc:1,arg1:0.7,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes."},630:{name:"Water's Fury",type:2,func:34,calc:2,arg1:1.75,arg2:1,arg3:0.3,arg4:0.1,range:19,prob:30,ward:2,desc:"Heavy WIS-based damage and sometimes greatly lower ATK of four random foes."},631:{name:"Water's Mercy",type:1,func:1,calc:0,arg1:0.25,arg2:17,arg3:1.25,range:3,prob:70,desc:"Raise HP of self and adjacent familiars at beginning of battle."},632:{name:"Fool's Rage",type:2,func:36,calc:1,arg1:1.35,arg2:0.2,arg3:27,arg4:21,range:419,prob:30,ward:1,desc:"Drains HP from four random foes while dealing varying ATK-based damage."},633:{name:"Fool's Theurgy",type:2,func:6,calc:0,arg1:1,range:101,prob:50,desc:"Revive and fully restore HP of 1 random familiar."},634:{name:"Airstrike Spear",type:2,func:33,calc:1,arg1:1.25,arg2:2,arg3:0.4,arg4:0.15,range:20,prob:30,ward:1,desc:"Deal ATK-based damage to five random foes and sometimes greatly lower DEF."},635:{name:"Frumious",type:2,func:4,calc:2,arg1:1.7,arg2:2,arg3:0.3,range:19,prob:30,ward:2,desc:"Heavy WIS-based damage to and sometimes paralyze four random foes, ignoring position."},636:{name:"Cold Tentacles",type:2,func:4,calc:2,arg1:1.3,arg2:3,arg3:0.25,range:20,prob:30,ward:3,desc:"Deal WIS-based damage and sometimes freeze five random foes, ignoring position."},637:{name:"Guandao and Claws",type:2,func:3,calc:1,arg1:1.4,range:419,prob:30,ward:1,desc:"Deal varying ATK-based damage to four random foes."},638:{name:"Nipping Wind",type:2,func:4,calc:3,arg1:1.25,range:17,prob:30,ward:2,desc:"Deal AGI-based damage to six random foes, ignoring position."},639:{name:"Breeze's Mercy",type:1,func:1,calc:0,arg1:0.25,arg2:4,range:3,prob:70,desc:"Raise AGI of self and adjacent familiars, based on 25% of her WIS."},10001:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10003:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10004:{name:"Standard Action",type:2,func:4,calc:2,arg1:1.05,arg2:2,arg3:0.2,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage, sometimes paralyzing target."},10005:{name:"Standard Action",type:2,func:4,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10006:{name:"Standard Action",type:2,func:3,calc:1,arg1:1.05,range:16,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to three random foes."},10007:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10008:{name:"Standard Action",type:2,func:4,calc:2,arg1:0.65,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10009:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,arg2:3,arg3:0.1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage and sometimes freeze target."},10010:{name:"Standard Action",type:2,func:4,calc:1,arg1:1.1,range:7,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage up to three foes."},10011:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10012:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:1,arg3:0.4,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes poison target."},10014:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:2,arg3:0.4,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage, sometimes paralyzing target."},10015:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10016:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10017:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:1,arg3:0.4,arg4:10,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes envenom target."},10018:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10019:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:3,isAutoAttack:true,desc:"WIS-based damage to one foe."},10020:{name:"Standard Action",type:2,func:3,calc:1,arg1:0.6,range:23,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to two random foes."},10021:{name:"Standard Action",type:2,func:4,calc:1,arg1:1.2,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10022:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10023:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10024:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:4,arg3:0.35,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes disable target."},10025:{name:"Standard Action",type:2,func:34,calc:1,arg1:1.2,arg2:4,arg3:0.3,arg4:0.2,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes greatly lower AGI of target."},10026:{name:"Standard Action",type:2,func:4,calc:2,arg1:1.3,arg2:2,arg3:0.5,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage, 50% chance to paralyze."},10027:{name:"Standard Action",type:2,func:4,calc:2,arg1:0.7,arg2:5,arg3:0.4,arg4:1,range:23,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to two random foes. 40% chance to silence."},10028:{name:"Standard Action",type:2,func:7,calc:1,arg1:1,arg2:0.1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage. Chance to kill target."},10029:{name:"Standard Action",type:2,func:4,calc:1,arg1:1.2,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10030:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:6,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to up to two foes."},10031:{name:"Standard Action",type:2,func:4,calc:2,arg1:1.3,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10032:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,arg2:7,arg3:0.35,arg4:2,arg5:0.9,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage and sometimes blind target."},10033:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:23,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to two random foes."},10034:{name:"Standard Action",type:2,func:3,calc:1,arg1:1.4,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10035:{name:"Standard Action",type:2,func:4,calc:1,arg1:1.3,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10036:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,arg2:8,arg3:0.4,arg4:2000,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage and sometimes burn target."},10037:{name:"Standard Action",type:2,func:4,calc:1,arg1:1,arg2:1,arg3:0.5,arg4:15,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes envenom target."},10038:{name:"Standard Action",type:2,func:36,calc:1,arg1:1,arg2:0.4,arg3:27,arg4:21,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and drain HP from target."},10039:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:1,arg3:0.5,arg4:15,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes envenom target."},10040:{name:"Standard Action",type:2,func:37,calc:1,arg1:1,arg2:0.2,arg3:27,arg4:21,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and drain HP from target."},10041:{name:"Standard Action",type:2,func:3,calc:1,arg1:1.2,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10042:{name:"Standard Action",type:2,func:4,calc:2,arg1:1.3,range:5,prob:100,ward:3,isAutoAttack:true,desc:"WIS-based damage to one foe."},10043:{name:"Standard Action",type:2,func:34,calc:2,arg1:1,arg2:2,arg3:0.5,arg4:0.3,range:5,prob:100,ward:3,isAutoAttack:true,desc:"WIS-based damage and sometimes greatly lower DEF."},10044:{name:"Standard Action",type:2,func:3,calc:1,arg1:1.2,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."},10045:{name:"Standard Action",type:2,func:37,calc:2,arg1:1,arg2:0.3,arg3:27,arg4:21,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage and drain HP from target."},10046:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage to one foe."},10047:{name:"Standard Action",type:2,func:4,calc:2,arg1:1,arg2:3,arg3:0.25,range:5,prob:100,ward:2,isAutoAttack:true,desc:"WIS-based damage and sometimes freeze target."},10048:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,arg2:2,arg3:0.25,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage and sometimes paralyze target."},10049:{name:"Standard Action",type:2,func:3,calc:1,arg1:1,range:5,prob:100,ward:1,isAutoAttack:true,desc:"ATK-based damage to one foe."}};var SkillLogicFactory=(function(){function a(){}a.getSkillLogic=function(b){switch(b){case 1:return new BuffSkillLogic();case 2:case 32:return new DebuffSkillLogic();case 38:return new OnHitDebuffSkillLogic();case 16:return new DispellSkillLogic();case 19:return new AfflictionSkillLogic();case 3:case 4:case 21:case 22:case 36:case 37:case 33:case 34:case 7:return new AttackSkillLogic();case 12:return new ProtectSkillLogic();case 27:return new EvadeSkillLogic();case 14:return new ProtectCounterSkillLogic();case 28:return new ProtectReflectSkillLogic();case 13:case 41:return new CounterSkillLogic();case 29:return new CounterDispellSkillLogic();case 40:return new ClearDebuffSkillLogic();case 11:return new DrainSkillLogic();case 20:return new SurviveSkillLogic();case 18:return new HealSkillLogic();case 6:return new ReviveSkillLogic();case 31:return new TurnOrderChangeSkillLogic();case 24:return new RandomSkillLogic();default:throw new Error("Invalid skillFunc or not implemented")}};return a})();var SkillLogic=(function(){function a(){this.battleModel=BattleModel.getInstance();this.logger=BattleLogger.getInstance();this.cardManager=CardManager.getInstance()}a.prototype.willBeExecuted=function(d){var c=(d.executor.isDead&&d.skill.skillType===16)||(!d.executor.isDead&&d.skill.skillType!==16);if(d.noProbCheck){var b=true}else{b=(Math.random()*100)<=(d.skill.maxProbability+d.executor.status.skillProbability*100+d.executor.bcAddedProb)}return(c&&d.executor.canAttack()&&d.executor.canUseSkill()&&b)};a.prototype.execute=function(b){throw new Error("Implement this")};a.prototype.clearAllCardsDamagePhaseData=function(){var b=this.cardManager.getAllCurrentMainCards();for(var c=0;c<b.length;c++){b[c].clearDamagePhaseData()}};return a})();var BuffSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor);return b.prototype.willBeExecuted.call(this,d)&&c};a.prototype.execute=function(g){var l=g.skill;var d=g.executor;l.getReady(d);if(l.skillFuncArg2!=9){var c=[l.skillFuncArg2];if(l.skillFuncArg3!=0&&l.skillFuncArg2!=17){c.push(l.skillFuncArg3)}}else{c=[1,2,3,4]}var n=ENUM.SkillCalcType[l.skillCalcType];var e=d.getStat(n);var k;while(k=l.getTarget(d)){for(var f=0;f<c.length;f++){var o=c[f];switch(o){case 1:case 2:case 3:case 4:if(l.skillRange==3){e=d.getStat(n)}var m=l.skillFuncArg1;var h=Math.round(m*e);break;case 5:case 6:case 7:case 8:case 18:case 16:h=l.skillFuncArg1;break;case 17:m=l.skillFuncArg1;h=Math.round(m*e);var i=~~(k.getOriginalHP()*l.skillFuncArg3);break;default:throw new Error("Wrong status type or not implemented")}k.changeStatus(o,h,false,i);this.logger.addMinorEvent({executorId:d.id,targetId:k.id,type:2,status:{type:o,isAllUp:l.skillFuncArg2==9},description:k.name+"'s "+ENUM.StatusType[o]+" increased by "+h,amount:h,skillId:l.id})}}};return a})(SkillLogic);var DebuffSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.execute=function(d){var c=d.skill;var f=d.executor;c.getReady(f);var e;while(e=c.getTarget(f)){this.battleModel.processDebuff(f,e,c)}};return a})(SkillLogic);var ClearStatusSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments);this.condFunc=function(c){return true};this.isDispelled=false}a.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor,this.getCondFunc());return b.prototype.willBeExecuted.call(this,d)&&c};a.prototype.getCondFunc=function(){var c=this;return function(d){return d.hasStatus(c.condFunc)}};a.prototype.execute=function(c){c.skill.getReady(c.executor);var d;while(d=c.skill.getTarget(c.executor)){d.clearAllStatus(this.condFunc);this.logger.addMinorEvent({executorId:c.executor.id,targetId:d.id,type:2,status:{type:0,isDispelled:this.isDispelled,isClearDebuff:!this.isDispelled},description:d.name+(this.isDispelled?" is dispelled.":" is cleared of debuffs."),skillId:c.skill.id})}};return a})(SkillLogic);var DispellSkillLogic=(function(b){__extends(a,b);function a(){b.call(this);this.condFunc=function(c){return c>0};this.isDispelled=true}return a})(ClearStatusSkillLogic);var ClearDebuffSkillLogic=(function(b){__extends(a,b);function a(){b.call(this);this.condFunc=function(c){return c<0};this.isDispelled=false}return a})(ClearStatusSkillLogic);var AfflictionSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.execute=function(c){c.skill.getReady(c.executor);var d;while(d=c.skill.getTarget(c.executor)){this.battleModel.processAffliction(c.executor,d,c.skill)}};return a})(SkillLogic);var AttackSkillLogic=(function(a){__extends(b,a);function b(){a.apply(this,arguments)}b.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor);return a.prototype.willBeExecuted.call(this,d)&&c};b.prototype.execute=function(e){var d=e.skill;d.getReady(e.executor);var c=d.range.targets;if(RangeFactory.isEnemyScaledRange(d.skillRange)){e.scaledRatio=RangeFactory.getScaledRatio(d.skillRange,c.length)}if(!RangeFactory.isEnemyRandomRange(e.skill.skillRange)&&e.skill.isIndirectSkill()){this.executeAoeAttack(e,c)}else{this.executeNonAoeAttack(e)}};b.prototype.executeNonAoeAttack=function(d){var e;var c=0;while((e=d.skill.getTarget(d.executor))&&!d.executor.isDead){if(RangeFactory.isEnemyVaryingRange(d.skill.skillRange)){var f=RangeFactory.getVaryingRatio(d.skill.skillRange,c)}this.processAttackAgainstSingleTarget(d.executor,e,d.skill,d.scaledRatio,f);c++}};b.prototype.executeAoeAttack=function(g,k){var m=g.skill;var e=g.executor;if(m.isIndirectSkill()){shuffle(k);var c=false;var f=[];for(var h=0;h<k.length;h++){var l=k[h];if(l.isDead){continue}var o=false;if(!c&&!f[l.id]){var j=this.battleModel.processProtect(e,l,m,f,g.scaledRatio);o=j.activated;if(o){c=true}}if(!o&&!f[l.id]){var n=l.getRandomDefenseSkill();var d={executor:l,skill:n,attacker:e};this.battleModel.processDamagePhase({attacker:e,target:l,skill:m,scaledRatio:g.scaledRatio});f[l.id]=true;if(!e.justMissed&&!l.justEvaded&&!l.isDead){if(Skill.isDebuffAttackSkill(m.id)){if(Math.random()<=m.skillFuncArg3){this.battleModel.processDebuff(e,l,m)}}else{if(m.skillFunc===3||m.skillFunc===4){this.battleModel.processAffliction(e,l,m)}}}if(n&&n.willBeExecuted(d)&&!c){n.execute(d);c=true}}if(m.skillFunc==36||m.skillFunc==37){this.processDrainPhase(e,m)}this.clearAllCardsDamagePhaseData()}}};b.prototype.processAttackAgainstSingleTarget=function(j,h,c,e,i){var d=this.battleModel.processProtect(j,h,c,null,e,i);if(!d.activated){var g=h.getRandomDefenseSkill();var f={executor:h,skill:g,attacker:j};this.battleModel.processDamagePhase({attacker:j,target:h,skill:c,scaledRatio:e,varyingRatio:i});if(!j.justMissed&&!h.justEvaded&&!h.isDead){if(Skill.isDebuffAttackSkill(c.id)){if(Math.random()<=c.skillFuncArg3){this.battleModel.processDebuff(j,h,c)}}else{if(c.skillFunc===3||c.skillFunc===4){this.battleModel.processAffliction(j,h,c)}}}if(g&&g.willBeExecuted(f)){g.execute(f)}}if(c.skillFunc==36||c.skillFunc==37){this.processDrainPhase(j,c)}this.clearAllCardsDamagePhaseData()};b.prototype.processDrainPhase=function(g,e){var d=RangeFactory.getRange(e.skillFuncArg4);d.getReady(g,function(h){return !h.isFullHealth()});console.assert(!(d instanceof RandomRange),"can't do this with random ranges!");if(d.targets.length==0){return}var c=Math.floor((g.lastBattleDamageDealt*e.skillFuncArg2)/d.targets.length);var f;while(f=d.getTarget(g)){this.battleModel.damageToTargetDirectly(f,-1*c," healing")}};return b})(SkillLogic);var ProtectSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments);this.counter=false}a.prototype.willBeExecuted=function(c){c.skill.getReady(c.executor);if(this.cardManager.isSameCard(c.targetCard,c.executor)&&c.skill.skillRange!=21){return false}console.assert(!(c.skill.range instanceof RandomRange),"can't do this with random ranges!");return b.prototype.willBeExecuted.call(this,c)&&this.cardManager.isCardInList(c.targetCard,c.skill.range.targets)};a.prototype.execute=function(c){return this.executeProtectPhase(c)};a.prototype.executeProtectPhase=function(e,c){var i=e.executor;var g=e.skill;var h=e.attackSkill;var f={};if(!c){this.logger.addMinorEvent({executorId:i.id,type:4,protect:{protectedId:e.targetCard.id,counter:this.counter,counteredSkillId:h.id,attackerId:e.attacker.id},description:i.name+" procs "+g.name+" to protect "+e.targetCard.name+". ",skillId:g.id})}if(g.skillFunc===28){var d=g.skillFuncArg5}this.battleModel.processDamagePhase({attacker:e.attacker,target:i,skill:h,scaledRatio:e.scaledRatio,varyingRatio:e.varyingRatio,dmgRatio:d});if(g.skillFunc===28){f.dmgTaken=i.lastBattleDamageTaken}if(!e.attacker.justMissed&&!i.isDead){if(h.skillFunc===3||h.skillFunc===4){this.battleModel.processAffliction(e.attacker,i,h)}else{if(Skill.isDebuffAttackSkill(h.id)){if(Math.random()<=h.skillFuncArg3){this.battleModel.processDebuff(e.attacker,i,h)}}}}if(e.targetsAttacked){e.targetsAttacked[i.id]=true}this.clearAllCardsDamagePhaseData();return f};return a})(SkillLogic);var EvadeSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(d){var c=d.skill;c.getReady(d.executor);if(this.cardManager.isSameCard(d.targetCard,d.executor)&&c.skillRange!=21){return false}var e=Skill.canProtectFromCalcType(c.skillFuncArg2,d.attackSkill)&&Skill.canProtectFromAttackType(c.skillFuncArg1,d.attackSkill);console.assert(!(c.range instanceof RandomRange),"can't do this with random ranges!");return b.prototype.willBeExecuted.call(this,d)&&this.cardManager.isCardInList(d.targetCard,c.range.targets)&&e};a.prototype.execute=function(c){c.executor.justEvaded=true;this.logger.addMinorEvent({executorId:c.executor.id,type:5,noProcEffect:true,description:c.executor.name+" procs "+c.skill.name,skillId:c.skill.id});this.battleModel.processDamagePhase({attacker:c.attacker,target:c.executor,skill:c.attackSkill,scaledRatio:c.scaledRatio,varyingRatio:c.varyingRatio});if(c.targetsAttacked){c.targetsAttacked[c.executor.id]=true}this.clearAllCardsDamagePhaseData();return{}};return a})(SkillLogic);var ProtectCounterSkillLogic=(function(a){__extends(b,a);function b(){a.call(this);this.counter=true}b.prototype.execute=function(c){var d=this.executeProtectPhase(c);var e=c.executor;if(!e.isDead&&e.canAttack()&&!c.attacker.isDead){this.battleModel.processDamagePhase({attacker:e,target:c.attacker,skill:c.skill,additionalDescription:e.name+" counters "+c.attacker.name+"! "})}return d};return b})(ProtectSkillLogic);var ProtectReflectSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(e){var c=e.skill;var d=Skill.canProtectFromCalcType(c.skillFuncArg2,e.attackSkill)&&Skill.canProtectFromAttackType(c.skillFuncArg4,e.attackSkill);return b.prototype.willBeExecuted.call(this,e)&&d};a.prototype.execute=function(d){var f=this.executeProtectPhase(d);if(d.executor.isDead||!d.executor.canUseSkill()){return f}var c=RangeFactory.getRange(d.skill.skillFuncArg3);c.getReady(d.executor);var e;while(e=c.getTarget(d.executor)){this.battleModel.processDamagePhase({attacker:d.executor,target:e,skill:d.skill,scaledRatio:d.scaledRatio,varyingRatio:d.varyingRatio,oriAttacker:d.attacker,oriAtkSkill:d.attackSkill,oriDmg:f.dmgTaken/d.skill.skillFuncArg5});if(d.attackSkill.skillFunc===3||d.attackSkill.skillFunc===4){this.battleModel.processAffliction(d.executor,e,d.attackSkill,a.REFLECT_AFFLICTION_PROBABILITY)}this.clearAllCardsDamagePhaseData()}return f};a.REFLECT_AFFLICTION_PROBABILITY=0.2;return a})(ProtectSkillLogic);var CounterSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(c){return b.prototype.willBeExecuted.call(this,c)&&!c.attacker.isDead};a.prototype.execute=function(c){this.logger.addMinorEvent({executorId:c.executor.id,type:5,description:c.executor.name+" procs "+c.skill.name+". ",skillId:c.skill.id});this.battleModel.processDamagePhase({attacker:c.executor,target:c.attacker,skill:c.skill,additionalDescription:c.executor.name+" counters "+c.attacker.name+"! "});if(!c.executor.justMissed&&!c.attacker.justEvaded&&!c.attacker.isDead){this.battleModel.processAffliction(c.executor,c.attacker,c.skill)}};return a})(SkillLogic);var CounterDispellSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments);this.condFunc=function(c){return c>0}}a.prototype.willBeExecuted=function(e){var c=RangeFactory.getRange(e.skill.skillFuncArg3);var d=c.hasValidTarget(e.executor,this.getCondFunc());return b.prototype.willBeExecuted.call(this,e)&&d};a.prototype.getCondFunc=function(){var c=this;return function(d){return d.hasStatus(c.condFunc)}};a.prototype.execute=function(d){var f=this.executeProtectPhase(d,true);if(d.executor.isDead||!d.executor.canUseSkill()){return f}this.logger.addMinorEvent({executorId:d.executor.id,type:5,description:d.executor.name+" procs "+d.skill.name,skillId:d.skill.id});var c=RangeFactory.getRange(d.skill.skillFuncArg3);c.getReady(d.executor,this.getCondFunc());var e;while(e=c.getTarget(d.executor)){e.clearAllStatus(this.condFunc);this.logger.addMinorEvent({executorId:d.executor.id,targetId:e.id,type:2,status:{type:0,isDispelled:true},description:e.name+" is dispelled.",skillId:d.skill.id})}return f};return a})(ProtectSkillLogic);var OnHitDebuffSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments);this.executionLeft=a.UNINITIALIZED_VALUE}a.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor);if(this.executionLeft==a.UNINITIALIZED_VALUE){this.executionLeft=d.skill.skillFuncArg5}if(this.executionLeft==0){return false}var e=b.prototype.willBeExecuted.call(this,d)&&c;if(e){this.executionLeft--;return true}else{return false}};a.prototype.execute=function(c){c.skill.getReady(c.executor);var d;this.logger.addMinorEvent({executorId:c.executor.id,type:5,description:c.executor.name+" procs "+c.skill.name+". ",skillId:c.skill.id});while(d=c.skill.getTarget(c.executor)){this.battleModel.processDebuff(c.executor,d,c.skill)}};a.UNINITIALIZED_VALUE=-1234;return a})(SkillLogic);var DrainSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor,this.getCondFunc());return b.prototype.willBeExecuted.call(this,d)&&c};a.prototype.getCondFunc=function(){return function(c){return !c.isFullHealth()}};a.prototype.execute=function(e){var c=e.skill;c.range.getReady(e.executor,this.getCondFunc());var f;this.logger.addMinorEvent({executorId:e.executor.id,type:5,description:e.executor.name+" procs "+c.name+". ",skillId:c.id});console.assert(!(c.range instanceof RandomRange),"can't do this with random ranges!");var d=Math.floor(e.executor.lastBattleDamageTaken/c.range.targets.length);while(f=c.getTarget(e.executor)){this.battleModel.damageToTargetDirectly(f,-1*d," healing")}};return a})(SkillLogic);var SurviveSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(c){var d=c.executor.getHPRatio();return b.prototype.willBeExecuted.call(this,c)&&(d>c.skill.skillFuncArg1)&&(c.wouldBeDamage>=c.executor.getHP())};a.prototype.execute=function(c){this.logger.addMinorEvent({executorId:c.executor.id,type:5,noProcEffect:true,description:c.executor.name+" procs "+c.skill.name+". ",skillId:c.skill.id})};return a})(SkillLogic);var HealSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor,this.getCondFunc());return b.prototype.willBeExecuted.call(this,d)&&c};a.prototype.getCondFunc=function(){return function(c){return !c.isFullHealth()}};a.prototype.execute=function(e){e.skill.range.getReady(e.executor,this.getCondFunc());var d=getHealAmount(e.executor);var g=e.skill.skillFuncArg1;var c=Math.floor(g*d);var f;while(f=e.skill.getTarget(e.executor)){if(e.skill.skillFuncArg2==1){c=g*f.getOriginalHP()}this.battleModel.damageToTargetDirectly(f,-1*c," healing")}};return a})(SkillLogic);var ReviveSkillLogic=(function(a){__extends(b,a);function b(){a.apply(this,arguments)}b.prototype.willBeExecuted=function(d){var c=d.skill.range.hasValidTarget(d.executor);return a.prototype.willBeExecuted.call(this,d)&&c};b.prototype.execute=function(c){c.skill.getReady(c.executor);var e=c.skill.skillFuncArg1;var d;while(d=c.skill.getTarget(c.executor)){d.revive(e);this.logger.addMinorEvent({executorId:c.executor.id,targetId:d.id,type:7,reviveHPRatio:e,description:d.name+" is revived with "+e*100+"% HP!",skillId:c.skill.id})}};return b})(SkillLogic);var TurnOrderChangeSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.willBeExecuted=function(c){return b.prototype.willBeExecuted.call(this,c)&&!this.battleModel.turnOrderChanged};a.prototype.execute=function(c){this.battleModel.turnOrderChanged=true;this.battleModel.turnOrderBase=c.skill.skillFuncArg1;this.battleModel.turnOrderChangeEffectiveTurns=c.skill.skillFuncArg2;this.logger.addMinorEvent({executorId:c.executor.id,type:51,description:"Turn order is now based on "+ENUM.BattleTurnOrderType[c.skill.skillFuncArg1]+" for "+c.skill.skillFuncArg2+" turn(s).",skillId:c.skill.id,battleDesc:"Turn Order Changed"})};return a})(SkillLogic);var RandomSkillLogic=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.execute=function(f){var c=SkillDatabase[f.skill.id].randSkills;shuffle(c);f.noProbCheck=true;for(var e=0;e<c.length;e++){var d=new Skill(c[e]);f.skill=d;if(d.willBeExecuted(f)){this.logger.addMinorEvent({executorId:f.executor.id,type:5,description:f.executor.name+" procs "+f.skill.name+". ",skillId:f.skill.id});d.execute(f);break}}};return a})(SkillLogic);var RangeFactory=(function(){function a(){}a.getRange=function(d,c){if(c===void 0){c=false}var b;if(this.isEnemyRandomRange(d)&&d!=18){b=this.createEnemyRandomRange(d)}else{if(this.isEnemyNearRange(d)||this.isEnemyNearScaledRange(d)){b=this.createEnemyNearRange(d)}else{if(this.isFriendRandomRange(d)){b=this.createFriendRandomRange(d,c)}else{b=this.createRange(d,c)}}}return b};a.isEnemyRandomRange=function(b){return !!a.ENEMY_RANDOM_RANGE_TARGET_NUM[b]||!!a.ENEMY_VARYING_RANDOM_RANGE_TARGET_NUM[b]||b==18};a.isFriendRandomRange=function(b){return !!a.FRIEND_RANDOM_RANGE_TARGET_NUM[b]};a.createEnemyRandomRange=function(c){if(this.isEnemyVaryingRange(c)){var b=a.ENEMY_VARYING_RANDOM_RANGE_TARGET_NUM[c]}else{b=a.ENEMY_RANDOM_RANGE_TARGET_NUM[c]}return new EnemyRandomRange(c,b)};a.createFriendRandomRange=function(c,b){return new FriendRandomRange(c,a.FRIEND_RANDOM_RANGE_TARGET_NUM[c],b)};a.isEnemyNearRange=function(b){return !!a.ENEMY_NEAR_RANGE_TARGET_NUM[b]};a.createEnemyNearRange=function(c){if(this.isEnemyNearRange(c)){var b=a.ENEMY_NEAR_RANGE_TARGET_NUM[c]}else{if(this.isEnemyNearScaledRange(c)){b=a.ENEMY_NEAR_SCALED_RANGE_TARGET_NUM[c]}}return new EnemyNearRange(c,b)};a.isEnemyNearScaledRange=function(b){return !!a.ENEMY_NEAR_SCALED_RANGE_TARGET_NUM[b]};a.isEnemyScaledRange=function(b){return this.isEnemyNearScaledRange(b)||b==208};a.isEnemyVaryingRange=function(b){return !!a.VaryingPatternParam[b]};a.getScaledRatio=function(d,c){var b=a.ScalePatternParams[d];if(!b){throw new Error("Invalid range for getting scale ratio")}return b[c-1]};a.getVaryingRatio=function(d,c){var b=a.VaryingPatternParam[d];if(!b){throw new Error("Invalid range for getting varying ratio")}return b[c]};a.isRowBasedRange=function(b){if(b===12||b===14||b===15){return true}return false};a.canBeAoeRange=function(c){var b=false;if(this.isEnemyNearRange(c)||this.isEnemyNearScaledRange(c)||this.isRowBasedRange(c)||c==8||c==208){b=true}return b};a.createRange=function(c,b){switch(c){case 1:return new EitherSideRange(c,b);case 2:return new BothSidesRange(c,b);case 3:return new SelfBothSidesRange(c);case 4:return new AllRange(c);case 8:case 208:return new EnemyAllRange(c);case 12:return new EnemyFrontAllRange(c);case 14:return new EnemyRearAllRange(c);case 15:return new EnemyFrontMidAllRange(c);case 21:return new SelfRange(c,b);case 28:return new RightRange(c);case 18:return new EnemyRearRandom3Range(c);default:throw new Error("Invalid range or not implemented")}};a.ENEMY_RANDOM_RANGE_TARGET_NUM={16:3,17:6,19:4,20:5,23:2};a.ENEMY_VARYING_RANDOM_RANGE_TARGET_NUM={419:4};a.ENEMY_NEAR_SCALED_RANGE_TARGET_NUM={312:2,313:3,314:4,315:5};a.ENEMY_NEAR_RANGE_TARGET_NUM={5:1,6:2,7:3,32:4,33:5};a.FRIEND_RANDOM_RANGE_TARGET_NUM={101:1,102:2,103:3,104:4,105:5,106:6,111:1,112:2,113:3,114:4,115:5,116:6,121:1,122:2,123:3,124:4,125:5,126:6,131:1,132:2,133:3,134:4,135:5,136:6};a.INCLUDE_SELF={111:true,112:true,113:true,114:true,115:true,116:true,131:true,132:true,133:true,134:true,135:true,136:true,332:true,333:true,334:true,335:true,336:true};a.IS_UNIQUE={121:true,122:true,123:true,124:true,125:true,126:true,131:true,132:true,133:true,134:true,135:true,136:true};a.ScalePatternParams={202:[1.5,1],203:[1.75,1.25,1],204:[1.9375,1.4375,1.25,1.13,1,1,1,1,1,1],208:[1.9375,1.4375,1.25,1.13,1],212:[1,1,1,1,1],213:[1,1,1,1,1],214:[1,1,1,1,1],215:[1,1,1,1,1],234:[1,1,1,1,1],312:[1.5,1],313:[1.75,1.25,1],314:[1.875,1.375,1.16,1],315:[1.9375,1.4375,1.25,1.13,1],322:[1.5,1],323:[1.75,1.25,1],324:[1.875,1.375,1.16,1],325:[1.875,1.375,1.16,1,1],326:[1.875,1.375,1.16,1,1,1],332:[1.5,1],333:[1.75,1.25,1],334:[1.875,1.375,1.16,1],335:[1.9375,1.4375,1.25,1.13,1],336:[1.9375,1.4375,1.25,1.13,1,1]};a.VaryingPatternParam={419:[0.9,1,1.15,1.35]};return a})();var BaseRange=(function(){function a(b){this.id=b}a.prototype.getBaseTargets=function(d){var b=CardManager.getInstance().getAllMainCardsInPlayerOrder();var c=[];for(var e=0;e<b.length;e++){if(d(b[e])){c.push(b[e])}}return c};a.prototype.getReady=function(c,b){throw new Error("Implement this")};a.prototype.hasValidTarget=function(e,b){this.getReady(e,b);var c=false;if(b){for(var d=0;d<this.targets.length;d++){if(b(this.targets[d])){c=true;break}}}else{c=this.targets.length>0}return c};a.prototype.getRandomCard=function(b){return getRandomElement(b)};a.prototype.getRandomUniqueCards=function(g,f){var d=g.length;while(d){var e=Math.floor(Math.random()*d);var c=g[--d];g[d]=g[e];g[e]=c}return g.slice(0,f)};a.prototype.getCondFunc=function(b){return function(c){if(c.isDead||(c.getPlayerId()===b.getPlayerId())){return false}return true}};a.prototype.satisfyDeadCondition=function(c,b){return(c.isDead&&b)||(!c.isDead&&!b)};a.prototype.getTarget=function(b){return this.targets[this.currentIndex++]};return a})();var BothSidesRange=(function(b){__extends(a,b);function a(d,c){b.call(this,d);this.selectDead=c}a.prototype.getReady=function(f){var c=[];this.currentIndex=0;var d=CardManager.getInstance().getLeftSideCard(f);if(d&&this.satisfyDeadCondition(d,this.selectDead)){c.push(d)}var e=CardManager.getInstance().getRightSideCard(f);if(e&&this.satisfyDeadCondition(e,this.selectDead)){c.push(e)}this.targets=c};return a})(BaseRange);var RandomRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.hasValidTarget=function(g,d){var c=this.getBaseTargets(this.getCondFunc(g));var e=false;if(d){for(var f=0;f<c.length;f++){if(d(c[f])){e=true;break}}}else{e=c.length>0}return e};return a})(BaseRange);var EnemyRandomRange=(function(a){__extends(b,a);function b(d,c){a.call(this,d);this.numTarget=c}b.prototype.getReady=function(c){this.numProcessed=0};b.prototype.getTarget=function(c){if(this.numProcessed<this.numTarget){this.numProcessed++;return this.getRandomCard(this.getBaseTargets(this.getCondFunc(c)))}else{return null}};return b})(RandomRange);var EitherSideRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(c){b.prototype.getReady.call(this,c);if(this.targets.length!=0){this.targets=[getRandomElement(this.targets)]}};return a})(BothSidesRange);var RightRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(f){var c=[];this.currentIndex=0;var e=CardManager.getInstance().getPlayerCurrentMainCards(f.player);for(var d=f.formationColumn+1;d<5;d++){if(!e[d].isDead){c.push(e[d])}}this.targets=c};return a})(BaseRange);var SelfRange=(function(a){__extends(b,a);function b(d,c){a.call(this,d);this.selectDead=c}b.prototype.getReady=function(d){var c=[];this.currentIndex=0;if(this.satisfyDeadCondition(d,this.selectDead)){c.push(d)}this.targets=c};return b})(BaseRange);var SelfBothSidesRange=(function(a){__extends(b,a);function b(){a.apply(this,arguments)}b.prototype.getReady=function(f){var c=[];this.currentIndex=0;var d=CardManager.getInstance().getLeftSideCard(f);if(d&&!d.isDead){c.push(d)}if(!f.isDead){c.push(f)}var e=CardManager.getInstance().getRightSideCard(f);if(e&&!e.isDead){c.push(e)}this.targets=c};return b})(BaseRange);var AllRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(f){var c=[];this.currentIndex=0;var e=CardManager.getInstance().getPlayerCurrentMainCards(f.player);for(var d=0;d<e.length;d++){if(!e[d].isDead){c.push(e[d])}}this.targets=c};return a})(BaseRange);var EnemyNearRange=(function(b){__extends(a,b);function a(d,c){b.call(this,d);this.numTarget=c;this.maxDistance=a.MAX_DISTANCE_FROM_CENTER[c]}a.prototype.getReady=function(h){this.currentIndex=0;var f=CardManager.getInstance().getNearestSingleOpponentTarget(h);if(!f){this.targets=[];return}var l=CardManager.getInstance().getEnemyCurrentMainCards(h.player);var d=[0,-1,1,-2,2];var k=[];var g=0;for(var j=0;j<d.length;j++){if(g>=this.numTarget||Math.abs(d[j])>this.maxDistance){break}var e=f.formationColumn+d[j];var c=l[e];if(c&&!c.isDead){g++;k.push(l[e])}}this.targets=k};a.MAX_DISTANCE_FROM_CENTER={1:1,2:1,3:1,4:2,5:2};return a})(BaseRange);var EnemyAllRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(g){var f=CardManager.getInstance().getEnemyCurrentMainCards(g.player);var c=[];this.currentIndex=0;for(var e=0;e<f.length;e++){var d=f[e];if(d&&!d.isDead){c.push(d)}}this.targets=c};return a})(BaseRange);var FriendRandomRange=(function(b){__extends(a,b);function a(e,d,c){b.call(this,e);this.numTargets=d;this.selectDead=c;this.isUnique=RangeFactory.FRIEND_RANDOM_RANGE_TARGET_NUM[e];this.includeSelf=RangeFactory.INCLUDE_SELF[e]}a.prototype.getReady=function(g,f){var d=this.getBaseTargets(this.getCondFunc(g,f));var c=[];this.currentIndex=0;if(d.length){if(this.isUnique){c=this.getRandomUniqueCards(d,this.numTargets)}else{for(var e=0;e<this.numTargets;e++){c.push(this.getRandomCard(d))}}}this.targets=c};a.prototype.getCondFunc=function(f,e){var c=this.selectDead;var d=this.includeSelf;return function(g){if(g.getPlayerId()!=f.getPlayerId()){return false}if(g.id===f.id&&!d){return false}if((c&&!g.isDead)||(!c&&g.isDead)){return false}if(e&&!e(g)){return false}return true}};return a})(RandomRange);var BaseRowRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getSameRowCards=function(f,g){var e=[];for(var d=0;d<f.length;d++){var c=f[d];if(c.getFormationRow()===g){e.push(c)}}return e};a.prototype.getRowCandidates=function(h,j,c){var g=[];if(!h||h.length===0){return g}var d=j;while(!g.length){var f=this.getSameRowCards(h,d);for(var e=0;e<f.length;e++){g.push(f[e])}d=(c)?d%a.ROW_TYPE_COUNT+1:d-1;if(d<1){d=3}if(d===j){break}}return g};a.ROW_TYPE_COUNT=3;return a})(BaseRange);var EnemyFrontMidAllRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(f){this.currentIndex=0;var d=this.getBaseTargets(this.getCondFunc(f));if(d.length){var e=this.getSameRowCards(d,1);var c=this.getSameRowCards(d,2);if(e.length>0||c.length>0){d=e.concat(c)}else{d=this.getSameRowCards(d,3)}}this.targets=d};return a})(BaseRowRange);var EnemyFrontAllRange=(function(b){__extends(a,b);function a(){b.apply(this,arguments)}a.prototype.getReady=function(d){this.currentIndex=0;var c=this.getBaseTargets(this.getCondFunc(d));if(c.length){c=this.getRowCandidates(c,1,true)}this.targets=c};return a})(BaseRowRange);var EnemyRearAllRange=(function(a){__extends(b,a);function b(){a.apply(this,arguments)}b.prototype.getReady=function(d){this.currentIndex=0;var c=this.getBaseTargets(this.getCondFunc(d));if(c.length){c=this.getRowCandidates(c,3,false)}this.targets=c};return b})(BaseRowRange);var EnemyRearRandom3Range=(function(a){__extends(b,a);function b(){a.apply(this,arguments)}b.prototype.getReady=function(c){this.numProcessed=0};b.prototype.getTarget=function(d){var c=RangeFactory.getRange(14);c.getReady(d);if(this.numProcessed<b.NUM_TARGET){this.numProcessed++;return this.getRandomCard(c.targets)}else{return null}};b.NUM_TARGET=3;return b})(RandomRange);function getRandomArbitary(b,a){return Math.random()*(a-b)+b}function getRandomInt(b,a){return Math.floor(Math.random()*(a-b+1))+b}function getURLParameter(a){return decodeURIComponent((new RegExp("[?|&]"+a+"=([^&;]+?)(&|#|;|$)").exec(location.search)||[,""])[1].replace(/\+/g,"%20"))||null}function shuffle(d){var c=d.length,b,a;while(0!==c){a=Math.floor(Math.random()*c);c-=1;b=d[c];d[c]=d[a];d[a]=b}return d}function getRandomElement(a){return a[Math.floor(Math.random()*a.length)]}function removeElementAtIndex(b,a){b.splice(a,1)}function pickRandomProperty(c){var a;var b=0;for(var d in c){if(Math.random()<1/++b){a=d}}return a}function getScaledFamiliarWikiaImageLink(d,f,c){var b="http://img"+d.charAt(0)+".wikia.nocookie.net/bloodbrothersgame/images/thumb/"+d.charAt(1)+"/"+d.substring(1)+"/";var e=f.replace(/,/g,"%2C").replace(/ /g,"_");var g=e+"_Figure.png";var a=b+g+"/"+c+"px-"+g;return a}function getSerializableObjectArray(c){var b=[];for(var a=0;a<c.length;a++){if(c[a]==null){b.push(null)}else{b.push(c[a].getSerializableObject())}}return b}function isChrome(){var a=a;var c=a.chrome,b=a.navigator.vendor;if(c!==null&&b==="Google Inc."){return true}else{return false}}function numberWithCommas(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}var BattleModel=(function(){function a(d,c,e){if(c===void 0){c={}}this.isBloodClash=false;this.procOrderType=1;this.isFinished=false;this.playerWon=null;this.p1_mainCards=[];this.p2_mainCards=[];this.p1_reserveCards=[];this.p2_reserveCards=[];this.p1_originalMainCards=[];this.p2_originalMainCards=[];this.p1_originalReserveCards=[];this.p2_originalReserveCards=[];this.allCurrentMainCards=[];this.allCardsById={};this.onDeathCards=[];this.turnOrderBase=0;this.turnOrderChangeEffectiveTurns=0;this.turnOrderChanged=false;if(a._instance){throw new Error("Error: Instantiation failed: Use getInstance() instead of new.")}a._instance=this;this.logger=BattleLogger.getInstance();this.cardManager=CardManager.getInstance();var g=new BattleGraphic();this.procOrderType=c.procOrder;if(c.battleType&&c.battleType==1){this.isBloodClash=true}var b=c.p1RandomMode?pickRandomProperty(Formation.FORMATION_CONFIG):d.p1_formation;var f=c.p2RandomMode?pickRandomProperty(Formation.FORMATION_CONFIG):d.p2_formation;this.p1RandomMode=c.p1RandomMode?c.p1RandomMode:0;this.p2RandomMode=c.p2RandomMode?c.p2RandomMode:0;this.player1=new Player(1,"Player 1",new Formation(b),1);this.player2=new Player(2,"Player 2",new Formation(f),1);BrigGenerator.initializeBrigs(d,c,e);this.cardManager.sortAllCurrentMainCards();g.displayFormationAndFamOnCanvas();if(!BattleLogger.IS_DEBUG_MODE){this.logger.displayInfoText();this.logger.displayWarningText()}}a.getInstance=function(){if(a._instance===null){throw new Error("Error: you should not make this object this way")}return a._instance};a.resetAll=function(){a.removeInstance();BattleLogger.removeInstance();BattleGraphic.removeInstance();CardManager.removeInstance()};a.removeInstance=function(){a._instance=null};a.prototype.getPlayerById=function(b){if(b===1){return this.player1}else{if(b===2){return this.player2}else{throw new Error("Invalid player")}}};a.prototype.getOppositePlayer=function(b){if(b===this.player1){return this.player2}else{if(b===this.player2){return this.player1}else{throw new Error("Invalid player")}}};a.prototype.processDamagePhase=function(e){var i=e.target;var k=this.getWouldBeDamage(e);var f=e.attacker.willMiss();if(f){k=0;e.attacker.justMissed=true}else{e.attacker.justMissed=false}var j=i.justEvaded;if(j){k=0}if(!f&&!j&&e.skill.skillFunc==7){if(Math.random()<=e.skill.skillFuncArg2){var c=true}}if(c){k=i.getHP()+i.status.hpShield}var b=~~i.status.hpShield;if(b>0&&!f&&!j&&!c){if(k>=b){i.status.hpShield=0;k-=b}else{i.status.hpShield=b-k;k=0}}var h=i.getSurviveSkill();var d={executor:i,skill:h,attacker:e.attacker,wouldBeDamage:k};if(h&&h.willBeExecuted(d)&&!c&&!f&&!j){h.execute(d);k=i.getHP()-1}i.changeHP(-1*k);i.lastBattleDamageTaken=k;e.attacker.lastBattleDamageDealt=k;if(!e.additionalDescription){e.additionalDescription=""}if(e.skill.skillFunc==28){if(i.hasWardOfType(e.oriAtkSkill.ward)){var l=e.oriAtkSkill.ward}}else{if(i.hasWardOfType(e.skill.ward)){l=e.skill.ward}}if(f){var g=e.attacker.name+" missed the attack on "+i.name}else{if(j){g=i.name+" evaded the attack!"}else{if(c){g=i.name+" is killed outright!"}else{g=e.additionalDescription+i.name+" lost "+k+"hp (remaining "+i.getHP()+"/"+i.originalStats.hp+")"}}}this.logger.addMinorEvent({executorId:e.attacker.id,targetId:i.id,type:1,amount:(-1)*k,description:g,skillId:e.skill.id,wardUsed:l,missed:f,evaded:j,isKilled:c});if(i.isDead){this.logger.displayMinorEvent(i.name+" is dead");this.addOnDeathCard(i)}};a.prototype.getWouldBeDamage=function(h){var c=h.attacker;var i=h.target;var b=h.skill;var g=b.skillFuncArg1;if(b.skillFunc!=28){var e=Skill.isPositionIndependentAttackSkill(b.id)}else{e=Skill.isPositionIndependentAttackSkill(h.oriAtkSkill.id)}var f;switch(b.skillCalcType){case (0):case (2):f=getDamageCalculatedByWIS(c,i);break;case (1):f=getDamageCalculatedByATK(c,i,e);break;case (3):f=getDamageCalculatedByAGI(c,i,e);break;case 7:f=getReflectAmount(h.oriAttacker,h.oriAtkSkill,h.attacker,i,e,h.oriDmg);break;default:throw new Error("Invalid calcType!")}var d=g*f;if(h.scaledRatio){d*=h.scaledRatio}if(h.varyingRatio){d*=h.varyingRatio}if(h.dmgRatio){d*=h.dmgRatio}if(b.skillFunc==28){b=h.oriAtkSkill}switch(b.ward){case 1:d=Math.round(d*(1-i.status.attackResistance));break;case 2:d=Math.round(d*(1-i.status.magicResistance));break;case 3:d=Math.round(d*(1-i.status.breathResistance));break;default:throw new Error("Wrong type of ward. Maybe you forgot to include in the skill?")}return d};a.prototype.damageToTargetDirectly=function(e,b,d){e.changeHP(-1*b);var f=" lost ";if(b<0){f=" gained "}var c=e.name+f+Math.abs(b)+" HP because of "+d;this.logger.addMinorEvent({targetId:e.id,type:1,amount:(-1)*b,description:c});if(e.isDead){this.logger.displayMinorEvent(e.name+" is dead");this.addOnDeathCard(e)}};a.prototype.processAffliction=function(i,h,b,d){var f=b.skillFuncArg2;var c=d?d:b.skillFuncArg3;if(!f){return}var e={};if(b.skillFuncArg4){if(f==1){e.percent=b.skillFuncArg4}else{if(f==5||f==7){e.turnNum=b.skillFuncArg4}else{if(f==8){e.damage=b.skillFuncArg4}}}}if(b.skillFuncArg5){e.missProb=b.skillFuncArg5}if(Math.random()<=c){h.setAffliction(f,e);if(f==1){var g=h.getPoisonPercent()}this.logger.addMinorEvent({executorId:i.id,targetId:h.id,type:3,affliction:{type:f,duration:e.turnNum,percent:g,missProb:e.missProb},description:h.name+" is now "+ENUM.AfflictionType[f]})}};a.prototype.processDebuff=function(c,g,h){var d,f;var b=false;if(h.skillFunc===21||h.skillFunc===22){d=h.skillFuncArg2;f=h.skillFuncArg4}else{if(h.skillFunc===2){d=h.skillFuncArg2;f=h.skillFuncArg1}else{if(h.skillFunc===32){d=h.skillFuncArg2;f=h.skillFuncArg1;b=true}else{if(h.skillFunc===33||h.skillFunc===34){d=h.skillFuncArg2;f=h.skillFuncArg4;b=true}else{if(h.skillFunc===38){d=h.skillFuncArg2;f=h.skillFuncArg1;b=true;if(h.skillFuncArg4){f=h.skillFuncArg4;var i=true}}else{throw new Error("Wrong skill to use with processDebuff()")}}}}}if(i){var k=-100}else{if(!b){k=getDebuffAmount(c,g)}else{k=getCasterBasedDebuffAmount(c)}}var e=Math.floor(k*f);g.changeStatus(d,e,b);var j=g.name+"'s "+ENUM.StatusType[d]+" decreased by "+Math.abs(e);this.logger.addMinorEvent({executorId:c.id,targetId:g.id,type:2,status:{type:d,isNewLogic:b},description:j,amount:e,skillId:h.id})};a.prototype.startBattle=function(){this.logger.startBattleLog();this.performOpeningSkills();while(!this.isFinished){this.logger.currentTurn++;this.logger.bblogTurn("Turn "+this.logger.currentTurn);if(this.turnOrderChangeEffectiveTurns==0){this.turnOrderBase=0}else{this.turnOrderChangeEffectiveTurns--}this.cardManager.updateAllCurrentMainCards();this.cardManager.sortAllCurrentMainCards();for(var g=0;g<10&&!this.isFinished;g++){var b=this.allCurrentMainCards[g];this.currentPlayer=b.player;this.currentPlayerMainCards=this.cardManager.getPlayerCurrentMainCards(this.currentPlayer);this.currentPlayerReserveCards=this.cardManager.getPlayerCurrentReserveCards(this.currentPlayer);this.oppositePlayer=this.getOppositePlayer(this.currentPlayer);this.oppositePlayerMainCards=this.cardManager.getPlayerCurrentMainCards(this.oppositePlayer);this.oppositePlayerReserveCards=this.cardManager.getPlayerCurrentReserveCards(this.oppositePlayer);if(b.isDead){var e=b.formationColumn;if(this.isBloodClash&&this.currentPlayerReserveCards[e]){var d=this.currentPlayerReserveCards[e];this.cardManager.switchCardInAllCurrentMainCards(b,d);this.currentPlayerMainCards[e]=d;this.currentPlayerReserveCards[e]=null;this.logger.addMajorEvent({description:b.name+" is switched by "+d.name});this.logger.addMinorEvent({description:b.name+" is switched by "+d.name,type:8,reserveSwitch:{mainId:b.id,reserveId:d.id}});b=d;var k=b.getRandomOpeningSkill();if(k){var f={executor:b,skill:k};if(k.willBeExecuted(f)){this.logger.addMajorEvent({description:b.name+" procs "+k.name,executorId:b.id,skillId:k.id});k.execute(f)}}}else{continue}}var j=!b.canAttack();if(j){this.logger.addMajorEvent({description:b.name+" missed a turn"})}this.processActivePhase(b,"FIRST");if(this.isFinished){break}if(!b.isDead&&b.status.willAttackAgain!=0){this.processActivePhase(b,"FIRST");b.status.willAttackAgain=0;if(this.isFinished){break}}if(!b.isDead){if(b.getAfflictionType()!=8){var c=b.updateAffliction()}if(!b.affliction&&c){var h=b.name+" is cured of affliction!";this.logger.addMinorEvent({targetId:b.id,type:3,affliction:{type:b.getAfflictionType(),isFinished:true},description:h})}this.processOnDeathPhase()}this.checkFinish()}if(!this.isFinished){this.processEndTurn()}}return this};a.prototype.addOnDeathCard=function(b){if(b.hasOnDeathSkill()){this.onDeathCards.push(b)}};a.prototype.checkFinish=function(){var b=this.onDeathCards.length===0;if(this.cardManager.isAllDeadPlayer(this.oppositePlayer)&&b){this.playerWon=this.currentPlayer}else{if(this.cardManager.isAllDeadPlayer(this.currentPlayer)&&b){this.playerWon=this.oppositePlayer}}if(this.playerWon){this.logger.addMajorEvent({description:this.playerWon.name+" has won"});this.logger.addMinorEvent({type:6,description:"Battle ended"});this.isFinished=true}};a.prototype.processActivePhase=function(b,c){if(b.getAfflictionType()==8){this.logger.addMajorEvent({description:b.name+"'s turn"});b.updateAffliction();this.checkFinish();if(b.isDead||this.isFinished){return}}var e=b.getRandomActiveSkill();if(c==="FIRST"&&b.isMounted){e=b.getFirstActiveSkill()}else{if(c==="SECOND"&&b.isMounted){e=b.getSecondActiveSkill()}}if(e){var d={executor:b,skill:e};if(e.willBeExecuted(d)){this.logger.addMajorEvent({description:b.name+" procs "+e.name,executorId:b.id,skillId:e.id});e.execute(d)}else{this.executeNormalAttack(b)}}else{this.executeNormalAttack(b)}this.processOnDeathPhase();this.checkFinish();if(this.isFinished){return}else{if(c==="FIRST"&&b.isMounted&&!b.isDead){this.processActivePhase(b,"SECOND")}}};a.prototype.processOnDeathPhase=function(){var c=[];for(var e=0;e<this.onDeathCards.length;e++){c.push(this.onDeathCards[e])}this.onDeathCards=[];for(e=0;e<c.length;e++){var d=c[e];var b=d.getInherentOnDeathSkill();var f={executor:d,skill:b};if(b&&b.willBeExecuted(f)){this.logger.addMinorEvent({executorId:d.id,type:5,description:d.name+" procs "+b.name+". ",skillId:b.id});b.execute(f)}b=d.getBuffOnDeathSkill();f={executor:d,skill:b};d.clearBuffOnDeathSkill();if(b&&b.willBeExecuted(f)){this.logger.addMinorEvent({executorId:d.id,type:5,description:d.name+" procs "+b.name+". ",skillId:b.id});b.execute(f)}}if(this.onDeathCards.length!==0){this.processOnDeathPhase()}};a.prototype.processEndTurn=function(){this.logger.addMajorEvent({description:"Turn end"});this.logger.addMinorEvent({type:6,description:"Turn end"});if(this.logger.currentTurn>=a.MAX_TURN_NUM){var j=this.cardManager.getPlayerAllCurrentCards(this.player1);var h=this.cardManager.getPlayerAllCurrentCards(this.player2);var f=this.cardManager.getTotalHPRatio(j);var e=this.cardManager.getTotalHPRatio(h);if(f>=e){this.playerWon=this.player1;var c="Decision win"}else{this.playerWon=this.player2;c="Decision loss"}this.isFinished=true;this.logger.addMajorEvent({description:"Decision win for "+this.playerWon.name});this.logger.addMinorEvent({type:51,description:"Decision win",battleDesc:c})}else{if(this.isBloodClash){var b=this.cardManager.getAllCurrentCards();for(var g=0;g<b.length;g++){var d=b[g];if(d&&!d.isDead){d.bcAddedProb+=10;this.logger.addMinorEvent({type:9,description:d.name+" gets 10% increase in skill prob.",bcAddProb:{targetId:d.id,isMain:this.cardManager.isCurrentMainCard(d)}})}}}}};a.prototype.executeNormalAttack=function(b){if(!b.canAttack()||b.isDead){return}this.logger.addMajorEvent({description:b.name+" attacks!",skillId:b.autoAttack.id,executorId:b.id});b.autoAttack.execute({executor:b,skill:b.autoAttack})};a.prototype.processProtect=function(c,h,m,d,n,b){var o=this.cardManager.getEnemyCurrentMainCards(c.player);var l=false;var g={};for(var e=0;e<o.length&&!l;e++){if(o[e].isDead){continue}var k=o[e].getRandomProtectSkill();if(k){var j=o[e];if(d&&d[j.id]){continue}var f={executor:j,skill:k,attacker:c,attackSkill:m,targetCard:h,targetsAttacked:d,scaledRatio:n,varyingRatio:b};if(k.willBeExecuted(f)){l=true;g=k.execute(f)}}else{continue}}g.activated=l;return g};a.prototype.performOpeningSkills=function(){var b=this.cardManager.getPlayerCurrentMainCardsByProcOrder(this.player1);var g=this.cardManager.getPlayerCurrentMainCardsByProcOrder(this.player2);for(var e=0;e<b.length;e++){var d=b[e].getRandomOpeningSkill();if(d){var f={executor:b[e],skill:d};if(d.willBeExecuted(f)){this.logger.addMajorEvent({description:b[e].name+" procs "+d.name,executorId:b[e].id,skillId:d.id});d.execute(f)}}}for(e=0;e<g.length;e++){var c=g[e].getRandomOpeningSkill();if(c){f={executor:g[e],skill:c};if(c.willBeExecuted(f)){this.logger.addMajorEvent({description:g[e].name+" procs "+c.name,executorId:g[e].id,skillId:c.id});c.execute(f)}}}this.turnOrderChanged=false};a.IS_MASS_SIMULATION=false;a.MAX_TURN_NUM=5;a._instance=null;return a})();